data/a2a.c-
Var: g is array of type char [line: 1]								   |	Var: g of array of type char [mem: Global loc: -12 size: 11] [line: 1]
.   Child: 0  Const is array "pipsissewa" of type char [line: 1]				   |	.   Child: 0  Const "pipsissewa" of array of type char [mem: Global loc: -1 size: 11] [line: 1]
Sibling: 1  Func: main returns type void [line: 2]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -24] [line: 3]
.   .   Child: 0  Var: a is array of type char [line: 4]					   |	.   .   Child: 0  Var: a of array of type char [mem: Local loc: -3 size: 11] [line: 4]
.   .   Sibling: 1  Var: b is array of type char [line: 4]					   |	.   .   Sibling: 1  Var: b of array of type char [mem: Local loc: -14 size: 11] [line: 4]
.   .   Child: 1  Assign: = of type char [line: 6]						   |	.   .   Child: 1  Assign: = of array of type char [line: 6]
.   .   .   Child: 0  Id: a of type char [line: 6]						   |	.   .   .   Child: 0  Id: a of array of type char [mem: Local loc: -3 size: 11] [line: 6]
.   .   .   Child: 1  Const is array "manifested" of type char [line: 6]			   |	.   .   .   Child: 1  Const "manifested" of array of type char [mem: Global loc: -23 size: 11] [
.   .   Sibling: 1  Assign: = of type char [line: 7]						   |	.   .   Sibling: 1  Assign: = of array of type char [line: 7]
.   .   .   Child: 0  Id: b of type char [line: 7]						   |	.   .   .   Child: 0  Id: b of array of type char [mem: Local loc: -14 size: 11] [line: 7]
.   .   .   Child: 1  Id: g of type char [line: 7]						   |	.   .   .   Child: 1  Id: g of array of type char [mem: Global loc: -12 size: 11] [line: 7]
.   .   Sibling: 2  Assign: = of type char [line: 8]						   |	.   .   Sibling: 2  Assign: = of array of type char [line: 8]
.   .   .   Child: 0  Id: b of type char [line: 8]						   |	.   .   .   Child: 0  Id: b of array of type char [mem: Local loc: -14 size: 11] [line: 8]
.   .   .   Child: 1  Id: a of type char [line: 8]						   |	.   .   .   Child: 1  Id: a of array of type char [mem: Local loc: -3 size: 11] [line: 8]
.   .   .   Child: 0  Id: b of type char [line: 9]						   |	.   .   .   Child: 0  Id: b of array of type char [mem: Local loc: -14 size: 11] [line: 9]
.   .   .   Child: 1  Id: a of type char [line: 9]						   |	.   .   .   Child: 1  Id: a of array of type char [mem: Local loc: -3 size: 11] [line: 9]
.   .   .   Child: 0  Const is array "unquestionable" of type char [line: 10]			   |	.   .   .   Child: 0  Const "unquestionable" of array of type char [mem: Global loc: -34 size: 1
.   .   .   Child: 1  Const is array "transformation" of type char [line: 10]			   |	.   .   .   Child: 1  Const "transformation" of array of type char [mem: Global loc: -49 size: 1
Sibling: 2  Var: endOfGlobals of type int [line: 12]						   |	Sibling: 2  Var: endOfGlobals of type int [mem: Global loc: -63 size: 1] [line: 12]
												   >	Offset for end of global space: -64
============================================================================================================
data/allbad.c-
============================================================================================================
data/allgood.c-
============================================================================================================
data/array2.c-
Var: w is array of type int [line: 2]								   |	Var: w of array of type int [mem: Global loc: -1 size: 34] [line: 2]
Sibling: 1  Func: dog returns type int [line: 4]						   |	Sibling: 1  Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0  Parm: x of type int [line: 4]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -27] [line: 4]
.   .   Child: 0  Var: y is array of type int [line: 5]						   |	.   .   Child: 0  Var: y of array of type int [mem: Local loc: -4 size: 23] [line: 5]
.   .   Sibling: 1  Var: z of type int [line: 5]						   |	.   .   Sibling: 1  Var: z of type int [mem: Local loc: -26 size: 1] [line: 5]
.   .   .   .   Child: 0  Id: y of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 23] [line: 7]
.   .   .   .   .   Child: 0  Id: x of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   Child: 0  Id: z of type int [line: 8]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -26 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: y of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 23] [line: 8]
.   .   .   .   Child: 0  Id: w of type int [line: 9]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Global loc: -1 size: 34] [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: w of type int [line: 9]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Global loc: -1 size: 
.   .   .   .   .   .   Child: 1  Id: x of type int [line: 9]					   |	.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 23] [line
.   .   .   .   Child: 1  Id: z of type int [line: 9]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -26 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: z of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -26 size: 1] [line: 11]
.   .   .   .   .   Child: 0  Id: y of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 23] [line: 11
Sibling: 2  Func: cat returns type void [line: 14]						   |	Sibling: 2  Func: cat returns type void [mem: Global loc: 0 size: -4] [line: 14]
.   Child: 0  Parm: x is array of type int [line: 14]						   |	.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 14]
.   Sibling: 1  Parm: z of type int [line: 14]							   |	.   Sibling: 1  Parm: z of type int [mem: Parameter loc: -3 size: 1] [line: 14]
.   Child: 1  Compound [line: 14]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 14]
.   .   .   .   Child: 0  Id: x of type int [line: 15]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 15]
.   .   .   .   Child: 0  Id: w of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Global loc: -1 size: 34] [line: 16]
.   .   Sibling: 2  For [line: 17]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -5] [line: 17]
.   .   .   Child: 0  Var: i of type int [line: 17]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 17]
.   .   .   .   .   Child: 0  Id: x of type int [line: 17]					   |	.   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line:
.   .   .   .   .   Child: 0  Id: w of type int [line: 18]					   |	.   .   .   .   .   Child: 0  Id: w of array of type int [mem: Global loc: -1 size: 34] [line: 1
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 18]					   |	.   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 18]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   .   .   Child: 0  Id: w of type int [line: 18]					   |	.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Global loc: -1 size: 34] [lin
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 18]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 18]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 
.   .   .   .   .   Child: 1  Id: z of type int [line: 18]					   |	.   .   .   .   .   Child: 1  Id: z of type int [mem: Parameter loc: -3 size: 1] [line: 18]
Sibling: 3  Func: main returns type void [line: 21]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 21]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 21]
.   .   Child: 0  Var: y is array of type int [line: 22]					   |	.   .   Child: 0  Var: y of array of type int [mem: Local loc: -3 size: 21] [line: 22]
.   .   .   Child: 0  Id: y of type int [line: 24]						   |	.   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -3 size: 21] [line: 24]
												   >	Offset for end of global space: -34
============================================================================================================
data/array.c-
Var: a is array of type int [line: 2]								   |	Var: a of array of type int [mem: Global loc: -1 size: 12] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -25] [line: 5]
.   .   Child: 0  Var: b is array of type int [line: 6]						   |	.   .   Child: 0  Var: b of array of type int [mem: Local loc: -3 size: 23] [line: 6]
.   .   Sibling: 1  Var: c is array of type int [line: 7]					   |	.   .   Sibling: 1  Var: c of static array of type int [mem: LocalStatic loc: -13 size: 34] [lin
.   .   .   Child: 0  Id: c of type int [line: 9]						   |	.   .   .   Child: 0  Id: c of static array of type int [mem: LocalStatic loc: -13 size: 34] [li
.   .   .   .   Child: 0  Id: a of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Global loc: -1 size: 12] [line: 11]
.   .   .   .   Child: 0  Id: b of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -3 size: 23] [line: 12]
.   .   .   .   Child: 0  Id: c of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: c of static array of type int [mem: LocalStatic loc: -13 size: 34]
												   >	Offset for end of global space: -46
============================================================================================================
data/arrayex.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -29] [line: 2]
.   .   Child: 0  Var: a is array of type int [line: 3]						   |	.   .   Child: 0  Var: a of array of type int [mem: Local loc: -3 size: 11] [line: 3]
.   .   Sibling: 1  Var: b is array of type int [line: 3]					   |	.   .   Sibling: 1  Var: b of array of type int [mem: Local loc: -14 size: 16] [line: 3]
.   .   Child: 1  Assign: = of type int [line: 5]						   |	.   .   Child: 1  Assign: = of array of type int [line: 5]
.   .   .   Child: 0  Id: a of type int [line: 5]						   |	.   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 11] [line: 5]
.   .   .   Child: 1  Id: b of type int [line: 5]						   |	.   .   .   Child: 1  Id: b of array of type int [mem: Local loc: -14 size: 16] [line: 5]
.   .   Sibling: 1  Assign: = of type int [line: 6]						   |	.   .   Sibling: 1  Assign: = of array of type int [line: 6]
.   .   .   Child: 0  Id: b of type int [line: 6]						   |	.   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -14 size: 16] [line: 6]
.   .   .   Child: 1  Id: a of type int [line: 6]						   |	.   .   .   Child: 1  Id: a of array of type int [mem: Local loc: -3 size: 11] [line: 6]
.   .   .   Child: 0  Id: b of type int [line: 7]						   |	.   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -14 size: 16] [line: 7]
.   .   .   Child: 1  Id: a of type int [line: 7]						   |	.   .   .   Child: 1  Id: a of array of type int [mem: Local loc: -3 size: 11] [line: 7]
.   .   .   Child: 0  Id: b of type int [line: 8]						   |	.   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -14 size: 16] [line: 8]
.   .   .   Child: 1  Id: a of type int [line: 8]						   |	.   .   .   Child: 1  Id: a of array of type int [mem: Local loc: -3 size: 11] [line: 8]
												   >	Offset for end of global space: 0
============================================================================================================
data/arrayops.c-
============================================================================================================
data/arrays2.c-
============================================================================================================
data/arrays.c-
============================================================================================================
data/arrayx.c-
============================================================================================================
data/assignb.c-
============================================================================================================
data/assignBool.c-
Var: gx of type bool [line: 2]									   |	Var: gx of type bool [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: gy is array of type bool [line: 2]						   |	Sibling: 1  Var: gy of array of type bool [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 2  Func: esperanza returns type void [line: 4]						   |	Sibling: 2  Func: esperanza returns type void [mem: Global loc: 0 size: -4] [line: 4]
.   Child: 0  Parm: px of type bool [line: 4]							   |	.   Child: 0  Parm: px of type bool [mem: Parameter loc: -2 size: 1] [line: 4]
.   Sibling: 1  Parm: py is array of type bool [line: 4]					   |	.   Sibling: 1  Parm: py of array of type bool [mem: Parameter loc: -3 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 5]
.   .   Child: 0  Var: x of type bool [line: 6]							   |	.   .   Child: 0  Var: x of type bool [mem: Local loc: -4 size: 1] [line: 6]
.   .   Sibling: 1  Var: y is array of type bool [line: 6]					   |	.   .   Sibling: 1  Var: y of array of type bool [mem: Local loc: -6 size: 11] [line: 6]
.   .   Sibling: 2  Var: sx of type bool [line: 7]						   |	.   .   Sibling: 2  Var: sx of static type bool [mem: LocalStatic loc: -12 size: 1] [line: 7]
.   .   Sibling: 3  Var: sy is array of type bool [line: 7]					   |	.   .   Sibling: 3  Var: sy of static array of type bool [mem: LocalStatic loc: -14 size: 11] [l
.   .   .   Child: 0  Id: gx of type bool [line: 9]						   |	.   .   .   Child: 0  Id: gx of type bool [mem: Global loc: 0 size: 1] [line: 9]
.   .   .   Child: 0  Id: gx of type bool [line: 10]						   |	.   .   .   Child: 0  Id: gx of type bool [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: gy of type bool [line: 11]					   |	.   .   .   .   Child: 0  Id: gy of array of type bool [mem: Global loc: -2 size: 11] [line: 11]
.   .   .   .   Child: 0  Id: gy of type bool [line: 12]					   |	.   .   .   .   Child: 0  Id: gy of array of type bool [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   Child: 0  Id: x of type bool [line: 13]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   Child: 0  Id: x of type bool [line: 14]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: y of type bool [line: 15]						   |	.   .   .   .   Child: 0  Id: y of array of type bool [mem: Local loc: -6 size: 11] [line: 15]
.   .   .   .   Child: 0  Id: y of type bool [line: 16]						   |	.   .   .   .   Child: 0  Id: y of array of type bool [mem: Local loc: -6 size: 11] [line: 16]
.   .   .   Child: 0  Id: px of type bool [line: 19]						   |	.   .   .   Child: 0  Id: px of type bool [mem: Parameter loc: -2 size: 1] [line: 19]
.   .   .   Child: 0  Id: px of type bool [line: 20]						   |	.   .   .   Child: 0  Id: px of type bool [mem: Parameter loc: -2 size: 1] [line: 20]
.   .   .   .   Child: 0  Id: py of type bool [line: 21]					   |	.   .   .   .   Child: 0  Id: py of array of type bool [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   Child: 0  Id: py of type bool [line: 22]					   |	.   .   .   .   Child: 0  Id: py of array of type bool [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   Child: 0  Id: sx of type bool [line: 23]						   |	.   .   .   Child: 0  Id: sx of static type bool [mem: LocalStatic loc: -12 size: 1] [line: 23]
.   .   .   Child: 0  Id: sx of type bool [line: 24]						   |	.   .   .   Child: 0  Id: sx of static type bool [mem: LocalStatic loc: -12 size: 1] [line: 24]
.   .   .   .   Child: 0  Id: sy of type bool [line: 25]					   |	.   .   .   .   Child: 0  Id: sy of static array of type bool [mem: LocalStatic loc: -14 size: 1
.   .   .   .   Child: 0  Id: sy of type bool [line: 26]					   |	.   .   .   .   Child: 0  Id: sy of static array of type bool [mem: LocalStatic loc: -14 size: 1
Sibling: 3  Func: main returns type void [line: 31]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 31]
.   Child: 1  Compound [line: 32]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 32]
.   .   Child: 0  Var: zx of type bool [line: 33]						   |	.   .   Child: 0  Var: zx of type bool [mem: Local loc: -2 size: 1] [line: 33]
.   .   Sibling: 1  Var: zy is array of type bool [line: 33]					   |	.   .   Sibling: 1  Var: zy of array of type bool [mem: Local loc: -4 size: 11] [line: 33]
.   .   .   Child: 0  Id: zx of type bool [line: 34]						   |	.   .   .   Child: 0  Id: zx of type bool [mem: Local loc: -2 size: 1] [line: 34]
.   .   .   Sibling: 1  Id: zy of type bool [line: 34]						   |	.   .   .   Sibling: 1  Id: zy of array of type bool [mem: Local loc: -4 size: 11] [line: 34]
												   >	Offset for end of global space: -24
============================================================================================================
data/assignChar.c-
Var: gx of type char [line: 2]									   |	Var: gx of type char [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: gy is array of type char [line: 2]						   |	Sibling: 1  Var: gy of array of type char [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 2  Func: esperanza returns type void [line: 4]						   |	Sibling: 2  Func: esperanza returns type void [mem: Global loc: 0 size: -4] [line: 4]
.   Child: 0  Parm: px of type char [line: 4]							   |	.   Child: 0  Parm: px of type char [mem: Parameter loc: -2 size: 1] [line: 4]
.   Sibling: 1  Parm: py is array of type char [line: 4]					   |	.   Sibling: 1  Parm: py of array of type char [mem: Parameter loc: -3 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 5]
.   .   Child: 0  Var: x of type char [line: 6]							   |	.   .   Child: 0  Var: x of type char [mem: Local loc: -4 size: 1] [line: 6]
.   .   Sibling: 1  Var: y is array of type char [line: 6]					   |	.   .   Sibling: 1  Var: y of array of type char [mem: Local loc: -6 size: 11] [line: 6]
.   .   Sibling: 2  Var: sx of type char [line: 7]						   |	.   .   Sibling: 2  Var: sx of static type char [mem: LocalStatic loc: -12 size: 1] [line: 7]
.   .   Sibling: 3  Var: sy is array of type char [line: 7]					   |	.   .   Sibling: 3  Var: sy of static array of type char [mem: LocalStatic loc: -14 size: 11] [l
.   .   .   Child: 0  Id: gx of type char [line: 9]						   |	.   .   .   Child: 0  Id: gx of type char [mem: Global loc: 0 size: 1] [line: 9]
.   .   .   Child: 0  Id: gx of type char [line: 10]						   |	.   .   .   Child: 0  Id: gx of type char [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: gy of type char [line: 11]					   |	.   .   .   .   Child: 0  Id: gy of array of type char [mem: Global loc: -2 size: 11] [line: 11]
.   .   .   .   Child: 0  Id: gy of type char [line: 12]					   |	.   .   .   .   Child: 0  Id: gy of array of type char [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   Child: 0  Id: x of type char [line: 13]						   |	.   .   .   Child: 0  Id: x of type char [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   Child: 0  Id: x of type char [line: 14]						   |	.   .   .   Child: 0  Id: x of type char [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: y of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: y of array of type char [mem: Local loc: -6 size: 11] [line: 15]
.   .   .   .   Child: 0  Id: y of type char [line: 16]						   |	.   .   .   .   Child: 0  Id: y of array of type char [mem: Local loc: -6 size: 11] [line: 16]
.   .   .   Child: 0  Id: px of type char [line: 18]						   |	.   .   .   Child: 0  Id: px of type char [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: px of type char [line: 19]						   |	.   .   .   Child: 0  Id: px of type char [mem: Parameter loc: -2 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: py of type char [line: 20]					   |	.   .   .   .   Child: 0  Id: py of array of type char [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   Child: 0  Id: py of type char [line: 21]					   |	.   .   .   .   Child: 0  Id: py of array of type char [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   Child: 0  Id: sx of type char [line: 22]						   |	.   .   .   Child: 0  Id: sx of static type char [mem: LocalStatic loc: -12 size: 1] [line: 22]
.   .   .   Child: 0  Id: sx of type char [line: 23]						   |	.   .   .   Child: 0  Id: sx of static type char [mem: LocalStatic loc: -12 size: 1] [line: 23]
.   .   .   .   Child: 0  Id: sy of type char [line: 24]					   |	.   .   .   .   Child: 0  Id: sy of static array of type char [mem: LocalStatic loc: -14 size: 1
.   .   .   .   Child: 0  Id: sy of type char [line: 25]					   |	.   .   .   .   Child: 0  Id: sy of static array of type char [mem: LocalStatic loc: -14 size: 1
Sibling: 3  Func: main returns type void [line: 30]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 30]
.   Child: 1  Compound [line: 31]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 31]
.   .   Child: 0  Var: zx of type char [line: 32]						   |	.   .   Child: 0  Var: zx of type char [mem: Local loc: -2 size: 1] [line: 32]
.   .   Sibling: 1  Var: zy is array of type char [line: 32]					   |	.   .   Sibling: 1  Var: zy of array of type char [mem: Local loc: -4 size: 11] [line: 32]
.   .   .   Child: 0  Id: zx of type char [line: 33]						   |	.   .   .   Child: 0  Id: zx of type char [mem: Local loc: -2 size: 1] [line: 33]
.   .   .   Sibling: 1  Id: zy of type char [line: 33]						   |	.   .   .   Sibling: 1  Id: zy of array of type char [mem: Local loc: -4 size: 11] [line: 33]
												   >	Offset for end of global space: -24
============================================================================================================
data/assignInt.c-
Var: gx of type int [line: 2]									   |	Var: gx of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: gy is array of type int [line: 2]						   |	Sibling: 1  Var: gy of array of type int [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 2  Func: esperanza returns type void [line: 4]						   |	Sibling: 2  Func: esperanza returns type void [mem: Global loc: 0 size: -4] [line: 4]
.   Child: 0  Parm: px of type int [line: 4]							   |	.   Child: 0  Parm: px of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Sibling: 1  Parm: py is array of type int [line: 4]						   |	.   Sibling: 1  Parm: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 6]
.   .   Sibling: 1  Var: y is array of type int [line: 6]					   |	.   .   Sibling: 1  Var: y of array of type int [mem: Local loc: -6 size: 11] [line: 6]
.   .   Sibling: 2  Var: sx of type int [line: 7]						   |	.   .   Sibling: 2  Var: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 7]
.   .   Sibling: 3  Var: sy is array of type int [line: 7]					   |	.   .   Sibling: 3  Var: sy of static array of type int [mem: LocalStatic loc: -14 size: 11] [li
.   .   .   Child: 0  Id: gx of type int [line: 9]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 9]
.   .   .   Child: 0  Id: gx of type int [line: 10]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: gy of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 11]
.   .   .   .   Child: 0  Id: gy of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   Child: 0  Id: x of type int [line: 13]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   Child: 0  Id: x of type int [line: 14]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: y of type int [line: 15]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 15]
.   .   .   .   Child: 0  Id: y of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 16]
.   .   .   Child: 0  Id: px of type int [line: 18]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: px of type int [line: 19]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: py of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 20
.   .   .   .   Child: 0  Id: py of type int [line: 21]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 21
.   .   .   Child: 0  Id: sx of type int [line: 22]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 22]
.   .   .   Child: 0  Id: sx of type int [line: 23]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 23]
.   .   .   .   Child: 0  Id: sy of type int [line: 24]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 25]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
Sibling: 3  Func: main returns type void [line: 30]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 30]
.   Child: 1  Compound [line: 31]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 31]
.   .   Child: 0  Var: zx of type int [line: 32]						   |	.   .   Child: 0  Var: zx of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   Sibling: 1  Var: zy is array of type int [line: 32]					   |	.   .   Sibling: 1  Var: zy of array of type int [mem: Local loc: -4 size: 11] [line: 32]
.   .   .   Child: 0  Id: zx of type int [line: 33]						   |	.   .   .   Child: 0  Id: zx of type int [mem: Local loc: -2 size: 1] [line: 33]
.   .   .   Sibling: 1  Id: zy of type int [line: 33]						   |	.   .   .   Sibling: 1  Id: zy of array of type int [mem: Local loc: -4 size: 11] [line: 33]
												   >	Offset for end of global space: -24
============================================================================================================
data/assignSmall.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -7] [line: 3]
.   .   Child: 0  Var: v of type int [line: 4]							   |	.   .   Child: 0  Var: v of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: w of type int [line: 4]						   |	.   .   Sibling: 1  Var: w of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: x of type int [line: 4]						   |	.   .   Sibling: 2  Var: x of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   Sibling: 3  Var: y of type int [line: 4]						   |	.   .   Sibling: 3  Var: y of type int [mem: Local loc: -5 size: 1] [line: 4]
.   .   Sibling: 4  Var: z of type int [line: 4]						   |	.   .   Sibling: 4  Var: z of type int [mem: Local loc: -6 size: 1] [line: 4]
.   .   .   Child: 0  Id: v of type int [line: 6]						   |	.   .   .   Child: 0  Id: v of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: v of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 0  Id: v of type int [line: 7]						   |	.   .   .   Child: 0  Id: v of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: v of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   Sibling: 2  Id: w of type int [line: 8]							   |	.   .   Sibling: 2  Id: w of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   Sibling: 3  Id: w of type int [line: 9]							   |	.   .   Sibling: 3  Id: w of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   Child: 0  Id: v of type int [line: 10]						   |	.   .   .   Child: 0  Id: v of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   Child: 1  Id: w of type int [line: 10]						   |	.   .   .   Child: 1  Id: w of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 0  Id: x of type int [line: 11]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   Child: 0  Id: x of type int [line: 12]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -5 size: 1] [line: 13]
.   .   .   Child: 0  Id: y of type int [line: 14]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -5 size: 1] [line: 14]
.   .   .   Child: 0  Id: z of type int [line: 15]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -6 size: 1] [line: 15]
.   .   .   Child: 0  Id: z of type int [line: 16]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -6 size: 1] [line: 16]
												   >	Offset for end of global space: 0
============================================================================================================
data/badarray.c-
============================================================================================================
data/badcontrol.c-
ERROR(52): Symbol 'zog' is not declared.							   <
												   >	ERROR(52): Symbol 'zog' is not declared.
============================================================================================================
data/basicAll5.c-
												   >	ERROR(177): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type
ERROR(177): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type   <
												   >	ERROR(178): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type
												   >	ERROR(178): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type
ERROR(178): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type   <
ERROR(178): '*' requires operands of type int but lhs is of type char.				   <
ERROR(178): Expecting type char in parameter 1 of call to 'emu' declared on line 53 but got type   <
												   >	ERROR(178): '*' requires operands of type int but lhs is of type char.
============================================================================================================
data/basicExtra.c-
============================================================================================================
data/break2.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: i of type int [line: 4]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: i of type int [line: 6]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 1  Compound [line: 7]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 7]
.   .   .   .   .   Child: 1  Compound [line: 8]						   |	.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 8]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 9]				   |	.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 10]				   |	.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 11]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 14]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   .   Child: 0  Id: i of type int [line: 16]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 16]
												   >	Offset for end of global space: 0
============================================================================================================
data/break3.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 1  For [line: 5]								   |	.   .   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 5]
.   .   .   .   Child: 0  Var: x of type int [line: 5]						   |	.   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   .   .   .   Child: 1  Id: x of type int [line: 5]					   |	.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 5]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 5]
												   >	Offset for end of global space: 0
============================================================================================================
data/break4.c-
============================================================================================================
data/break.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
.   .   .   Child: 1  Compound [line: 4]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 4]
												   >	Offset for end of global space: 0
============================================================================================================
data/call2.c-
Func: three returns type void [line: 2]								   |	Func: three returns type void [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: z is array of type int [line: 2]						   |	.   Child: 0  Parm: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   .   Child: 0  Id: z of type int [line: 3]						   |	.   .   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   .   .   .   Child: 0  Id: z of type int [line: 4]						   |	.   .   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 4]
Sibling: 1  Func: two returns type void [line: 9]						   |	Sibling: 1  Func: two returns type void [mem: Global loc: 0 size: -3] [line: 9]
.   Child: 0  Parm: y is array of type int [line: 9]						   |	.   Child: 0  Parm: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   Child: 1  Compound [line: 9]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 9]
.   .   .   .   Child: 0  Id: y of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   .   .   Child: 0  Id: y of type int [line: 11]						   |	.   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: y of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 12]
Sibling: 2  Func: one returns type void [line: 16]						   |	Sibling: 2  Func: one returns type void [mem: Global loc: 0 size: -3] [line: 16]
.   Child: 0  Parm: x is array of type int [line: 16]						   |	.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 16]
.   Child: 1  Compound [line: 16]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 16]
.   .   .   .   Child: 0  Id: x of type int [line: 17]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 17]
.   .   .   Child: 0  Id: x of type int [line: 18]						   |	.   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: x of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 19]
Sibling: 3  Func: main returns type void [line: 23]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 23]
.   Child: 1  Compound [line: 24]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -13] [line: 24]
.   .   Child: 0  Var: w is array of type int [line: 25]					   |	.   .   Child: 0  Var: w of array of type int [mem: Local loc: -3 size: 11] [line: 25]
.   .   .   .   Child: 0  Id: w of type int [line: 27]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 27]
.   .   .   Child: 0  Id: w of type int [line: 28]						   |	.   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 28]
.   .   .   .   Child: 0  Id: w of type int [line: 29]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 29]
												   >	Offset for end of global space: 0
============================================================================================================
data/call3.c-
Func: three returns type int [line: 2]								   |	Func: three returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: z is array of type int [line: 2]						   |	.   Child: 0  Parm: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   .   Child: 0  Id: z of type int [line: 3]						   |	.   .   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   .   .   .   Child: 0  Id: z of type int [line: 4]						   |	.   .   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   .   Child: 0  Id: z of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 7]
Sibling: 1  Func: two returns type int [line: 11]						   |	Sibling: 1  Func: two returns type int [mem: Global loc: 0 size: -3] [line: 11]
.   Child: 0  Parm: y is array of type int [line: 11]						   |	.   Child: 0  Parm: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Child: 1  Compound [line: 11]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 11]
.   .   .   .   Child: 0  Id: y of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 12]
.   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: y of type int [line: 14]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: y of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -2 size: 1] [line: 16]
Sibling: 2  Func: one returns type int [line: 20]						   |	Sibling: 2  Func: one returns type int [mem: Global loc: 0 size: -3] [line: 20]
.   Child: 0  Parm: x is array of type int [line: 20]						   |	.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   Child: 1  Compound [line: 20]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 20]
.   .   .   .   Child: 0  Id: x of type int [line: 21]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 21]
.   .   .   Child: 0  Id: x of type int [line: 22]						   |	.   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 22]
.   .   .   .   Child: 0  Id: x of type int [line: 23]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 23]
.   .   .   .   Child: 0  Id: x of type int [line: 25]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 25]
Sibling: 3  Func: main returns type void [line: 29]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 29]
.   Child: 1  Compound [line: 30]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -13] [line: 30]
.   .   Child: 0  Var: w is array of type int [line: 31]					   |	.   .   Child: 0  Var: w of array of type int [mem: Local loc: -3 size: 11] [line: 31]
.   .   .   .   Child: 0  Id: w of type int [line: 33]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 33]
.   .   .   .   Child: 0  Id: w of type int [line: 34]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 34]
.   .   .   .   Child: 0  Id: w of type int [line: 35]						   |	.   .   .   .   Child: 0  Id: w of array of type int [mem: Local loc: -3 size: 11] [line: 35]
												   >	Offset for end of global space: 0
============================================================================================================
data/call4.c-
Func: showInt returns type int [line: 2]							   |	Func: showInt returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   .   Child: 0  Id: x of type int [line: 4]						   |	.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]
Sibling: 1  Func: showIntArray returns type int [line: 8]					   |	Sibling: 1  Func: showIntArray returns type int [mem: Global loc: 0 size: -4] [line: 8]
.   Child: 0  Parm: x is array of type int [line: 8]						   |	.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   Sibling: 1  Parm: size of type int [line: 8]						   |	.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 8]
.   Child: 1  Compound [line: 9]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 9]
.   .   Child: 0  Var: i of type int [line: 10]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 0  Id: i of type int [line: 11]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: i of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   .   Child: 1  Id: size of type int [line: 12]					   |	.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 12]
.   .   .   Child: 1  Compound [line: 12]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 13]					   |	.   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 13]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   .   Child: 0  Id: i of type int [line: 14]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 14]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 14]
Sibling: 2  Func: showBool returns type int [line: 19]						   |	Sibling: 2  Func: showBool returns type int [mem: Global loc: 0 size: -3] [line: 19]
.   Child: 0  Parm: x of type bool [line: 19]							   |	.   Child: 0  Parm: x of type bool [mem: Parameter loc: -2 size: 1] [line: 19]
.   Child: 1  Compound [line: 20]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 20]
.   .   .   Child: 0  Id: x of type bool [line: 21]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Parameter loc: -2 size: 1] [line: 21]
Sibling: 3  Func: truth returns type bool [line: 25]						   |	Sibling: 3  Func: truth returns type bool [mem: Global loc: 0 size: -2] [line: 25]
.   Child: 1  Compound [line: 26]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 26]
Sibling: 4  Func: magic returns type int [line: 30]						   |	Sibling: 4  Func: magic returns type int [mem: Global loc: 0 size: -2] [line: 30]
.   Child: 1  Compound [line: 31]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 31]
Sibling: 5  Func: sqr returns type int [line: 35]						   |	Sibling: 5  Func: sqr returns type int [mem: Global loc: 0 size: -3] [line: 35]
.   Child: 0  Parm: x of type int [line: 35]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 35]
.   Child: 1  Compound [line: 36]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 36]
.   .   .   .   Child: 0  Id: x of type int [line: 37]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 37]
.   .   .   .   Child: 1  Id: x of type int [line: 37]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 37]
Sibling: 6  Func: add returns type int [line: 40]						   |	Sibling: 6  Func: add returns type int [mem: Global loc: 0 size: -4] [line: 40]
.   Child: 0  Parm: x of type int [line: 40]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 40]
.   Sibling: 1  Parm: y of type int [line: 40]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 40]
.   Child: 1  Compound [line: 41]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 41]
.   .   .   .   Child: 0  Id: x of type int [line: 42]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 42]
.   .   .   .   Child: 1  Id: y of type int [line: 42]						   |	.   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 42]
Sibling: 7  Func: mul returns type int [line: 45]						   |	Sibling: 7  Func: mul returns type int [mem: Global loc: 0 size: -4] [line: 45]
.   Child: 0  Parm: x of type int [line: 45]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 45]
.   Sibling: 1  Parm: y of type int [line: 45]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 45]
.   Child: 1  Compound [line: 46]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 46]
.   .   .   .   Child: 0  Id: x of type int [line: 47]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 47]
.   .   .   .   Child: 1  Id: y of type int [line: 47]						   |	.   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 47]
Sibling: 8  Var: g of type int [line: 50]							   |	Sibling: 8  Var: g of type int [mem: Global loc: 0 size: 1] [line: 50]
Sibling: 9  Func: caller returns type void [line: 52]						   |	Sibling: 9  Func: caller returns type void [mem: Global loc: 0 size: -4] [line: 52]
.   Child: 0  Parm: x of type int [line: 52]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 52]
.   Sibling: 1  Parm: y is array of type int [line: 52]						   |	.   Sibling: 1  Parm: y of array of type int [mem: Parameter loc: -3 size: 1] [line: 52]
.   Child: 1  Compound [line: 53]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 53]
.   .   Child: 0  Var: z of type int [line: 54]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -4 size: 1] [line: 54]
.   .   Sibling: 1  Var: a of type int [line: 55]						   |	.   .   Sibling: 1  Var: a of type int [mem: Local loc: -5 size: 1] [line: 55]
.   .   .   Child: 0  Id: a of type int [line: 57]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 57]
.   .   .   Child: 0  Id: g of type int [line: 58]						   |	.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 58]
.   .   .   Child: 0  Id: z of type int [line: 60]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 60]
.   .   .   .   Child: 0  Id: x of type int [line: 60]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 60]
.   .   .   Child: 0  Id: z of type int [line: 61]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 61]
.   .   .   Child: 0  Id: z of type int [line: 64]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 64]
.   .   .   .   .   Child: 0  Id: y of type int [line: 64]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Parameter loc: -3 size: 1] [line:
.   .   .   Child: 0  Id: z of type int [line: 65]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 65]
.   .   .   Child: 0  Id: z of type int [line: 68]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 68]
.   .   .   .   Child: 0  Id: a of type int [line: 68]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 68]
.   .   .   Child: 0  Id: z of type int [line: 69]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 69]
.   .   .   Child: 0  Id: z of type int [line: 72]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 72]
.   .   .   .   Child: 0  Id: g of type int [line: 72]						   |	.   .   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 72]
.   .   .   Child: 0  Id: z of type int [line: 73]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 73]
Sibling: 10  Func: swap returns type void [line: 77]						   |	Sibling: 10  Func: swap returns type void [mem: Global loc: 0 size: -5] [line: 77]
.   Child: 0  Parm: x is array of type int [line: 77]						   |	.   Child: 0  Parm: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 77]
.   Sibling: 1  Parm: z1 of type int [line: 77]							   |	.   Sibling: 1  Parm: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 77]
.   Sibling: 2  Parm: z2 of type int [line: 77]							   |	.   Sibling: 2  Parm: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 77]
.   Child: 1  Compound [line: 78]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 78]
.   .   Child: 0  Var: tmp of type int [line: 79]						   |	.   .   Child: 0  Var: tmp of type int [mem: Local loc: -5 size: 1] [line: 79]
.   .   .   Child: 0  Id: tmp of type int [line: 80]						   |	.   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 80]
.   .   .   .   Child: 0  Id: x of type int [line: 80]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 80]
.   .   .   .   Child: 1  Id: z1 of type int [line: 80]						   |	.   .   .   .   Child: 1  Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 80]
.   .   .   .   Child: 0  Id: x of type int [line: 81]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 81]
.   .   .   .   Child: 1  Id: z1 of type int [line: 81]						   |	.   .   .   .   Child: 1  Id: z1 of type int [mem: Parameter loc: -3 size: 1] [line: 81]
.   .   .   .   Child: 0  Id: x of type int [line: 81]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 81]
.   .   .   .   Child: 1  Id: z2 of type int [line: 81]						   |	.   .   .   .   Child: 1  Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 81]
.   .   .   .   Child: 0  Id: x of type int [line: 82]						   |	.   .   .   .   Child: 0  Id: x of array of type int [mem: Parameter loc: -2 size: 1] [line: 82]
.   .   .   .   Child: 1  Id: z2 of type int [line: 82]						   |	.   .   .   .   Child: 1  Id: z2 of type int [mem: Parameter loc: -4 size: 1] [line: 82]
.   .   .   Child: 1  Id: tmp of type int [line: 82]						   |	.   .   .   Child: 1  Id: tmp of type int [mem: Local loc: -5 size: 1] [line: 82]
Sibling: 11  Func: main returns type void [line: 85]						   |	Sibling: 11  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 85]
.   Child: 1  Compound [line: 86]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 86]
.   .   Child: 0  Var: p of type int [line: 87]							   |	.   .   Child: 0  Var: p of type int [mem: Local loc: -2 size: 1] [line: 87]
.   .   Sibling: 1  Var: q of type int [line: 87]						   |	.   .   Sibling: 1  Var: q of type int [mem: Local loc: -3 size: 1] [line: 87]
.   .   Sibling: 2  Var: r is array of type int [line: 87]					   |	.   .   Sibling: 2  Var: r of array of type int [mem: Local loc: -5 size: 11] [line: 87]
.   .   Sibling: 3  Var: s is array of type int [line: 87]					   |	.   .   Sibling: 3  Var: s of array of type int [mem: Local loc: -16 size: 11] [line: 87]
.   .   .   Child: 0  Id: p of type int [line: 89]						   |	.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 89]
.   .   .   .   Child: 0  Id: p of type int [line: 90]						   |	.   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 90]
.   .   .   Child: 1  Compound [line: 90]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 90]
.   .   .   .   .   .   Child: 0  Id: r of type int [line: 91]					   |	.   .   .   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line
.   .   .   .   .   .   Child: 1  Id: p of type int [line: 91]					   |	.   .   .   .   .   .   Child: 1  Id: p of type int [mem: Local loc: -2 size: 1] [line: 91]
.   .   .   .   .   Child: 1  Id: p of type int [line: 91]					   |	.   .   .   .   .   Child: 1  Id: p of type int [mem: Local loc: -2 size: 1] [line: 91]
.   .   .   .   .   Child: 0  Id: p of type int [line: 92]					   |	.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 92]
.   .   .   Child: 0  Id: p of type int [line: 95]						   |	.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 95]
.   .   .   Child: 0  Id: q of type int [line: 96]						   |	.   .   .   Child: 0  Id: q of type int [mem: Local loc: -3 size: 1] [line: 96]
.   .   .   .   Child: 0  Id: r of type int [line: 97]						   |	.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 97]
.   .   .   .   Child: 0  Id: s of type int [line: 98]						   |	.   .   .   .   Child: 0  Id: s of array of type int [mem: Local loc: -16 size: 11] [line: 98]
.   .   .   Child: 0  Id: p of type int [line: 100]						   |	.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 100]
.   .   .   Child: 0  Id: r of type int [line: 102]						   |	.   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 102]
.   .   .   .   Child: 0  Id: p of type int [line: 106]						   |	.   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 106]
.   .   .   Child: 0  Id: p of type int [line: 109]						   |	.   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 109]
.   .   .   Sibling: 1  Id: r of type int [line: 109]						   |	.   .   .   Sibling: 1  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 109]
.   .   .   .   .   Child: 0  Id: p of type int [line: 111]					   |	.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 111]
.   .   .   .   .   Sibling: 1  Id: q of type int [line: 111]					   |	.   .   .   .   .   Sibling: 1  Id: q of type int [mem: Local loc: -3 size: 1] [line: 111]
.   .   .   .   .   Child: 0  Id: p of type int [line: 111]					   |	.   .   .   .   .   Child: 0  Id: p of type int [mem: Local loc: -2 size: 1] [line: 111]
.   .   .   .   .   Sibling: 1  Id: q of type int [line: 111]					   |	.   .   .   .   .   Sibling: 1  Id: q of type int [mem: Local loc: -3 size: 1] [line: 111]
.   .   .   .   Child: 0  Id: r of type int [line: 113]						   |	.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 113]
.   .   .   Child: 0  Id: r of type int [line: 114]						   |	.   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 114]
.   .   .   .   Child: 0  Id: r of type int [line: 115]						   |	.   .   .   .   Child: 0  Id: r of array of type int [mem: Local loc: -5 size: 11] [line: 115]
												   >	Offset for end of global space: -1
============================================================================================================
data/call.c-
Func: cheyenne returns type void [line: 2]							   |	Func: cheyenne returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: sioux returns type void [line: 11]						   |	Sibling: 1  Func: sioux returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Func: comanche returns type void [line: 20]						   |	Sibling: 2  Func: comanche returns type void [mem: Global loc: 0 size: -3] [line: 20]
.   Child: 0  Parm: z is array of type int [line: 20]						   |	.   Child: 0  Parm: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -15] [line: 21]
.   .   Child: 0  Var: b is array of type bool [line: 22]					   |	.   .   Child: 0  Var: b of array of type bool [mem: Local loc: -4 size: 6] [line: 22]
.   .   Sibling: 1  Var: c is array of type char [line: 23]					   |	.   .   Sibling: 1  Var: c of array of type char [mem: Local loc: -10 size: 6] [line: 23]
.   .   .   .   Child: 0  Id: b of type bool [line: 25]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Local loc: -4 size: 6] [line: 25]
.   .   .   .   Child: 0  Id: c of type char [line: 26]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Local loc: -10 size: 6] [line: 26]
.   .   .   Child: 0  Id: z of type int [line: 27]						   |	.   .   .   Child: 0  Id: z of array of type int [mem: Parameter loc: -2 size: 1] [line: 27]
.   .   .   Sibling: 1  Id: b of type bool [line: 27]						   |	.   .   .   Sibling: 1  Id: b of array of type bool [mem: Local loc: -4 size: 6] [line: 27]
.   .   .   Sibling: 2  Id: c of type char [line: 27]						   |	.   .   .   Sibling: 2  Id: c of array of type char [mem: Local loc: -10 size: 6] [line: 27]
Sibling: 3  Var: ga is array of type int [line: 32]						   |	Sibling: 3  Var: ga of array of type int [mem: Global loc: -1 size: 6] [line: 32]
Sibling: 4  Var: gb is array of type bool [line: 33]						   |	Sibling: 4  Var: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 33]
Sibling: 5  Var: gc is array of type char [line: 34]						   |	Sibling: 5  Var: gc of array of type char [mem: Global loc: -14 size: 8] [line: 34]
Sibling: 6  Func: main returns type void [line: 36]						   |	Sibling: 6  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 36]
.   Child: 1  Compound [line: 37]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 37]
.   .   Child: 0  Var: a is array of type int [line: 38]					   |	.   .   Child: 0  Var: a of array of type int [mem: Local loc: -3 size: 6] [line: 38]
.   .   Sibling: 1  Var: b is array of type bool [line: 39]					   |	.   .   Sibling: 1  Var: b of array of type bool [mem: Local loc: -9 size: 7] [line: 39]
.   .   Sibling: 2  Var: c is array of type char [line: 40]					   |	.   .   Sibling: 2  Var: c of array of type char [mem: Local loc: -16 size: 8] [line: 40]
.   .   .   .   Child: 0  Id: a of type int [line: 42]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 42]
.   .   .   .   Child: 0  Id: b of type bool [line: 43]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Local loc: -9 size: 7] [line: 43]
.   .   .   .   Child: 0  Id: c of type char [line: 44]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Local loc: -16 size: 8] [line: 44]
.   .   .   Child: 0  Id: a of type int [line: 47]						   |	.   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 47]
.   .   .   Sibling: 1  Id: b of type bool [line: 47]						   |	.   .   .   Sibling: 1  Id: b of array of type bool [mem: Local loc: -9 size: 7] [line: 47]
.   .   .   Sibling: 2  Id: c of type char [line: 47]						   |	.   .   .   Sibling: 2  Id: c of array of type char [mem: Local loc: -16 size: 8] [line: 47]
.   .   .   Child: 0  Id: a of type int [line: 48]						   |	.   .   .   Child: 0  Id: a of array of type int [mem: Local loc: -3 size: 6] [line: 48]
.   .   .   .   Child: 0  Id: ga of type int [line: 50]						   |	.   .   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 50]
.   .   .   .   Child: 0  Id: gb of type bool [line: 51]					   |	.   .   .   .   Child: 0  Id: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 51]
.   .   .   .   Child: 0  Id: gc of type char [line: 52]					   |	.   .   .   .   Child: 0  Id: gc of array of type char [mem: Global loc: -14 size: 8] [line: 52]
.   .   .   Child: 0  Id: ga of type int [line: 53]						   |	.   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 53]
.   .   .   Sibling: 1  Id: gb of type bool [line: 53]						   |	.   .   .   Sibling: 1  Id: gb of array of type bool [mem: Global loc: -7 size: 7] [line: 53]
.   .   .   Sibling: 2  Id: gc of type char [line: 53]						   |	.   .   .   Sibling: 2  Id: gc of array of type char [mem: Global loc: -14 size: 8] [line: 53]
.   .   .   Child: 0  Id: ga of type int [line: 54]						   |	.   .   .   Child: 0  Id: ga of array of type int [mem: Global loc: -1 size: 6] [line: 54]
.   .   Sibling: 12  Compound [line: 56]							   |	.   .   Sibling: 12  Compound [mem: None loc: 0 size: -23] [line: 56]
.   .   .   Child: 0  Var: ga is array of type int [line: 57]					   |	.   .   .   Child: 0  Var: ga of static array of type int [mem: LocalStatic loc: -22 size: 6] [l
.   .   .   Sibling: 1  Var: gb is array of type bool [line: 58]				   |	.   .   .   Sibling: 1  Var: gb of static array of type bool [mem: LocalStatic loc: -28 size: 7]
.   .   .   Sibling: 2  Var: gc is array of type char [line: 59]				   |	.   .   .   Sibling: 2  Var: gc of static array of type char [mem: LocalStatic loc: -35 size: 8]
.   .   .   .   .   Child: 0  Id: ga of type int [line: 60]					   |	.   .   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size
.   .   .   .   .   Child: 0  Id: gb of type bool [line: 61]					   |	.   .   .   .   .   Child: 0  Id: gb of static array of type bool [mem: LocalStatic loc: -28 siz
.   .   .   .   .   Child: 0  Id: gc of type char [line: 62]					   |	.   .   .   .   .   Child: 0  Id: gc of static array of type char [mem: LocalStatic loc: -35 siz
.   .   .   .   Child: 0  Id: ga of type int [line: 64]						   |	.   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size: 6]
.   .   .   .   Sibling: 1  Id: gb of type bool [line: 64]					   |	.   .   .   .   Sibling: 1  Id: gb of static array of type bool [mem: LocalStatic loc: -28 size:
.   .   .   .   Sibling: 2  Id: gc of type char [line: 64]					   |	.   .   .   .   Sibling: 2  Id: gc of static array of type char [mem: LocalStatic loc: -35 size:
.   .   .   .   Child: 0  Id: ga of type int [line: 65]						   |	.   .   .   .   Child: 0  Id: ga of static array of type int [mem: LocalStatic loc: -22 size: 6]
												   >	Offset for end of global space: -42
============================================================================================================
data/callconst.c-
Func: scalar returns type void [line: 2]							   |	Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: array returns type void [line: 11]						   |	Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Func: main returns type void [line: 20]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 21]
												   >	Offset for end of global space: 0
============================================================================================================
data/callerr.c-
============================================================================================================
data/callframes.c-
Func: min returns type int [line: 2]								   |	Func: min returns type int [mem: Global loc: 0 size: -4] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: y of type int [line: 2]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   .   .   Child: 0  Id: x of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   Child: 1  Id: y of type int [line: 2]						   |	.   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: y of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: x of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
Sibling: 1  Func: f returns type int [line: 3]							   |	Sibling: 1  Func: f returns type int [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   .   .   Child: 0  Id: n of type int [line: 3]						   |	.   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 3]				   |	.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 
.   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 3]				   |	.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 
Sibling: 2  Func: g returns type int [line: 4]							   |	Sibling: 2  Func: g returns type int [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0  Parm: n of type int [line: 4]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 4]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 4]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1]
Sibling: 3  Func: main returns type void [line: 6]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]
.   Child: 1  Compound [line: 7]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 7]
												   >	Offset for end of global space: 0
============================================================================================================
data/callglobal.c-
Func: scalar returns type void [line: 2]							   |	Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: array returns type void [line: 11]						   |	Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Var: x of type int [line: 20]							   |	Sibling: 2  Var: x of type int [mem: Global loc: 0 size: 1] [line: 20]
Sibling: 3  Var: y of type bool [line: 20]							   |	Sibling: 3  Var: y of type bool [mem: Global loc: -1 size: 1] [line: 20]
Sibling: 4  Var: z of type char [line: 20]							   |	Sibling: 4  Var: z of type char [mem: Global loc: -2 size: 1] [line: 20]
Sibling: 5  Var: XX is array of type int [line: 21]						   |	Sibling: 5  Var: XX of array of type int [mem: Global loc: -4 size: 4] [line: 21]
Sibling: 6  Var: YY is array of type bool [line: 21]						   |	Sibling: 6  Var: YY of array of type bool [mem: Global loc: -8 size: 6] [line: 21]
Sibling: 7  Var: ZZ is array of type char [line: 21]						   |	Sibling: 7  Var: ZZ of array of type char [mem: Global loc: -14 size: 8] [line: 21]
Sibling: 8  Func: main returns type void [line: 23]						   |	Sibling: 8  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 23]
.   Child: 1  Compound [line: 24]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 24]
.   .   .   Child: 0  Id: x of type int [line: 25]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 25]
.   .   .   Child: 0  Id: y of type bool [line: 26]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Global loc: -1 size: 1] [line: 26]
.   .   .   Child: 0  Id: z of type char [line: 27]						   |	.   .   .   Child: 0  Id: z of type char [mem: Global loc: -2 size: 1] [line: 27]
.   .   .   .   Child: 0  Id: XX of type int [line: 29]						   |	.   .   .   .   Child: 0  Id: XX of array of type int [mem: Global loc: -4 size: 4] [line: 29]
.   .   .   .   Child: 0  Id: YY of type bool [line: 30]					   |	.   .   .   .   Child: 0  Id: YY of array of type bool [mem: Global loc: -8 size: 6] [line: 30]
.   .   .   .   Child: 0  Id: ZZ of type char [line: 31]					   |	.   .   .   .   Child: 0  Id: ZZ of array of type char [mem: Global loc: -14 size: 8] [line: 31]
.   .   .   Child: 0  Id: x of type int [line: 33]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 33]
.   .   .   Sibling: 1  Id: y of type bool [line: 33]						   |	.   .   .   Sibling: 1  Id: y of type bool [mem: Global loc: -1 size: 1] [line: 33]
.   .   .   Sibling: 2  Id: z of type char [line: 33]						   |	.   .   .   Sibling: 2  Id: z of type char [mem: Global loc: -2 size: 1] [line: 33]
.   .   .   Child: 0  Id: XX of type int [line: 34]						   |	.   .   .   Child: 0  Id: XX of array of type int [mem: Global loc: -4 size: 4] [line: 34]
.   .   .   Sibling: 1  Id: YY of type bool [line: 34]						   |	.   .   .   Sibling: 1  Id: YY of array of type bool [mem: Global loc: -8 size: 6] [line: 34]
.   .   .   Sibling: 2  Id: ZZ of type char [line: 34]						   |	.   .   .   Sibling: 2  Id: ZZ of array of type char [mem: Global loc: -14 size: 8] [line: 34]
												   >	Offset for end of global space: -21
============================================================================================================
data/calllocal.c-
Func: scalar returns type void [line: 2]							   |	Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: array returns type void [line: 11]						   |	Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Func: main returns type void [line: 20]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 21]
.   .   Child: 0  Var: x of type int [line: 22]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 22]
.   .   Sibling: 1  Var: y of type bool [line: 22]						   |	.   .   Sibling: 1  Var: y of type bool [mem: Local loc: -3 size: 1] [line: 22]
.   .   Sibling: 2  Var: z of type char [line: 22]						   |	.   .   Sibling: 2  Var: z of type char [mem: Local loc: -4 size: 1] [line: 22]
.   .   Sibling: 3  Var: XX is array of type int [line: 23]					   |	.   .   Sibling: 3  Var: XX of array of type int [mem: Local loc: -6 size: 4] [line: 23]
.   .   Sibling: 4  Var: YY is array of type bool [line: 23]					   |	.   .   Sibling: 4  Var: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 23]
.   .   Sibling: 5  Var: ZZ is array of type char [line: 23]					   |	.   .   Sibling: 5  Var: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 23]
.   .   .   Child: 0  Id: x of type int [line: 25]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   Child: 0  Id: y of type bool [line: 26]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   Child: 0  Id: z of type char [line: 27]						   |	.   .   .   Child: 0  Id: z of type char [mem: Local loc: -4 size: 1] [line: 27]
.   .   .   .   Child: 0  Id: XX of type int [line: 29]						   |	.   .   .   .   Child: 0  Id: XX of array of type int [mem: Local loc: -6 size: 4] [line: 29]
.   .   .   .   Child: 0  Id: YY of type bool [line: 30]					   |	.   .   .   .   Child: 0  Id: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 30]
.   .   .   .   Child: 0  Id: ZZ of type char [line: 31]					   |	.   .   .   .   Child: 0  Id: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 31]
.   .   .   Child: 0  Id: x of type int [line: 33]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 33]
.   .   .   Sibling: 1  Id: y of type bool [line: 33]						   |	.   .   .   Sibling: 1  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   Sibling: 2  Id: z of type char [line: 33]						   |	.   .   .   Sibling: 2  Id: z of type char [mem: Local loc: -4 size: 1] [line: 33]
.   .   .   Child: 0  Id: XX of type int [line: 34]						   |	.   .   .   Child: 0  Id: XX of array of type int [mem: Local loc: -6 size: 4] [line: 34]
.   .   .   Sibling: 1  Id: YY of type bool [line: 34]						   |	.   .   .   Sibling: 1  Id: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 34]
.   .   .   Sibling: 2  Id: ZZ of type char [line: 34]						   |	.   .   .   Sibling: 2  Id: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 34]
												   >	Offset for end of global space: 0
============================================================================================================
data/callparam.c-
Func: scalar returns type void [line: 2]							   |	Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: array returns type void [line: 11]						   |	Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Func: fred returns type void [line: 20]						   |	Sibling: 2  Func: fred returns type void [mem: Global loc: 0 size: -8] [line: 20]
.   Child: 0  Parm: x of type int [line: 20]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 20]
.   Sibling: 1  Parm: y of type bool [line: 20]							   |	.   Sibling: 1  Parm: y of type bool [mem: Parameter loc: -3 size: 1] [line: 20]
.   Sibling: 2  Parm: z of type char [line: 20]							   |	.   Sibling: 2  Parm: z of type char [mem: Parameter loc: -4 size: 1] [line: 20]
.   Sibling: 3  Parm: XX is array of type int [line: 20]					   |	.   Sibling: 3  Parm: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 20]
.   Sibling: 4  Parm: YY is array of type bool [line: 20]					   |	.   Sibling: 4  Parm: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 20]
.   Sibling: 5  Parm: ZZ is array of type char [line: 20]					   |	.   Sibling: 5  Parm: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 21]
.   .   .   Child: 0  Id: x of type int [line: 22]						   |	.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 22]
.   .   .   Child: 0  Id: y of type bool [line: 23]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Parameter loc: -3 size: 1] [line: 23]
.   .   .   Child: 0  Id: z of type char [line: 24]						   |	.   .   .   Child: 0  Id: z of type char [mem: Parameter loc: -4 size: 1] [line: 24]
.   .   .   .   Child: 0  Id: XX of type int [line: 26]						   |	.   .   .   .   Child: 0  Id: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 26
.   .   .   .   Child: 0  Id: YY of type bool [line: 27]					   |	.   .   .   .   Child: 0  Id: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 2
.   .   .   .   Child: 0  Id: ZZ of type char [line: 28]					   |	.   .   .   .   Child: 0  Id: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 2
.   .   .   Child: 0  Id: x of type int [line: 30]						   |	.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 30]
.   .   .   Sibling: 1  Id: y of type bool [line: 30]						   |	.   .   .   Sibling: 1  Id: y of type bool [mem: Parameter loc: -3 size: 1] [line: 30]
.   .   .   Sibling: 2  Id: z of type char [line: 30]						   |	.   .   .   Sibling: 2  Id: z of type char [mem: Parameter loc: -4 size: 1] [line: 30]
.   .   .   Child: 0  Id: XX of type int [line: 31]						   |	.   .   .   Child: 0  Id: XX of array of type int [mem: Parameter loc: -5 size: 1] [line: 31]
.   .   .   Sibling: 1  Id: YY of type bool [line: 31]						   |	.   .   .   Sibling: 1  Id: YY of array of type bool [mem: Parameter loc: -6 size: 1] [line: 31]
.   .   .   Sibling: 2  Id: ZZ of type char [line: 31]						   |	.   .   .   Sibling: 2  Id: ZZ of array of type char [mem: Parameter loc: -7 size: 1] [line: 31]
Sibling: 3  Func: main returns type void [line: 35]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 35]
.   Child: 1  Compound [line: 36]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -23] [line: 36]
.   .   Child: 0  Var: x of type int [line: 37]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 37]
.   .   Sibling: 1  Var: y of type bool [line: 37]						   |	.   .   Sibling: 1  Var: y of type bool [mem: Local loc: -3 size: 1] [line: 37]
.   .   Sibling: 2  Var: z of type char [line: 37]						   |	.   .   Sibling: 2  Var: z of type char [mem: Local loc: -4 size: 1] [line: 37]
.   .   Sibling: 3  Var: XX is array of type int [line: 38]					   |	.   .   Sibling: 3  Var: XX of array of type int [mem: Local loc: -6 size: 4] [line: 38]
.   .   Sibling: 4  Var: YY is array of type bool [line: 38]					   |	.   .   Sibling: 4  Var: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 38]
.   .   Sibling: 5  Var: ZZ is array of type char [line: 38]					   |	.   .   Sibling: 5  Var: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 38]
.   .   .   Child: 0  Id: x of type int [line: 40]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 40]
.   .   .   Sibling: 1  Id: y of type bool [line: 40]						   |	.   .   .   Sibling: 1  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 40]
.   .   .   Sibling: 2  Id: z of type char [line: 40]						   |	.   .   .   Sibling: 2  Id: z of type char [mem: Local loc: -4 size: 1] [line: 40]
.   .   .   Sibling: 3  Id: XX of type int [line: 40]						   |	.   .   .   Sibling: 3  Id: XX of array of type int [mem: Local loc: -6 size: 4] [line: 40]
.   .   .   Sibling: 4  Id: YY of type bool [line: 40]						   |	.   .   .   Sibling: 4  Id: YY of array of type bool [mem: Local loc: -10 size: 6] [line: 40]
.   .   .   Sibling: 5  Id: ZZ of type char [line: 40]						   |	.   .   .   Sibling: 5  Id: ZZ of array of type char [mem: Local loc: -16 size: 8] [line: 40]
												   >	Offset for end of global space: 0
============================================================================================================
data/callstatic.c-
Func: scalar returns type void [line: 2]							   |	Func: scalar returns type void [mem: Global loc: 0 size: -5] [line: 2]
.   Child: 0  Parm: a of type int [line: 2]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: b of type bool [line: 2]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 2]
.   Sibling: 2  Parm: c of type char [line: 2]							   |	.   Sibling: 2  Parm: c of type char [mem: Parameter loc: -4 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   .   Child: 0  Id: a of type int [line: 4]						   |	.   .   .   Child: 0  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: b of type bool [line: 5]						   |	.   .   .   Child: 0  Id: b of type bool [mem: Parameter loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: c of type char [line: 6]						   |	.   .   .   Child: 0  Id: c of type char [mem: Parameter loc: -4 size: 1] [line: 6]
Sibling: 1  Func: array returns type void [line: 11]						   |	Sibling: 1  Func: array returns type void [mem: Global loc: 0 size: -5] [line: 11]
.   Child: 0  Parm: a is array of type int [line: 11]						   |	.   Child: 0  Parm: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   Sibling: 1  Parm: b is array of type bool [line: 11]					   |	.   Sibling: 1  Parm: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: c is array of type char [line: 11]					   |	.   Sibling: 2  Parm: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 12]
.   .   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Parameter loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: b of type bool [line: 14]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Parameter loc: -3 size: 1] [line: 14
.   .   .   .   Child: 0  Id: c of type char [line: 15]						   |	.   .   .   .   Child: 0  Id: c of array of type char [mem: Parameter loc: -4 size: 1] [line: 15
Sibling: 2  Func: main returns type void [line: 20]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -18] [line: 21]
.   .   Child: 0  Var: x of type int [line: 22]							   |	.   .   Child: 0  Var: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 22]
.   .   Sibling: 1  Var: y of type bool [line: 22]						   |	.   .   Sibling: 1  Var: y of type bool [mem: Local loc: -2 size: 1] [line: 22]
.   .   Sibling: 2  Var: z of type char [line: 22]						   |	.   .   Sibling: 2  Var: z of type char [mem: Local loc: -3 size: 1] [line: 22]
.   .   Sibling: 3  Var: XX is array of type int [line: 23]					   |	.   .   Sibling: 3  Var: XX of static array of type int [mem: LocalStatic loc: -2 size: 4] [line
.   .   Sibling: 4  Var: YY is array of type bool [line: 23]					   |	.   .   Sibling: 4  Var: YY of array of type bool [mem: Local loc: -5 size: 6] [line: 23]
.   .   Sibling: 5  Var: ZZ is array of type char [line: 23]					   |	.   .   Sibling: 5  Var: ZZ of array of type char [mem: Local loc: -11 size: 8] [line: 23]
.   .   .   Child: 0  Id: x of type int [line: 25]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 25]
.   .   .   Child: 0  Id: y of type bool [line: 26]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Local loc: -2 size: 1] [line: 26]
.   .   .   Child: 0  Id: z of type char [line: 27]						   |	.   .   .   Child: 0  Id: z of type char [mem: Local loc: -3 size: 1] [line: 27]
.   .   .   .   Child: 0  Id: XX of type int [line: 29]						   |	.   .   .   .   Child: 0  Id: XX of static array of type int [mem: LocalStatic loc: -2 size: 4] 
.   .   .   .   Child: 0  Id: YY of type bool [line: 30]					   |	.   .   .   .   Child: 0  Id: YY of array of type bool [mem: Local loc: -5 size: 6] [line: 30]
.   .   .   .   Child: 0  Id: ZZ of type char [line: 31]					   |	.   .   .   .   Child: 0  Id: ZZ of array of type char [mem: Local loc: -11 size: 8] [line: 31]
.   .   .   Child: 0  Id: x of type int [line: 33]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 33]
.   .   .   Sibling: 1  Id: y of type bool [line: 33]						   |	.   .   .   Sibling: 1  Id: y of type bool [mem: Local loc: -2 size: 1] [line: 33]
.   .   .   Sibling: 2  Id: z of type char [line: 33]						   |	.   .   .   Sibling: 2  Id: z of type char [mem: Local loc: -3 size: 1] [line: 33]
.   .   .   Child: 0  Id: XX of type int [line: 34]						   |	.   .   .   Child: 0  Id: XX of static array of type int [mem: LocalStatic loc: -2 size: 4] [lin
.   .   .   Sibling: 1  Id: YY of type bool [line: 34]						   |	.   .   .   Sibling: 1  Id: YY of array of type bool [mem: Local loc: -5 size: 6] [line: 34]
.   .   .   Sibling: 2  Id: ZZ of type char [line: 34]						   |	.   .   .   Sibling: 2  Id: ZZ of array of type char [mem: Local loc: -11 size: 8] [line: 34]
												   >	Offset for end of global space: -5
============================================================================================================
data/chararray.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -18] [line: 3]
.   .   Child: 0  Var: a is array of type char [line: 4]					   |	.   .   Child: 0  Var: a of array of type char [mem: Local loc: -3 size: 4] [line: 4]
.   .   Sibling: 1  Var: b is array of type char [line: 4]					   |	.   .   Sibling: 1  Var: b of array of type char [mem: Local loc: -7 size: 4] [line: 4]
.   .   Sibling: 2  Var: c is array of type char [line: 5]					   |	.   .   Sibling: 2  Var: c of array of type char [mem: Local loc: -11 size: 3] [line: 5]
.   .   Sibling: 3  Var: d is array of type char [line: 5]					   |	.   .   Sibling: 3  Var: d of array of type char [mem: Local loc: -14 size: 5] [line: 5]
.   .   .   Child: 0  Id: a of type char [line: 7]						   |	.   .   .   Child: 0  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 7]
.   .   .   .   Child: 0  Id: a of type char [line: 8]						   |	.   .   .   .   Child: 0  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 8]
.   .   .   .   Child: 0  Id: a of type char [line: 9]						   |	.   .   .   .   Child: 0  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 9]
.   .   .   .   Child: 0  Id: b of type char [line: 9]						   |	.   .   .   .   Child: 0  Id: b of array of type char [mem: Local loc: -7 size: 4] [line: 9]
.   .   Sibling: 3  Assign: = of type char [line: 10]						   |	.   .   Sibling: 3  Assign: = of array of type char [line: 10]
.   .   .   Child: 0  Id: a of type char [line: 10]						   |	.   .   .   Child: 0  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 10]
.   .   .   Child: 1  Const is array "dog" of type char [line: 10]				   |	.   .   .   Child: 1  Const "dog" of array of type char [mem: Global loc: -1 size: 4] [line: 10]
.   .   Sibling: 4  Assign: = of type char [line: 11]						   |	.   .   Sibling: 4  Assign: = of array of type char [line: 11]
.   .   .   Child: 0  Id: b of type char [line: 11]						   |	.   .   .   Child: 0  Id: b of array of type char [mem: Local loc: -7 size: 4] [line: 11]
.   .   .   Child: 1  Id: a of type char [line: 11]						   |	.   .   .   Child: 1  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 11]
.   .   Sibling: 5  Assign: = of type char [line: 12]						   |	.   .   Sibling: 5  Assign: = of array of type char [line: 12]
.   .   .   Child: 0  Id: c of type char [line: 12]						   |	.   .   .   Child: 0  Id: c of array of type char [mem: Local loc: -11 size: 3] [line: 12]
.   .   .   Child: 1  Id: a of type char [line: 12]						   |	.   .   .   Child: 1  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 12]
.   .   Sibling: 6  Assign: = of type char [line: 13]						   |	.   .   Sibling: 6  Assign: = of array of type char [line: 13]
.   .   .   Child: 0  Id: d of type char [line: 13]						   |	.   .   .   Child: 0  Id: d of array of type char [mem: Local loc: -14 size: 5] [line: 13]
.   .   .   Child: 1  Id: a of type char [line: 13]						   |	.   .   .   Child: 1  Id: a of array of type char [mem: Local loc: -3 size: 4] [line: 13]
												   >	Offset for end of global space: -4
============================================================================================================
data/compfunc.c-
============================================================================================================
data/const2.c-
Var: g of type int [line: 1]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Func: main returns type void [line: 2]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -105] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: c is array of type char [line: 5]					   |	.   .   Sibling: 2  Var: c of array of type char [mem: Local loc: -5 size: 101] [line: 5]
.   .   Child: 1  Const is array "dogs" of type char [line: 6]					   |	.   .   Child: 1  Const "dogs" of array of type char [mem: Global loc: -2 size: 5] [line: 6]
.   .   Sibling: 1  Const is array "horses" of type char [line: 7]				   |	.   .   Sibling: 1  Const "horses" of array of type char [mem: Global loc: -7 size: 7] [line: 7]
.   .   Sibling: 2  Compound [line: 8]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -106] [line: 8]
.   .   .   Child: 0  Var: z of type int [line: 9]						   |	.   .   .   Child: 0  Var: z of type int [mem: Local loc: -105 size: 1] [line: 9]
Sibling: 2  Var: h of type int [line: 12]							   |	Sibling: 2  Var: h of type int [mem: Global loc: -13 size: 1] [line: 12]
												   >	Offset for end of global space: -14
============================================================================================================
data/constants.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
												   >	Offset for end of global space: 0
============================================================================================================
data/const.c-
Var: g of type int [line: 1]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Func: main returns type void [line: 2]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
.   .   Child: 1  Const is array "dogs" of type char [line: 4]					   |	.   .   Child: 1  Const "dogs" of array of type char [mem: Global loc: -2 size: 5] [line: 4]
.   .   Sibling: 1  Const is array "cats" of type char [line: 5]				   |	.   .   Sibling: 1  Const "cats" of array of type char [mem: Global loc: -7 size: 5] [line: 5]
Sibling: 2  Var: h of type int [line: 7]							   |	Sibling: 2  Var: h of type int [mem: Global loc: -11 size: 1] [line: 7]
												   >	Offset for end of global space: -12
============================================================================================================
data/control2.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 1]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 1]
.   .   Child: 0  Var: x of type bool [line: 2]							   |	.   .   Child: 0  Var: x of type bool [mem: Local loc: -2 size: 1] [line: 2]
.   .   Sibling: 1  Var: y of type bool [line: 2]						   |	.   .   Sibling: 1  Var: y of type bool [mem: Local loc: -3 size: 1] [line: 2]
.   .   .   Child: 0  Id: x of type bool [line: 4]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: y of type bool [line: 5]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: x of type bool [line: 7]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 0  Id: y of type bool [line: 9]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   Child: 0  Id: x of type bool [line: 12]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 12]
.   .   .   .   Child: 0  Id: y of type bool [line: 12]						   |	.   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   Child: 0  Id: x of type bool [line: 15]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   Child: 0  Id: y of type bool [line: 17]						   |	.   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   Child: 1  Compound [line: 17]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 17]
.   .   .   Child: 0  Id: x of type bool [line: 25]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   Child: 1  Compound [line: 25]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 25]
.   .   .   .   .   Child: 0  Id: y of type bool [line: 28]					   |	.   .   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -3 size: 1] [line: 28]
.   .   .   .   .   Child: 1  Compound [line: 28]						   |	.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 28]
												   >	Offset for end of global space: 0
============================================================================================================
data/control.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 1  Compound [line: 6]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 6]
.   .   .   .   .   Child: 0  Id: x of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 2  Compound [line: 9]							   |	.   .   .   Child: 2  Compound [mem: None loc: 0 size: -3] [line: 9]
.   .   .   .   .   Child: 0  Id: x of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   Child: 1  Compound [line: 13]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 13]
.   .   .   .   .   Child: 0  Id: x of type int [line: 14]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 15]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   .   .   Child: 0  Id: x of type int [line: 16]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]
												   >	Offset for end of global space: 0
============================================================================================================
data/cover.c-
												   >	ERROR(39): Not expecting array in parameter 2 of call to 'fred' declared on line 6.
ERROR(39): Not expecting array in parameter 2 of call to 'fred' declared on line 6.		   <
============================================================================================================
data/decl.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 0  Var: a of type int [line: 4]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: b of type bool [line: 5]						   |	.   .   Sibling: 1  Var: b of type bool [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 2  Var: c of type char [line: 6]						   |	.   .   Sibling: 2  Var: c of type char [mem: Local loc: -4 size: 1] [line: 6]
												   >	Offset for end of global space: 0
============================================================================================================
data/declinitreset.c-
============================================================================================================
data/decllists.c-
============================================================================================================
data/defused.c-
ERROR(17): Symbol 'bob' is already declared at line 16.						   <
												   >	ERROR(17): Symbol 'bob' is already declared at line 16.
============================================================================================================
data/elsif.c-
============================================================================================================
data/emptyline.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
Sibling: 1  Func: dogs returns type void [line: 4]						   |	Sibling: 1  Func: dogs returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   Sibling: 2  For [line: 12]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -4] [line: 12]
.   .   .   Child: 0  Var: x of type int [line: 12]						   |	.   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   Sibling: 3  Compound [line: 13]								   |	.   .   Sibling: 3  Compound [mem: None loc: 0 size: -3] [line: 13]
												   >	Offset for end of global space: 0
============================================================================================================
data/errormessages.c-
============================================================================================================
data/everythingF22.c-
Var: gromit of type int [line: 6]								   |	Var: gromit of type int [mem: Global loc: 0 size: 1] [line: 6]
Sibling: 1  Var: mysteriousPenguin of type int [line: 6]					   |	Sibling: 1  Var: mysteriousPenguin of type int [mem: Global loc: -1 size: 1] [line: 6]
Sibling: 2  Func: wallace returns type void [line: 9]						   |	Sibling: 2  Func: wallace returns type void [mem: Global loc: 0 size: -4] [line: 9]
.   Child: 0  Parm: wrong of type int [line: 9]							   |	.   Child: 0  Parm: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   Sibling: 1  Parm: trousers of type int [line: 9]						   |	.   Sibling: 1  Parm: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   Child: 1  Compound [line: 10]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -7] [line: 10]
.   .   Child: 0  Var: close of type bool [line: 11]						   |	.   .   Child: 0  Var: close of type bool [mem: Local loc: -4 size: 1] [line: 11]
.   .   Sibling: 1  Var: shave of type bool [line: 11]						   |	.   .   Sibling: 1  Var: shave of type bool [mem: Local loc: -5 size: 1] [line: 11]
.   .   Sibling: 2  Var: cheese of type int [line: 12]						   |	.   .   Sibling: 2  Var: cheese of type int [mem: Local loc: -6 size: 1] [line: 12]
.   .   Sibling: 1  Id: close of type bool [line: 15]						   |	.   .   Sibling: 1  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   Child: 0  Id: close of type bool [line: 17]						   |	.   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 17]
.   .   .   Child: 1  Id: shave of type bool [line: 17]						   |	.   .   .   Child: 1  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 17]
.   .   .   Child: 0  Id: wrong of type int [line: 18]						   |	.   .   .   Child: 0  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: trousers of type int [line: 18]					   |	.   .   .   .   Child: 0  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Id: wrong of type int [line: 18]					   |	.   .   .   .   .   Child: 1  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: gromit of type int [line: 19]						   |	.   .   .   Child: 0  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 19]
.   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 19]				   |	.   .   .   .   .   .   Child: 0  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 
.   .   .   .   .   .   Child: 1  Id: trousers of type int [line: 19]				   |	.   .   .   .   .   .   Child: 1  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [lin
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 19]					   |	.   .   .   .   .   Child: 1  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 19]
.   .   .   Child: 0  Id: gromit of type int [line: 20]						   |	.   .   .   Child: 0  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 20]
.   .   .   Child: 0  Id: gromit of type int [line: 21]						   |	.   .   .   Child: 0  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 21]
.   .   .   Child: 0  Id: gromit of type int [line: 22]						   |	.   .   .   Child: 0  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 22]
.   .   .   .   Child: 0  Id: wrong of type int [line: 22]					   |	.   .   .   .   Child: 0  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 22]
.   .   .   Child: 0  Id: close of type bool [line: 23]						   |	.   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 23]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 23]				   |	.   .   .   .   .   Child: 1  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 23]				   |	.   .   .   .   .   Child: 0  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 23]					   |	.   .   .   .   .   Child: 1  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 23]
.   .   .   Child: 0  Id: shave of type bool [line: 24]						   |	.   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 24]
.   .   .   .   .   Child: 0  Id: wrong of type int [line: 24]					   |	.   .   .   .   .   Child: 0  Id: wrong of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   .   .   .   .   Child: 1  Id: trousers of type int [line: 24]				   |	.   .   .   .   .   Child: 1  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   .   Child: 0  Id: trousers of type int [line: 24]				   |	.   .   .   .   .   Child: 0  Id: trousers of type int [mem: Parameter loc: -3 size: 1] [line: 2
.   .   .   .   .   Child: 1  Id: gromit of type int [line: 24]					   |	.   .   .   .   .   Child: 1  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 24]
.   .   Sibling: 11  Compound [line: 25]							   |	.   .   Sibling: 11  Compound [mem: None loc: 0 size: -11] [line: 25]
.   .   .   Child: 0  Var: a of type int [line: 26]						   |	.   .   .   Child: 0  Var: a of type int [mem: Local loc: -7 size: 1] [line: 26]
.   .   .   Sibling: 1  Var: grand of type int [line: 26]					   |	.   .   .   Sibling: 1  Var: grand of type int [mem: Local loc: -8 size: 1] [line: 26]
.   .   .   Sibling: 2  Var: day of type int [line: 26]						   |	.   .   .   Sibling: 2  Var: day of type int [mem: Local loc: -9 size: 1] [line: 26]
.   .   .   Sibling: 3  Var: out of type int [line: 26]						   |	.   .   .   Sibling: 3  Var: out of type int [mem: Local loc: -10 size: 1] [line: 26]
.   .   .   .   Child: 0  Id: a of type int [line: 27]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -7 size: 1] [line: 27]
.   .   .   .   .   Child: 0  Id: grand of type int [line: 27]					   |	.   .   .   .   .   Child: 0  Id: grand of type int [mem: Local loc: -8 size: 1] [line: 27]
.   .   .   .   .   .   Child: 0  Id: day of type int [line: 27]				   |	.   .   .   .   .   .   Child: 0  Id: day of type int [mem: Local loc: -9 size: 1] [line: 27]
.   .   .   .   .   .   Child: 1  Id: out of type int [line: 27]				   |	.   .   .   .   .   .   Child: 1  Id: out of type int [mem: Local loc: -10 size: 1] [line: 27]
.   .   .   Child: 0  Id: close of type bool [line: 29]						   |	.   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 29]
.   .   .   Child: 0  Id: shave of type bool [line: 30]						   |	.   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 30]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]					   |	.   .   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 31]
.   .   .   .   Child: 1  Id: close of type bool [line: 31]					   |	.   .   .   .   Child: 1  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 31]
.   .   .   .   Child: 0  Id: shave of type bool [line: 31]					   |	.   .   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 31]
.   .   .   .   .   Child: 0  Id: close of type bool [line: 31]					   |	.   .   .   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 31]
.   .   .   .   .   .   Child: 0  Id: shave of type bool [line: 32]				   |	.   .   .   .   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 32]
.   .   .   .   .   .   Child: 1  Id: close of type bool [line: 32]				   |	.   .   .   .   .   .   Child: 1  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 32]
.   .   .   .   .   .   Child: 0  Id: close of type bool [line: 32]				   |	.   .   .   .   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 32]
.   .   .   .   Child: 0  Id: shave of type bool [line: 32]					   |	.   .   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 32]
.   .   .   .   Child: 0  Id: close of type bool [line: 33]					   |	.   .   .   .   Child: 0  Id: close of type bool [mem: Local loc: -4 size: 1] [line: 33]
.   .   .   Child: 0  Id: mysteriousPenguin of type int [line: 34]				   |	.   .   .   Child: 0  Id: mysteriousPenguin of type int [mem: Global loc: -1 size: 1] [line: 34]
.   .   .   .   .   .   .   Child: 0  Id: cheese of type int [line: 34]				   |	.   .   .   .   .   .   .   Child: 0  Id: cheese of type int [mem: Local loc: -6 size: 1] [line:
.   .   .   Child: 0  Id: shave of type bool [line: 36]						   |	.   .   .   Child: 0  Id: shave of type bool [mem: Local loc: -5 size: 1] [line: 36]
.   .   .   Child: 1  Compound [line: 36]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -7] [line: 36]
.   .   .   .   Child: 0  Var: were of type int [line: 37]					   |	.   .   .   .   Child: 0  Var: were of static type int [mem: LocalStatic loc: -2 size: 1] [line:
.   .   .   .   Sibling: 1  Var: rabbit of type int [line: 37]					   |	.   .   .   .   Sibling: 1  Var: rabbit of static type int [mem: LocalStatic loc: -3 size: 1] [l
.   .   .   .   Sibling: 2  Var: sheep is array of type int [line: 38]				   |	.   .   .   .   Sibling: 2  Var: sheep of static array of type int [mem: LocalStatic loc: -5 siz
.   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 40]				   |	.   .   .   .   .   .   Child: 0  Id: sheep of static array of type int [mem: LocalStatic loc: -
.   .   .   .   .   .   .   Child: 0  Id: sheep of type int [line: 41]				   |	.   .   .   .   .   .   .   Child: 0  Id: sheep of static array of type int [mem: LocalStatic lo
.   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 42]				   |	.   .   .   .   .   .   Child: 0  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 42]
.   .   .   .   .   .   Child: 0  Id: were of type int [line: 42]				   |	.   .   .   .   .   .   Child: 0  Id: were of static type int [mem: LocalStatic loc: -2 size: 1]
.   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 42]				   |	.   .   .   .   .   .   Child: 1  Id: rabbit of static type int [mem: LocalStatic loc: -3 size: 
.   .   .   .   Sibling: 3  Compound [line: 43]							   |	.   .   .   .   Sibling: 3  Compound [mem: None loc: 0 size: -10] [line: 43]
.   .   .   .   .   Child: 0  Var: the of type int [line: 44]					   |	.   .   .   .   .   Child: 0  Var: the of type int [mem: Local loc: -7 size: 1] [line: 44]
.   .   .   .   .   Sibling: 1  Var: wrong of type int [line: 44]				   |	.   .   .   .   .   Sibling: 1  Var: wrong of type int [mem: Local loc: -8 size: 1] [line: 44]
.   .   .   .   .   Sibling: 2  Var: trousers of type int [line: 44]				   |	.   .   .   .   .   Sibling: 2  Var: trousers of type int [mem: Local loc: -9 size: 1] [line: 44
.   .   .   .   .   .   Child: 0  Id: the of type int [line: 46]				   |	.   .   .   .   .   .   Child: 0  Id: the of type int [mem: Local loc: -7 size: 1] [line: 46]
.   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 46]				   |	.   .   .   .   .   .   .   Child: 0  Id: wrong of type int [mem: Local loc: -8 size: 1] [line: 
.   .   .   .   .   .   .   .   Child: 0  Id: trousers of type int [line: 46]			   |	.   .   .   .   .   .   .   .   Child: 0  Id: trousers of type int [mem: Local loc: -9 size: 1] 
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]				   |	.   .   .   .   .   .   .   Child: 0  Id: were of static type int [mem: LocalStatic loc: -2 size
.   .   .   .   .   .   .   Child: 1  Id: rabbit of type int [line: 47]				   |	.   .   .   .   .   .   .   Child: 1  Id: rabbit of static type int [mem: LocalStatic loc: -3 si
.   .   .   .   .   .   .   Child: 0  Id: were of type int [line: 47]				   |	.   .   .   .   .   .   .   Child: 0  Id: were of static type int [mem: LocalStatic loc: -2 size
.   .   .   .   .   .   .   .   Child: 0  Id: wrong of type int [line: 47]			   |	.   .   .   .   .   .   .   .   Child: 0  Id: wrong of type int [mem: Local loc: -8 size: 1] [li
Sibling: 3  Func: penguin returns type bool [line: 54]						   |	Sibling: 3  Func: penguin returns type bool [mem: Global loc: 0 size: -7] [line: 54]
.   Child: 0  Parm: Feathers of type char [line: 54]						   |	.   Child: 0  Parm: Feathers of type char [mem: Parameter loc: -2 size: 1] [line: 54]
.   Sibling: 1  Parm: McGraw is array of type char [line: 54]					   |	.   Sibling: 1  Parm: McGraw of array of type char [mem: Parameter loc: -3 size: 1] [line: 54]
.   Sibling: 2  Parm: moon of type bool [line: 54]						   |	.   Sibling: 2  Parm: moon of type bool [mem: Parameter loc: -4 size: 1] [line: 54]
.   Sibling: 3  Parm: cheese of type bool [line: 54]						   |	.   Sibling: 3  Parm: cheese of type bool [mem: Parameter loc: -5 size: 1] [line: 54]
.   Sibling: 4  Parm: launch of type int [line: 54]						   |	.   Sibling: 4  Parm: launch of type int [mem: Parameter loc: -6 size: 1] [line: 54]
.   Child: 1  Compound [line: 55]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -27] [line: 55]
.   .   Child: 0  Var: tottington of type char [line: 56]					   |	.   .   Child: 0  Var: tottington of static type char [mem: LocalStatic loc: -15 size: 1] [line:
.   .   Sibling: 1  Var: Wensleydale is array of type char [line: 57]				   |	.   .   Sibling: 1  Var: Wensleydale of array of type char [mem: Local loc: -8 size: 18] [line: 
.   .   Sibling: 2  Var: c of type char [line: 58]						   |	.   .   Sibling: 2  Var: c of type char [mem: Local loc: -25 size: 1] [line: 58]
.   .   Sibling: 3  Var: i of type int [line: 59]						   |	.   .   Sibling: 3  Var: i of type int [mem: Local loc: -26 size: 1] [line: 59]
.   .   .   Child: 0  Id: tottington of type char [line: 61]					   |	.   .   .   Child: 0  Id: tottington of static type char [mem: LocalStatic loc: -15 size: 1] [li
.   .   .   Child: 1  Id: Feathers of type char [line: 61]					   |	.   .   .   Child: 1  Id: Feathers of type char [mem: Parameter loc: -2 size: 1] [line: 61]
.   .   .   Child: 0  Id: moon of type bool [line: 62]						   |	.   .   .   Child: 0  Id: moon of type bool [mem: Parameter loc: -4 size: 1] [line: 62]
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 62]				   |	.   .   .   .   .   Child: 0  Id: McGraw of array of type char [mem: Parameter loc: -3 size: 1] 
.   .   .   .   .   Child: 1  Id: Wensleydale of type char [line: 62]				   |	.   .   .   .   .   Child: 1  Id: Wensleydale of array of type char [mem: Local loc: -8 size: 18
.   .   .   .   Child: 1  Id: moon of type bool [line: 62]					   |	.   .   .   .   Child: 1  Id: moon of type bool [mem: Parameter loc: -4 size: 1] [line: 62]
.   .   Sibling: 2  Assign: = of type char [line: 63]						   |	.   .   Sibling: 2  Assign: = of array of type char [line: 63]
.   .   .   Child: 0  Id: Wensleydale of type char [line: 63]					   |	.   .   .   Child: 0  Id: Wensleydale of array of type char [mem: Local loc: -8 size: 18] [line:
.   .   .   Child: 1  Id: McGraw of type char [line: 63]					   |	.   .   .   Child: 1  Id: McGraw of array of type char [mem: Parameter loc: -3 size: 1] [line: 6
.   .   .   .   Child: 0  Id: Wensleydale of type char [line: 64]				   |	.   .   .   .   Child: 0  Id: Wensleydale of array of type char [mem: Local loc: -8 size: 18] [l
.   .   .   .   .   Child: 0  Id: McGraw of type char [line: 64]				   |	.   .   .   .   .   Child: 0  Id: McGraw of array of type char [mem: Parameter loc: -3 size: 1] 
.   .   .   .   Child: 0  Id: McGraw of type char [line: 65]					   |	.   .   .   .   Child: 0  Id: McGraw of array of type char [mem: Parameter loc: -3 size: 1] [lin
Sibling: 4  Func: Wendolene returns type int [line: 68]						   |	Sibling: 4  Func: Wendolene returns type int [mem: Global loc: 0 size: -6] [line: 68]
.   Child: 0  Parm: wool of type int [line: 68]							   |	.   Child: 0  Parm: wool of type int [mem: Parameter loc: -2 size: 1] [line: 68]
.   Sibling: 1  Parm: shaun of type bool [line: 68]						   |	.   Sibling: 1  Parm: shaun of type bool [mem: Parameter loc: -3 size: 1] [line: 68]
.   Sibling: 2  Parm: yarn is array of type int [line: 68]					   |	.   Sibling: 2  Parm: yarn of array of type int [mem: Parameter loc: -4 size: 1] [line: 68]
.   Sibling: 3  Parm: preston is array of type bool [line: 68]					   |	.   Sibling: 3  Parm: preston of array of type bool [mem: Parameter loc: -5 size: 1] [line: 68]
.   Child: 1  Compound [line: 69]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -7] [line: 69]
.   .   Child: 0  Var: skein of type int [line: 70]						   |	.   .   Child: 0  Var: skein of type int [mem: Local loc: -6 size: 1] [line: 70]
.   .   .   .   Child: 0  Id: preston of type bool [line: 71]					   |	.   .   .   .   Child: 0  Id: preston of array of type bool [mem: Parameter loc: -5 size: 1] [li
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 71]				   |	.   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 size: 1]
.   .   .   .   .   Child: 1  Id: wool of type int [line: 71]					   |	.   .   .   .   .   Child: 1  Id: wool of type int [mem: Parameter loc: -2 size: 1] [line: 71]
.   .   .   .   .   Child: 0  Id: shaun of type bool [line: 71]					   |	.   .   .   .   .   Child: 0  Id: shaun of type bool [mem: Parameter loc: -3 size: 1] [line: 71]
.   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]				   |	.   .   .   .   .   .   .   Child: 0  Id: wool of type int [mem: Parameter loc: -2 size: 1] [lin
.   .   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]			   |	.   .   .   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				   |	.   .   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 size
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				   |	.   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 size: 1]
.   .   .   .   .   .   .   Child: 1  Id: wool of type int [line: 72]				   |	.   .   .   .   .   .   .   Child: 1  Id: wool of type int [mem: Parameter loc: -2 size: 1] [lin
.   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]					   |	.   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 size: 1] [li
.   .   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 72]				   |	.   .   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Parameter loc: -4 size
.   .   .   .   .   .   .   .   .   Child: 0  Id: wool of type int [line: 72]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: wool of type int [mem: Parameter loc: -2 size:
Sibling: 5  Func: ramsBottom returns type bool [line: 76]					   |	Sibling: 5  Func: ramsBottom returns type bool [mem: Global loc: 0 size: -2] [line: 76]
.   Child: 1  Compound [line: 77]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 77]
.   .   Child: 0  Var: chicken is array of type int [line: 78]					   |	.   .   Child: 0  Var: chicken of array of type int [mem: Local loc: -3 size: 3] [line: 78]
.   .   Sibling: 1  Var: run is array of type bool [line: 79]					   |	.   .   Sibling: 1  Var: run of array of type bool [mem: Local loc: -6 size: 4] [line: 79]
.   .   Sibling: 2  Var: wallace is array of type int [line: 80]				   |	.   .   Sibling: 2  Var: wallace of array of type int [mem: Local loc: -10 size: 3] [line: 80]
.   .   Sibling: 3  Var: gromit is array of type int [line: 80]					   |	.   .   Sibling: 3  Var: gromit of array of type int [mem: Local loc: -13 size: 4] [line: 80]
.   .   .   .   Sibling: 2  Id: chicken of type int [line: 82]					   |	.   .   .   .   Sibling: 2  Id: chicken of array of type int [mem: Local loc: -3 size: 3] [line:
.   .   .   .   Sibling: 3  Id: run of type bool [line: 82]					   |	.   .   .   .   Sibling: 3  Id: run of array of type bool [mem: Local loc: -6 size: 4] [line: 82
.   .   .   Child: 0  Id: run of type bool [line: 83]						   |	.   .   .   Child: 0  Id: run of array of type bool [mem: Local loc: -6 size: 4] [line: 83]
.   .   .   .   .   Child: 0  Id: run of type bool [line: 83]					   |	.   .   .   .   .   Child: 0  Id: run of array of type bool [mem: Local loc: -6 size: 4] [line: 
.   .   .   .   .   .   Child: 0  Id: wallace of type int [line: 85]				   |	.   .   .   .   .   .   Child: 0  Id: wallace of array of type int [mem: Local loc: -10 size: 3]
.   .   .   .   .   .   .   .   Child: 0  Id: gromit of type int [line: 85]			   |	.   .   .   .   .   .   .   .   Child: 0  Id: gromit of array of type int [mem: Local loc: -13 s
Sibling: 6  Func: cheese returns type int [line: 88]						   |	Sibling: 6  Func: cheese returns type int [mem: Global loc: 0 size: -4] [line: 88]
.   Child: 0  Parm: x of type int [line: 88]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 88]
.   Sibling: 1  Parm: y of type int [line: 88]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 88]
.   Child: 1  Compound [line: 88]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 88]
.   .   .   .   Child: 0  Id: x of type int [line: 88]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 88]
.   .   .   .   .   Child: 0  Id: y of type int [line: 88]					   |	.   .   .   .   .   Child: 0  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 88]
.   .   .   .   .   Child: 0  Id: x of type int [line: 88]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 88]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 88]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 
.   .   .   .   .   .   .   Child: 1  Id: x of type int [line: 88]				   |	.   .   .   .   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 
.   .   .   .   .   .   Child: 1  Id: y of type int [line: 88]					   |	.   .   .   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 88]
Sibling: 7  Func: Wensleydale returns type int [line: 90]					   |	Sibling: 7  Func: Wensleydale returns type int [mem: Global loc: 0 size: -4] [line: 90]
.   Child: 0  Parm: x of type int [line: 90]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 90]
.   Sibling: 1  Parm: y of type int [line: 90]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 90]
.   Child: 1  Compound [line: 90]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 90]
.   .   .   .   Child: 0  Id: x of type int [line: 90]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 90]
.   .   .   .   Sibling: 1  Id: gromit of type int [line: 90]					   |	.   .   .   .   Sibling: 1  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 90]
Sibling: 8  Func: LadyCampanula returns type int [line: 92]					   |	Sibling: 8  Func: LadyCampanula returns type int [mem: Global loc: 0 size: -4] [line: 92]
.   Child: 0  Parm: c of type char [line: 92]							   |	.   Child: 0  Parm: c of type char [mem: Parameter loc: -2 size: 1] [line: 92]
.   Sibling: 1  Parm: s is array of type char [line: 92]					   |	.   Sibling: 1  Parm: s of array of type char [mem: Parameter loc: -3 size: 1] [line: 92]
.   Child: 1  Compound [line: 92]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 92]
.   .   .   Child: 1  For [line: 92]								   |	.   .   .   Child: 1  For [mem: None loc: 0 size: -5] [line: 92]
.   .   .   .   Child: 0  Var: i of type int [line: 92]						   |	.   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 92]
.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]				   |	.   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 
.   .   .   .   .   .   .   Child: 0  Id: s of type char [line: 92]				   |	.   .   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 
.   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 92]				   |	.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 92]
.   .   .   .   .   .   Child: 1  Id: c of type char [line: 92]					   |	.   .   .   .   .   .   Child: 1  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 92]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 92]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 92]
Sibling: 9  Func: MrsTweedy returns type char [line: 95]					   |	Sibling: 9  Func: MrsTweedy returns type char [mem: Global loc: 0 size: -4] [line: 95]
.   Child: 0  Parm: c of type char [line: 95]							   |	.   Child: 0  Parm: c of type char [mem: Parameter loc: -2 size: 1] [line: 95]
.   Sibling: 1  Parm: s is array of type char [line: 95]					   |	.   Sibling: 1  Parm: s of array of type char [mem: Parameter loc: -3 size: 1] [line: 95]
.   Child: 1  Compound [line: 96]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 96]
.   .   Child: 1  For [line: 97]								   |	.   .   Child: 1  For [mem: None loc: 0 size: -5] [line: 97]
.   .   .   Child: 0  Var: ginger of type int [line: 97]					   |	.   .   .   Child: 0  Var: ginger of type int [mem: Local loc: -4 size: 1] [line: 97]
.   .   .   .   .   Child: 0  Id: s of type char [line: 97]					   |	.   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 1] [line
.   .   .   .   .   Child: 1  Id: ginger of type int [line: 97]					   |	.   .   .   .   .   Child: 1  Id: ginger of type int [mem: Local loc: -4 size: 1] [line: 97]
.   .   .   .   Child: 1  Id: c of type char [line: 97]						   |	.   .   .   .   Child: 1  Id: c of type char [mem: Parameter loc: -2 size: 1] [line: 97]
.   .   Sibling: 1  For [line: 98]								   |	.   .   Sibling: 1  For [mem: None loc: 0 size: -5] [line: 98]
.   .   .   Child: 0  Var: pastry of type int [line: 98]					   |	.   .   .   Child: 0  Var: pastry of type int [mem: Local loc: -4 size: 1] [line: 98]
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]					   |	.   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 1] [
.   .   .   .   .   .   Child: 0  Id: s of type char [line: 98]					   |	.   .   .   .   .   .   Child: 0  Id: s of array of type char [mem: Parameter loc: -3 size: 1] [
Sibling: 10  Func: TheWereRabbit returns type char [line: 104]					   |	Sibling: 10  Func: TheWereRabbit returns type char [mem: Global loc: 0 size: -3] [line: 104]
.   Child: 0  Parm: x of type int [line: 104]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 104]
.   Child: 1  Compound [line: 105]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 105]
.   .   .   .   Child: 0  Id: x of type int [line: 106]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 106]
.   .   .   .   .   Child: 0  Id: x of type int [line: 107]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 107]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 108]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 108]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 109]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 110]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [li
Sibling: 11  Func: main returns type int [line: 114]						   |	Sibling: 11  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 114]
.   Child: 1  Compound [line: 115]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -154] [line: 115]
.   .   Child: 0  Var: wool of type int [line: 116]						   |	.   .   Child: 0  Var: wool of type int [mem: Local loc: -2 size: 1] [line: 116]
.   .   Sibling: 1  Var: yarn is array of type int [line: 116]					   |	.   .   Sibling: 1  Var: yarn of array of type int [mem: Local loc: -4 size: 114] [line: 116]
.   .   Sibling: 2  Var: shaun of type bool [line: 117]						   |	.   .   Sibling: 2  Var: shaun of type bool [mem: Local loc: -117 size: 1] [line: 117]
.   .   Sibling: 3  Var: preston is array of type bool [line: 117]				   |	.   .   Sibling: 3  Var: preston of array of type bool [mem: Local loc: -119 size: 23] [line: 11
.   .   Sibling: 4  Var: rocky is array of type char [line: 118]				   |	.   .   Sibling: 4  Var: rocky of array of type char [mem: Local loc: -142 size: 13] [line: 118]
.   .   .   Sibling: 1  Id: gromit of type int [line: 120]					   |	.   .   .   Sibling: 1  Id: gromit of type int [mem: Global loc: 0 size: 1] [line: 120]
.   .   Sibling: 1  Assign: = of type char [line: 121]						   |	.   .   Sibling: 1  Assign: = of array of type char [line: 121]
.   .   .   Child: 0  Id: rocky of type char [line: 121]					   |	.   .   .   Child: 0  Id: rocky of array of type char [mem: Local loc: -142 size: 13] [line: 121
.   .   .   Child: 1  Const is array "molybdenum" of type char [line: 121]			   |	.   .   .   Child: 1  Const "molybdenum" of array of type char [mem: Global loc: -17 size: 11] [
.   .   .   Sibling: 1  Id: rocky of type char [line: 123]					   |	.   .   .   Sibling: 1  Id: rocky of array of type char [mem: Local loc: -142 size: 13] [line: 1
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]					   |	.   .   .   .   Child: 0  Id: yarn of array of type int [mem: Local loc: -4 size: 114] [line: 12
.   .   .   .   Child: 0  Id: yarn of type int [line: 125]					   |	.   .   .   .   Child: 0  Id: yarn of array of type int [mem: Local loc: -4 size: 114] [line: 12
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 125]				   |	.   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Local loc: -4 size: 114] [
.   .   .   .   .   .   Child: 0  Id: preston of type bool [line: 127]				   |	.   .   .   .   .   .   Child: 0  Id: preston of array of type bool [mem: Local loc: -119 size: 
.   .   .   .   .   .   Child: 0  Id: yarn of type int [line: 127]				   |	.   .   .   .   .   .   Child: 0  Id: yarn of array of type int [mem: Local loc: -4 size: 114] [
.   .   .   .   Sibling: 1  Id: shaun of type bool [line: 127]					   |	.   .   .   .   Sibling: 1  Id: shaun of type bool [mem: Local loc: -117 size: 1] [line: 127]
.   .   .   .   Sibling: 2  Id: yarn of type int [line: 127]					   |	.   .   .   .   Sibling: 2  Id: yarn of array of type int [mem: Local loc: -4 size: 114] [line: 
.   .   .   .   Sibling: 3  Id: preston of type bool [line: 127]				   |	.   .   .   .   Sibling: 3  Id: preston of array of type bool [mem: Local loc: -119 size: 23] [l
Sibling: 12  Var: aBigLongVariableName6andthx1138 of type bool [line: 130]			   |	Sibling: 12  Var: aBigLongVariableName6andthx1138 of type bool [mem: Global loc: -27 size: 1] [l
Sibling: 13  Var: odd of type int [line: 131]							   |	Sibling: 13  Var: odd of type int [mem: Global loc: -28 size: 1] [line: 131]
Sibling: 14  Var: separation of type int [line: 131]						   |	Sibling: 14  Var: separation of type int [mem: Global loc: -29 size: 1] [line: 131]
Sibling: 15  Var: of of type int [line: 131]							   |	Sibling: 15  Var: of of type int [mem: Global loc: -30 size: 1] [line: 131]
Sibling: 16  Var: stuff of type int [line: 132]							   |	Sibling: 16  Var: stuff of type int [mem: Global loc: -31 size: 1] [line: 132]
Sibling: 17  Var: ant is array of type char [line: 134]						   |	Sibling: 17  Var: ant of array of type char [mem: Global loc: -44 size: 11] [line: 134]
.   Child: 0  Const is array "unwrinkled" of type char [line: 134]				   |	.   Child: 0  Const "unwrinkled" of array of type char [mem: Global loc: -33 size: 11] [line: 13
Sibling: 18  Var: bat of type char [line: 135]							   |	Sibling: 18  Var: bat of type char [mem: Global loc: -54 size: 1] [line: 135]
Sibling: 19  Var: cat of type char [line: 136]							   |	Sibling: 19  Var: cat of type char [mem: Global loc: -55 size: 1] [line: 136]
Sibling: 20  Var: dog of type char [line: 137]							   |	Sibling: 20  Var: dog of type char [mem: Global loc: -56 size: 1] [line: 137]
Sibling: 21  Var: hog of type char [line: 138]							   |	Sibling: 21  Var: hog of type char [mem: Global loc: -57 size: 1] [line: 138]
												   >	Offset for end of global space: -58
============================================================================================================
data/exampleScope.c-
Var: g of type int [line: 2]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   Child: 0  Var: a of type int [line: 5]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Child: 1  Compound [line: 6]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   .   Child: 0  Var: b of type int [line: 7]						   |	.   .   .   Child: 0  Var: b of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   Child: 1  Compound [line: 8]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   .   .   Child: 0  Var: c of type int [line: 9]						   |	.   .   .   .   Child: 0  Var: c of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   Sibling: 1  Compound [line: 12]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -4] [line: 12]
.   .   .   Child: 0  Var: d of type int [line: 13]						   |	.   .   .   Child: 0  Var: d of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Compound [line: 14]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 14]
.   .   .   .   Child: 0  Var: e of type int [line: 15]						   |	.   .   .   .   Child: 0  Var: e of type int [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   .   Sibling: 1  Var: f of type int [line: 16]					   |	.   .   .   .   Sibling: 1  Var: f of type int [mem: Local loc: -5 size: 1] [line: 16]
												   >	Offset for end of global space: -1
============================================================================================================
data/exp2.c-
============================================================================================================
data/exp3.c-
============================================================================================================
data/exp4.c-
============================================================================================================
data/exp.c-
Func: ident returns type int [line: 2]								   |	Func: ident returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   Child: 0  Id: x of type int [line: 2]						   |	.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   Child: 0  Var: x of type bool [line: 6]							   |	.   .   Child: 0  Var: x of type bool [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: x of type bool [line: 31]						   |	.   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -2 size: 1] [line: 31]
												   >	Offset for end of global space: 0
============================================================================================================
data/expL.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   .   Child: 1  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
												   >	Offset for end of global space: 0
============================================================================================================
data/expR.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   .   .   Child: 0  Id: x of type int [line: 6]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
												   >	Offset for end of global space: 0
============================================================================================================
data/fact.c-
Func: fact returns type int [line: 3]								   |	Func: fact returns type int [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
.   .   Child: 0  Var: i of type int [line: 5]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 1  Var: f of type int [line: 5]						   |	.   .   Sibling: 1  Var: f of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   .   Child: 0  Id: f of type int [line: 7]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: i of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 1  Id: n of type int [line: 8]						   |	.   .   .   .   Child: 1  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   .   Child: 1  Compound [line: 8]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   .   .   .   Child: 0  Id: i of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 0  Id: f of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 10]					   |	.   .   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 10]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   Child: 0  Id: i of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   Child: 0  Id: f of type int [line: 14]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 14]
Sibling: 1  Func: main returns type void [line: 17]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 17]
.   Child: 1  Compound [line: 18]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 18]
.   .   Child: 0  Var: n of type int [line: 19]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   Child: 0  Id: n of type int [line: 21]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   Child: 0  Id: n of type int [line: 22]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 22]
												   >	Offset for end of global space: 0
============================================================================================================
data/factor.c-
Func: sqrt returns type int [line: 2]								   |	Func: sqrt returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 0  Var: guess of type int [line: 4]						   |	.   .   Child: 0  Var: guess of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 1  Var: newguess of type int [line: 5]						   |	.   .   Sibling: 1  Var: newguess of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   Child: 0  Id: guess of type int [line: 8]						   |	.   .   .   Child: 0  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: x of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   .   Child: 0  Id: newguess of type int [line: 9]					   |	.   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   Child: 1  Id: guess of type int [line: 9]				   |	.   .   .   .   .   .   Child: 1  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 1  Id: guess of type int [line: 9]					   |	.   .   .   .   .   Child: 1  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 0  Id: guess of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   Child: 1  Id: newguess of type int [line: 10]				   |	.   .   .   .   .   Child: 1  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 1  Compound [line: 10]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 10]
.   .   .   .   .   Child: 0  Id: guess of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Id: newguess of type int [line: 11]				   |	.   .   .   .   .   Child: 1  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   .   Child: 0  Id: newguess of type int [line: 12]				   |	.   .   .   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 12]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   Child: 1  Id: guess of type int [line: 12]			   |	.   .   .   .   .   .   .   .   Child: 1  Id: guess of type int [mem: Local loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Id: guess of type int [line: 12]				   |	.   .   .   .   .   .   .   Child: 1  Id: guess of type int [mem: Local loc: -3 size: 1] [line: 
.   .   .   .   .   Child: 0  Id: newguess of type int [line: 14]				   |	.   .   .   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   Child: 1  Id: newguess of type int [line: 14]				   |	.   .   .   .   .   Child: 1  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   Child: 1  Id: x of type int [line: 14]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: newguess of type int [line: 14]					   |	.   .   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   Child: 0  Id: newguess of type int [line: 14]				   |	.   .   .   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   Child: 0  Id: newguess of type int [line: 16]					   |	.   .   .   Child: 0  Id: newguess of type int [mem: Local loc: -4 size: 1] [line: 16]
Sibling: 1  Func: main returns type void [line: 20]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 20]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 21]
.   .   Child: 0  Var: n of type int [line: 22]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 22]
.   .   Sibling: 1  Var: i of type int [line: 23]						   |	.   .   Sibling: 1  Var: i of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: n of type int [line: 25]					   |	.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   Child: 1  Compound [line: 25]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 25]
.   .   .   .   Child: 0  Var: limit of type int [line: 26]					   |	.   .   .   .   Child: 0  Var: limit of type int [mem: Local loc: -4 size: 1] [line: 26]
.   .   .   .   .   Child: 0  Id: limit of type int [line: 27]					   |	.   .   .   .   .   Child: 0  Id: limit of type int [mem: Local loc: -4 size: 1] [line: 27]
.   .   .   .   .   .   Child: 0  Id: n of type int [line: 27]					   |	.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 30]				   |	.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 30]
.   .   .   .   .   Child: 1  Compound [line: 30]						   |	.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 30]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 32]				   |	.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 32]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 
.   .   .   .   .   Child: 0  Id: i of type int [line: 36]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 36]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 37]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 37]
.   .   .   .   .   .   Child: 1  Id: limit of type int [line: 37]				   |	.   .   .   .   .   .   Child: 1  Id: limit of type int [mem: Local loc: -4 size: 1] [line: 37]
.   .   .   .   .   Child: 1  Compound [line: 37]						   |	.   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 37]
.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 38]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 38]			   |	.   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Compound [line: 38]					   |	.   .   .   .   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 38]
.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 39]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [li
.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 40]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 40]			   |	.   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1]
.   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 40]			   |	.   .   .   .   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1]
.   .   .   .   .   .   .   .   .   Child: 0  Id: limit of type int [line: 41]			   |	.   .   .   .   .   .   .   .   .   Child: 0  Id: limit of type int [mem: Local loc: -4 size: 1]
.   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 41]			   |	.   .   .   .   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1]
.   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 43]				   |	.   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 43]
.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [line: 43]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: n of type int [line: 46]					   |	.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 46]
.   .   .   .   .   .   Child: 0  Id: n of type int [line: 46]					   |	.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 46]
												   >	Offset for end of global space: 0
============================================================================================================
data/factorial2.c-
Func: factorial returns type int [line: 3]							   |	Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
.   .   Child: 0  Var: i of type int [line: 5]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 1  Var: f of type int [line: 5]						   |	.   .   Sibling: 1  Var: f of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   .   Child: 0  Id: f of type int [line: 7]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: i of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 1  Id: n of type int [line: 8]						   |	.   .   .   .   Child: 1  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   .   .   Child: 1  Compound [line: 8]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   .   .   .   Child: 0  Id: i of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 0  Id: f of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 10]					   |	.   .   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 10]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   Child: 0  Id: i of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   Child: 0  Id: f of type int [line: 14]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 14]
Sibling: 1  Func: main returns type void [line: 17]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 17]
.   Child: 1  Compound [line: 18]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 18]
.   .   Child: 0  Var: n of type int [line: 19]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   Child: 0  Id: n of type int [line: 20]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 20]
.   .   .   Child: 0  Id: n of type int [line: 21]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   Child: 0  Id: n of type int [line: 21]						   |	.   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   Child: 0  Id: n of type int [line: 22]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 22]
												   >	Offset for end of global space: 0
============================================================================================================
data/factorial.c-
Func: factorial returns type int [line: 3]							   |	Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
.   .   Child: 0  Var: i of type int [line: 5]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 1  Var: f of type int [line: 5]						   |	.   .   Sibling: 1  Var: f of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   .   Child: 0  Id: f of type int [line: 6]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: i of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: n of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   Child: 1  Compound [line: 7]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 7]
.   .   .   .   .   Child: 0  Id: i of type int [line: 8]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   .   Child: 0  Id: f of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 9]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   .   Child: 0  Id: i of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 0  Id: f of type int [line: 12]						   |	.   .   .   Child: 0  Id: f of type int [mem: Local loc: -4 size: 1] [line: 12]
Sibling: 1  Func: main returns type void [line: 15]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 15]
.   Child: 1  Compound [line: 16]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 16]
.   .   Child: 0  Var: n of type int [line: 17]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 17]
.   .   .   Child: 0  Id: n of type int [line: 18]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: n of type int [line: 19]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: n of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   Child: 0  Id: n of type int [line: 20]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 20]
												   >	Offset for end of global space: 0
============================================================================================================
data/factorialr.c-
Func: factorial returns type int [line: 3]							   |	Func: factorial returns type int [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   .   .   Child: 0  Id: n of type int [line: 5]						   |	.   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 5]
.   .   .   .   .   Child: 0  Id: n of type int [line: 6]					   |	.   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 6]
.   .   .   .   .   .   .   Child: 0  Id: n of type int [line: 6]				   |	.   .   .   .   .   .   .   Child: 0  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 
Sibling: 1  Func: main returns type void [line: 9]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 9]
.   Child: 1  Compound [line: 10]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 10]
.   .   Child: 0  Var: n of type int [line: 11]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 0  Id: n of type int [line: 12]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 12]
.   .   .   Child: 0  Id: n of type int [line: 13]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: n of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 0  Id: n of type int [line: 14]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 14]
												   >	Offset for end of global space: 0
============================================================================================================
data/fail.c-
============================================================================================================
data/for2.c-
ERROR(5): Symbol 'j' is not declared.								   <
												   >	ERROR(5): Symbol 'j' is not declared.
============================================================================================================
data/fora.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
.   .   Child: 1  For [line: 3]									   |	.   .   Child: 1  For [mem: None loc: 0 size: -3] [line: 3]
.   .   .   Child: 0  Var: i of type int [line: 3]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   .   .   Child: 0  Id: i of type int [line: 3]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  For [line: 5]								   |	.   .   Sibling: 1  For [mem: None loc: 0 size: -3] [line: 5]
.   .   .   Child: 0  Var: j of type int [line: 5]						   |	.   .   .   Child: 0  Var: j of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   .   Child: 0  Id: j of type int [line: 5]						   |	.   .   .   .   Child: 0  Id: j of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Sibling: 2  For [line: 7]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 7]
.   .   .   Child: 0  Var: i of type int [line: 7]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 2  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 2  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
												   >	Offset for end of global space: 0
============================================================================================================
data/forb.c-
============================================================================================================
data/for.c-
============================================================================================================
data/forerr.c-
WARNING(8): Variable 'bb' may be uninitialized when used here.					   <
												   >	WARNING(8): Variable 'bb' may be uninitialized when used here.
WARNING(10): Variable 'c' may be uninitialized when used here.					   <
												   >	WARNING(10): Variable 'c' may be uninitialized when used here.
============================================================================================================
data/forscope.c-
============================================================================================================
data/funcscope.c-
============================================================================================================
data/gcd2.c-
Func: gcd returns type int [line: 4]								   |	Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 4]
.   Child: 0  Parm: u of type int [line: 4]							   |	.   Child: 0  Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Sibling: 1  Parm: v of type int [line: 4]							   |	.   Sibling: 1  Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   .   .   Child: 0  Id: v of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: u of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   .   Child: 0  Id: v of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]				   |	.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]				   |	.   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 
Sibling: 1  Func: main returns type void [line: 12]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 12]
.   Child: 1  Compound [line: 13]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 13]
												   >	Offset for end of global space: 0
============================================================================================================
data/gcd.c-
Func: gcd returns type int [line: 4]								   |	Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 4]
.   Child: 0  Parm: u of type int [line: 4]							   |	.   Child: 0  Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Sibling: 1  Parm: v of type int [line: 4]							   |	.   Sibling: 1  Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   .   .   Child: 0  Id: v of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: u of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   .   Child: 0  Id: v of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [line: 9]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]				   |	.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 9]				   |	.   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 
Sibling: 1  Func: main returns type void [line: 12]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 12]
.   Child: 1  Compound [line: 13]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 13]
.   .   Child: 0  Var: x of type int [line: 14]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   Sibling: 1  Var: y of type int [line: 14]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   Sibling: 2  Var: z of type int [line: 14]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   Child: 0  Id: x of type int [line: 16]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]
.   .   .   Child: 0  Id: y of type int [line: 17]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 17]
.   .   .   Child: 0  Id: z of type int [line: 18]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: x of type int [line: 18]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   Sibling: 1  Id: y of type int [line: 18]					   |	.   .   .   .   Sibling: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   Child: 0  Id: z of type int [line: 19]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]
												   >	Offset for end of global space: 0
============================================================================================================
data/gcdsm2.c-
Func: gcd returns type int [line: 1]								   |	Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 1]
.   Child: 0  Parm: u of type int [line: 1]							   |	.   Child: 0  Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Sibling: 1  Parm: v of type int [line: 1]							   |	.   Sibling: 1  Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 1]
.   Child: 1  Compound [line: 1]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 1]
.   .   .   .   Child: 0  Id: v of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: u of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   .   Child: 0  Id: v of type int [line: 3]					   |	.   .   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   .   .   .   .   .   Child: 0  Id: u of type int [line: 3]					   |	.   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [line: 3]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 3]				   |	.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 3]				   |	.   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 
Sibling: 1  Func: main returns type void [line: 5]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 5]
.   Child: 1  Compound [line: 6]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 6]
												   >	Offset for end of global space: 0
============================================================================================================
data/gcdsm.c-
Func: gcd returns type int [line: 2]								   |	Func: gcd returns type int [mem: Global loc: 0 size: -4] [line: 2]
.   Child: 0  Parm: u of type int [line: 2]							   |	.   Child: 0  Parm: u of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: v of type int [line: 2]							   |	.   Sibling: 1  Parm: v of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   .   .   Child: 0  Id: v of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: u of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   .   Child: 0  Id: v of type int [line: 2]					   |	.   .   .   .   .   Child: 0  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   .   .   Child: 0  Id: u of type int [line: 2]					   |	.   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [line: 2]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: u of type int [mem: Parameter loc: -2 size: 1] [li
.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 2]				   |	.   .   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [li
.   .   .   .   .   .   .   Child: 1  Id: v of type int [line: 2]				   |	.   .   .   .   .   .   .   Child: 1  Id: v of type int [mem: Parameter loc: -3 size: 1] [line: 
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   Sibling: 1  Var: y of type int [line: 6]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   Child: 0  Id: x of type int [line: 8]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   Child: 0  Id: y of type int [line: 9]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: x of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Sibling: 1  Id: y of type int [line: 10]					   |	.   .   .   .   Sibling: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
												   >	Offset for end of global space: 0
============================================================================================================
data/id.c-
Func: george returns type bool [line: 1]							   |	Func: george returns type bool [mem: Global loc: 0 size: -5] [line: 1]
.   Child: 0  Parm: a of type int [line: 1]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Sibling: 1  Parm: b is array of type int [line: 1]						   |	.   Sibling: 1  Parm: b of array of type int [mem: Parameter loc: -3 size: 1] [line: 1]
.   Sibling: 2  Parm: c of type int [line: 1]							   |	.   Sibling: 2  Parm: c of type int [mem: Parameter loc: -4 size: 1] [line: 1]
.   Child: 1  Compound [line: 1]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 1]
.   .   Child: 0  Var: d of type char [line: 2]							   |	.   .   Child: 0  Var: d of type char [mem: Local loc: -5 size: 1] [line: 2]
.   .   Sibling: 1  Var: e of type char [line: 2]						   |	.   .   Sibling: 1  Var: e of type char [mem: Local loc: -6 size: 1] [line: 2]
.   .   Sibling: 2  Var: f of type char [line: 2]						   |	.   .   Sibling: 2  Var: f of type char [mem: Local loc: -7 size: 1] [line: 2]
.   .   .   .   .   Child: 0  Id: b of type int [line: 3]					   |	.   .   .   .   .   Child: 0  Id: b of array of type int [mem: Parameter loc: -3 size: 1] [line:
Sibling: 1  Func: main returns type void [line: 6]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]
.   Child: 1  Compound [line: 7]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -38] [line: 7]
.   .   Child: 0  Var: xa is array of type int [line: 8]					   |	.   .   Child: 0  Var: xa of array of type int [mem: Local loc: -3 size: 11] [line: 8]
.   .   Sibling: 1  Var: x of type int [line: 9]						   |	.   .   Sibling: 1  Var: x of type int [mem: Local loc: -13 size: 1] [line: 9]
.   .   Sibling: 2  Var: ca is array of type char [line: 10]					   |	.   .   Sibling: 2  Var: ca of array of type char [mem: Local loc: -15 size: 11] [line: 10]
.   .   .   Child: 0  Const is array "dogs" of type char [line: 10]				   |	.   .   .   Child: 0  Const "dogs" of array of type char [mem: Global loc: -1 size: 5] [line: 10
.   .   Sibling: 3  Var: c of type char [line: 11]						   |	.   .   Sibling: 3  Var: c of type char [mem: Local loc: -25 size: 1] [line: 11]
.   .   Sibling: 4  Var: ba is array of type bool [line: 12]					   |	.   .   Sibling: 4  Var: ba of array of type bool [mem: Local loc: -27 size: 11] [line: 12]
.   .   Sibling: 5  Var: b of type bool [line: 13]						   |	.   .   Sibling: 5  Var: b of type bool [mem: Local loc: -37 size: 1] [line: 13]
.   .   Child: 1  For [line: 14]								   |	.   .   Child: 1  For [mem: None loc: 0 size: -39] [line: 14]
.   .   .   Child: 0  Var: f of type int [line: 14]						   |	.   .   .   Child: 0  Var: f of type int [mem: Local loc: -38 size: 1] [line: 14]
.   .   .   Child: 2  Id: f of type int [line: 14]						   |	.   .   .   Child: 2  Id: f of type int [mem: Local loc: -38 size: 1] [line: 14]
.   .   Sibling: 1  Id: xa of type int [line: 16]						   |	.   .   Sibling: 1  Id: xa of array of type int [mem: Local loc: -3 size: 11] [line: 16]
.   .   Sibling: 2  Id: x of type int [line: 17]						   |	.   .   Sibling: 2  Id: x of type int [mem: Local loc: -13 size: 1] [line: 17]
.   .   Sibling: 3  Id: ca of type char [line: 18]						   |	.   .   Sibling: 3  Id: ca of array of type char [mem: Local loc: -15 size: 11] [line: 18]
.   .   Sibling: 4  Id: c of type char [line: 19]						   |	.   .   Sibling: 4  Id: c of type char [mem: Local loc: -25 size: 1] [line: 19]
.   .   Sibling: 5  Id: ba of type bool [line: 20]						   |	.   .   Sibling: 5  Id: ba of array of type bool [mem: Local loc: -27 size: 11] [line: 20]
.   .   Sibling: 6  Id: b of type bool [line: 21]						   |	.   .   Sibling: 6  Id: b of type bool [mem: Local loc: -37 size: 1] [line: 21]
.   .   .   Child: 0  Id: x of type int [line: 22]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -13 size: 1] [line: 22]
.   .   .   Sibling: 1  Id: xa of type int [line: 22]						   |	.   .   .   Sibling: 1  Id: xa of array of type int [mem: Local loc: -3 size: 11] [line: 22]
												   >	Offset for end of global space: -5
============================================================================================================
data/if2.c-
Func: main returns type int [line: 1]								   |	Func: main returns type int [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
												   >	Offset for end of global space: 0
============================================================================================================
data/if.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: x of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: x of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: x of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: x of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 11]
												   >	Offset for end of global space: 0
============================================================================================================
data/ifevil.c-
============================================================================================================
data/ifNest.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: z of type int [line: 4]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 2  Id: y of type int [line: 8]						   |	.   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: y of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 1  Id: y of type int [line: 10]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   Child: 1  Id: z of type int [line: 11]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Id: y of type int [line: 13]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   .   Child: 1  Id: z of type int [line: 14]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   Child: 2  Id: x of type int [line: 15]						   |	.   .   .   .   Child: 2  Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   .   Child: 0  Id: x of type int [line: 17]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 17]
.   .   .   .   Child: 1  Id: x of type int [line: 17]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 17]
.   .   .   .   Child: 2  Id: y of type int [line: 18]						   |	.   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   Child: 2  Id: z of type int [line: 19]						   |	.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 19]
												   >	Offset for end of global space: 0
============================================================================================================
data/init2.c-
Var: a is array of type int [line: 2]								   |	Var: a of array of type int [mem: Global loc: -1 size: 12] [line: 2]
Sibling: 1  Var: x of type int [line: 3]							   |	Sibling: 1  Var: x of type int [mem: Global loc: -12 size: 1] [line: 3]
Sibling: 2  Func: main returns type void [line: 5]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 5]
.   Child: 1  Compound [line: 6]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 6]
.   .   Child: 0  Var: b is array of type int [line: 7]						   |	.   .   Child: 0  Var: b of array of type int [mem: Local loc: -3 size: 23] [line: 7]
.   .   Sibling: 1  Var: y of type int [line: 8]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -25 size: 1] [line: 8]
.   .   Sibling: 2  Var: c is array of type int [line: 9]					   |	.   .   Sibling: 2  Var: c of static array of type int [mem: LocalStatic loc: -14 size: 34] [lin
.   .   Sibling: 3  Var: z of type int [line: 10]						   |	.   .   Sibling: 3  Var: z of static type int [mem: LocalStatic loc: -47 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: a of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: a of array of type int [mem: Global loc: -1 size: 12] [line: 12]
.   .   .   .   Child: 0  Id: b of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: b of array of type int [mem: Local loc: -3 size: 23] [line: 13]
.   .   .   .   Child: 0  Id: c of type int [line: 14]						   |	.   .   .   .   Child: 0  Id: c of static array of type int [mem: LocalStatic loc: -14 size: 34]
.   .   .   Child: 0  Id: x of type int [line: 17]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: -12 size: 1] [line: 17]
.   .   .   Child: 0  Id: y of type int [line: 18]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -25 size: 1] [line: 18]
.   .   .   Child: 0  Id: z of type int [line: 19]						   |	.   .   .   Child: 0  Id: z of static type int [mem: LocalStatic loc: -47 size: 1] [line: 19]
.   .   .   Child: 0  Id: z of type int [line: 22]						   |	.   .   .   Child: 0  Id: z of static type int [mem: LocalStatic loc: -47 size: 1] [line: 22]
												   >	Offset for end of global space: -48
============================================================================================================
data/init3.c-
Var: x of type int [line: 2]									   |	Var: x of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   Child: 0  Var: y of type int [line: 5]							   |	.   .   Child: 0  Var: y of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Sibling: 1  Var: z of type int [line: 6]						   |	.   .   Sibling: 1  Var: z of static type int [mem: LocalStatic loc: -1 size: 1] [line: 6]
.   .   Sibling: 2  Var: b of type bool [line: 7]						   |	.   .   Sibling: 2  Var: b of static type bool [mem: LocalStatic loc: -2 size: 1] [line: 7]
.   .   Sibling: 3  Var: c of type char [line: 8]						   |	.   .   Sibling: 3  Var: c of static type char [mem: LocalStatic loc: -3 size: 1] [line: 8]
.   .   .   Child: 0  Id: x of type int [line: 10]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   Child: 0  Id: y of type int [line: 11]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 0  Id: z of type int [line: 12]						   |	.   .   .   Child: 0  Id: z of static type int [mem: LocalStatic loc: -1 size: 1] [line: 12]
.   .   .   Child: 0  Id: b of type bool [line: 13]						   |	.   .   .   Child: 0  Id: b of static type bool [mem: LocalStatic loc: -2 size: 1] [line: 13]
.   .   .   Child: 0  Id: c of type char [line: 14]						   |	.   .   .   Child: 0  Id: c of static type char [mem: LocalStatic loc: -3 size: 1] [line: 14]
												   >	Offset for end of global space: -4
============================================================================================================
data/init4.c-
============================================================================================================
data/init5.c-
============================================================================================================
data/initbad2.c-
============================================================================================================
data/initbad.c-
============================================================================================================
data/init.c-
Var: a is array of type int [line: 3]								   |	Var: a of array of type int [mem: Global loc: -1 size: 12] [line: 3]
Sibling: 1  Var: x of type int [line: 4]							   |	Sibling: 1  Var: x of type int [mem: Global loc: -12 size: 1] [line: 4]
Sibling: 2  Func: main returns type void [line: 6]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]
.   Child: 1  Compound [line: 7]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -26] [line: 7]
.   .   Child: 0  Var: b is array of type int [line: 8]						   |	.   .   Child: 0  Var: b of array of type int [mem: Local loc: -3 size: 23] [line: 8]
.   .   Sibling: 1  Var: y of type int [line: 9]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -25 size: 1] [line: 9]
.   .   Sibling: 2  Var: c is array of type int [line: 10]					   |	.   .   Sibling: 2  Var: c of static array of type int [mem: LocalStatic loc: -14 size: 34] [lin
.   .   Sibling: 3  Var: z of type int [line: 11]						   |	.   .   Sibling: 3  Var: z of static type int [mem: LocalStatic loc: -47 size: 1] [line: 11]
.   .   .   Child: 0  Id: z of type int [line: 13]						   |	.   .   .   Child: 0  Id: z of static type int [mem: LocalStatic loc: -47 size: 1] [line: 13]
												   >	Offset for end of global space: -48
============================================================================================================
data/initconst.c-
============================================================================================================
data/initsm.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   Child: 0  Var: x of type int [line: 3]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: y of type int [line: 4]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 1  Id: y of type int [line: 6]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 6]
												   >	Offset for end of global space: 0
============================================================================================================
data/initused.c-
============================================================================================================
data/invalidChar.c-
============================================================================================================
data/io.c-
============================================================================================================
data/lec01.c-
Func: dog returns type int [line: 2]								   |	Func: dog returns type int [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   Child: 1  For [line: 7]									   |	.   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 7]
.   .   .   Child: 0  Var: i of type int [line: 7]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 1  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 2  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 2  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 0  Const is array "dog" of type char [line: 8]				   |	.   .   .   Child: 0  Const "dog" of array of type char [mem: Global loc: -1 size: 4] [line: 8]
.   .   .   Child: 1  Const is array "cat" of type char [line: 8]				   |	.   .   .   Child: 1  Const "cat" of array of type char [mem: Global loc: -5 size: 4] [line: 8]
												   >	Offset for end of global space: -8
============================================================================================================
data/lec02.c-
Var: c is array of type char [line: 1]								   |	Var: c of array of type char [mem: Global loc: -1 size: 101] [line: 1]
Sibling: 1  Var: d of type int [line: 2]							   |	Sibling: 1  Var: d of type int [mem: Global loc: -101 size: 1] [line: 2]
Sibling: 2  Func: main returns type void [line: 4]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -15] [line: 5]
.   .   Child: 0  Var: w of type bool [line: 6]							   |	.   .   Child: 0  Var: w of type bool [mem: Local loc: -2 size: 1] [line: 6]
.   .   Sibling: 1  Var: x is array of type bool [line: 6]					   |	.   .   Sibling: 1  Var: x of array of type bool [mem: Local loc: -4 size: 11] [line: 6]
.   .   Sibling: 2  Var: y of type bool [line: 6]						   |	.   .   Sibling: 2  Var: y of type bool [mem: Local loc: -14 size: 1] [line: 6]
												   >	Offset for end of global space: -102
============================================================================================================
data/lec03.c-
Func: cat returns type int [line: 1]								   |	Func: cat returns type int [mem: Global loc: 0 size: -3] [line: 1]
.   Child: 0  Parm: x of type int [line: 1]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]
.   Child: 1  Compound [line: 1]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 1]
.   .   .   Child: 0  Id: x of type int [line: 1]						   |	.   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 1]
Sibling: 1  Func: main returns type void [line: 3]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 4]
												   >	Offset for end of global space: 0
============================================================================================================
data/lec04.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 2]
.   .   Child: 0  Var: x of type int [line: 3]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: y of type int [line: 3]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Sibling: 2  Var: z of type int [line: 3]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 3]
.   .   .   Child: 0  Id: x of type int [line: 5]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   Child: 0  Id: y of type int [line: 6]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 0  Id: z of type int [line: 7]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 7]
												   >	Offset for end of global space: 0
============================================================================================================
data/lhs.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -74] [line: 2]
.   .   Child: 0  Var: a of type int [line: 3]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: b of type int [line: 3]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Sibling: 2  Var: c of type int [line: 3]						   |	.   .   Sibling: 2  Var: c of type int [mem: Local loc: -4 size: 1] [line: 3]
.   .   Sibling: 3  Var: d of type int [line: 3]						   |	.   .   Sibling: 3  Var: d of type int [mem: Local loc: -5 size: 1] [line: 3]
.   .   Sibling: 4  Var: e of type int [line: 3]						   |	.   .   Sibling: 4  Var: e of type int [mem: Local loc: -6 size: 1] [line: 3]
.   .   Sibling: 5  Var: f of type int [line: 3]						   |	.   .   Sibling: 5  Var: f of type int [mem: Local loc: -7 size: 1] [line: 3]
.   .   Sibling: 6  Var: aa is array of type int [line: 4]					   |	.   .   Sibling: 6  Var: aa of array of type int [mem: Local loc: -9 size: 11] [line: 4]
.   .   Sibling: 7  Var: bb is array of type int [line: 4]					   |	.   .   Sibling: 7  Var: bb of array of type int [mem: Local loc: -20 size: 11] [line: 4]
.   .   Sibling: 8  Var: cc is array of type int [line: 4]					   |	.   .   Sibling: 8  Var: cc of array of type int [mem: Local loc: -31 size: 11] [line: 4]
.   .   Sibling: 9  Var: dd is array of type int [line: 4]					   |	.   .   Sibling: 9  Var: dd of array of type int [mem: Local loc: -42 size: 11] [line: 4]
.   .   Sibling: 10  Var: ee is array of type int [line: 4]					   |	.   .   Sibling: 10  Var: ee of array of type int [mem: Local loc: -53 size: 11] [line: 4]
.   .   Sibling: 11  Var: ff is array of type int [line: 4]					   |	.   .   Sibling: 11  Var: ff of array of type int [mem: Local loc: -64 size: 11] [line: 4]
.   .   .   .   Child: 0  Id: aa of type int [line: 9]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Local loc: -9 size: 11] [line: 9]
.   .   .   .   Child: 1  Id: a of type int [line: 9]						   |	.   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   Child: 1  Id: b of type int [line: 9]						   |	.   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: bb of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -20 size: 11] [line: 10]
.   .   .   .   Child: 1  Id: c of type int [line: 10]						   |	.   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: cc of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -31 size: 11] [line: 11]
.   .   .   .   .   Child: 0  Id: aa of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: aa of array of type int [mem: Local loc: -9 size: 11] [line: 1
.   .   .   .   .   Child: 1  Id: d of type int [line: 11]					   |	.   .   .   .   .   Child: 1  Id: d of type int [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: ee of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: ee of array of type int [mem: Local loc: -53 size: 11] [line: 12]
.   .   .   .   .   Child: 0  Id: ff of type int [line: 12]					   |	.   .   .   .   .   Child: 0  Id: ff of array of type int [mem: Local loc: -64 size: 11] [line: 
.   .   .   Child: 0  Id: e of type int [line: 13]						   |	.   .   .   Child: 0  Id: e of type int [mem: Local loc: -6 size: 1] [line: 13]
.   .   .   Child: 1  Id: f of type int [line: 13]						   |	.   .   .   Child: 1  Id: f of type int [mem: Local loc: -7 size: 1] [line: 13]
												   >	Offset for end of global space: 0
============================================================================================================
data/loops.c-
============================================================================================================
data/loopscope2.c-
WARNING(27): The variable 'y' seems not to be used.						   <
												   >	WARNING(27): The variable 'y' seems not to be used.
============================================================================================================
data/loopscope.c-
============================================================================================================
data/matchunmatch.c-
============================================================================================================
data/mem2.c-
Var: g of type int [line: 1]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Var: gg is array of type int [line: 1]						   |	Sibling: 1  Var: gg of array of type int [mem: Global loc: -2 size: 11] [line: 1]
Sibling: 2  Func: julia returns type void [line: 3]						   |	Sibling: 2  Func: julia returns type void [mem: Global loc: 0 size: -5] [line: 3]
.   Child: 0  Parm: x of type int [line: 3]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: y of type int [line: 3]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Sibling: 2  Parm: z of type int [line: 3]							   |	.   Sibling: 2  Parm: z of type int [mem: Parameter loc: -4 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -71] [line: 4]
.   .   Child: 0  Var: a of type int [line: 5]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -5 size: 1] [line: 5]
.   .   Sibling: 1  Var: aa is array of type int [line: 5]					   |	.   .   Sibling: 1  Var: aa of array of type int [mem: Local loc: -7 size: 11] [line: 5]
.   .   Sibling: 2  Var: b of type bool [line: 6]						   |	.   .   Sibling: 2  Var: b of type bool [mem: Local loc: -17 size: 1] [line: 6]
.   .   Sibling: 3  Var: bb is array of type bool [line: 6]					   |	.   .   Sibling: 3  Var: bb of array of type bool [mem: Local loc: -19 size: 21] [line: 6]
.   .   Sibling: 4  Var: c of type char [line: 7]						   |	.   .   Sibling: 4  Var: c of type char [mem: Local loc: -39 size: 1] [line: 7]
.   .   Sibling: 5  Var: cc is array of type char [line: 7]					   |	.   .   Sibling: 5  Var: cc of array of type char [mem: Local loc: -41 size: 31] [line: 7]
.   .   Sibling: 6  Var: s of type int [line: 8]						   |	.   .   Sibling: 6  Var: s of static type int [mem: LocalStatic loc: -12 size: 1] [line: 8]
.   .   Sibling: 7  Var: t of type int [line: 8]						   |	.   .   Sibling: 7  Var: t of static type int [mem: LocalStatic loc: -13 size: 1] [line: 8]
.   .   .   Child: 0  Id: a of type int [line: 10]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 10]
.   .   .   Child: 1  Id: x of type int [line: 10]						   |	.   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   .   Sibling: 1  Assign: = of type char [line: 11]						   |	.   .   Sibling: 1  Assign: = of array of type char [line: 11]
.   .   .   Child: 0  Id: cc of type char [line: 11]						   |	.   .   .   Child: 0  Id: cc of array of type char [mem: Local loc: -41 size: 31] [line: 11]
.   .   .   Child: 1  Const is array "reconnaissance" of type char [line: 11]			   |	.   .   .   Child: 1  Const "reconnaissance" of array of type char [mem: Global loc: -15 size: 1
.   .   Sibling: 2  Compound [line: 13]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -72] [line: 13]
.   .   .   Child: 0  Var: p of type int [line: 13]						   |	.   .   .   Child: 0  Var: p of type int [mem: Local loc: -71 size: 1] [line: 13]
.   .   Sibling: 3  Compound [line: 14]								   |	.   .   Sibling: 3  Compound [mem: None loc: 0 size: -72] [line: 14]
.   .   .   Child: 0  Var: q of type int [line: 14]						   |	.   .   .   Child: 0  Var: q of type int [mem: Local loc: -71 size: 1] [line: 14]
Sibling: 3  Var: h of type int [line: 17]							   |	Sibling: 3  Var: h of type int [mem: Global loc: -29 size: 1] [line: 17]
Sibling: 4  Func: main returns type void [line: 19]						   |	Sibling: 4  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 19]
.   Child: 1  Compound [line: 19]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 19]
												   >	Offset for end of global space: -30
============================================================================================================
data/mem.c-
============================================================================================================
data/memcall.c-
Func: yvonne returns type void [line: 3]							   |	Func: yvonne returns type void [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: x of type int [line: 3]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 4]
.   .   Child: 0  Var: y of type int [line: 5]							   |	.   .   Child: 0  Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   .   Child: 0  Id: y of type int [line: 6]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 6]
Sibling: 1  Func: louise returns type int [line: 9]						   |	Sibling: 1  Func: louise returns type int [mem: Global loc: 0 size: -3] [line: 9]
.   Child: 0  Parm: x of type int [line: 9]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   Child: 1  Compound [line: 9]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 9]
.   .   .   .   Child: 1  Id: x of type int [line: 9]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 9]
Sibling: 2  Func: main returns type void [line: 11]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 11]
.   Child: 1  Compound [line: 12]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 12]
.   .   Child: 0  Var: z of type int [line: 13]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 0  Id: z of type int [line: 14]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   Sibling: 1  Compound [line: 15]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -9] [line: 15]
.   .   .   Child: 0  Var: x is array of type int [line: 15]					   |	.   .   .   Child: 0  Var: x of array of type int [mem: Local loc: -4 size: 6] [line: 15]
.   .   .   Child: 0  Id: z of type int [line: 20]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 20]
												   >	Offset for end of global space: 0
============================================================================================================
data/memory2.c-
Var: u of type int [line: 5]									   |	Var: u of type int [mem: Global loc: 0 size: 1] [line: 5]
Sibling: 1  Var: v is array of type bool [line: 6]						   |	Sibling: 1  Var: v of array of type bool [mem: Global loc: -2 size: 5] [line: 6]
Sibling: 2  Func: polgara returns type int [line: 8]						   |	Sibling: 2  Func: polgara returns type int [mem: Global loc: 0 size: -4] [line: 8]
.   Child: 0  Parm: a of type int [line: 8]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 8]
.   Sibling: 1  Parm: b of type bool [line: 8]							   |	.   Sibling: 1  Parm: b of type bool [mem: Parameter loc: -3 size: 1] [line: 8]
.   Child: 1  Compound [line: 9]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 9]
.   .   Child: 0  Var: x of type int [line: 10]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 0  Id: x of type int [line: 11]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   Child: 1  Id: a of type int [line: 11]						   |	.   .   .   Child: 1  Id: a of type int [mem: Parameter loc: -2 size: 1] [line: 11]
.   .   .   Child: 0  Id: x of type int [line: 12]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 12]
Sibling: 3  Func: main returns type void [line: 15]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 15]
.   Child: 1  Compound [line: 16]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -12] [line: 16]
.   .   Child: 0  Var: i of type int [line: 17]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 17]
.   .   Sibling: 1  Var: b of type bool [line: 18]						   |	.   .   Sibling: 1  Var: b of type bool [mem: Local loc: -3 size: 1] [line: 18]
.   .   Sibling: 2  Var: ai is array of type int [line: 19]					   |	.   .   Sibling: 2  Var: ai of array of type int [mem: Local loc: -5 size: 4] [line: 19]
.   .   Sibling: 3  Var: ab is array of type bool [line: 20]					   |	.   .   Sibling: 3  Var: ab of array of type bool [mem: Local loc: -9 size: 3] [line: 20]
.   .   Sibling: 4  Var: z of type int [line: 21]						   |	.   .   Sibling: 4  Var: z of type int [mem: Local loc: -11 size: 1] [line: 21]
.   .   .   Child: 0  Id: z of type int [line: 23]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -11 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: i of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   .   Sibling: 1  Id: b of type bool [line: 23]					   |	.   .   .   .   Sibling: 1  Id: b of type bool [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   Child: 0  Id: u of type int [line: 25]						   |	.   .   .   Child: 0  Id: u of type int [mem: Global loc: 0 size: 1] [line: 25]
.   .   .   .   Child: 0  Id: v of type bool [line: 26]						   |	.   .   .   .   Child: 0  Id: v of array of type bool [mem: Global loc: -2 size: 5] [line: 26]
												   >	Offset for end of global space: -6
============================================================================================================
data/memory.c-
============================================================================================================
data/memtype.c-
Var: g of type int [line: 1]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Func: dog returns type void [line: 2]						   |	Sibling: 1  Func: dog returns type void [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: p of type int [line: 2]							   |	.   Child: 0  Parm: p of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 3]
.   .   Child: 0  Var: s of type int [line: 4]							   |	.   .   Child: 0  Var: s of static type int [mem: LocalStatic loc: -1 size: 1] [line: 4]
.   .   Sibling: 1  Var: i of type int [line: 5]						   |	.   .   Sibling: 1  Var: i of type int [mem: Local loc: -3 size: 1] [line: 5]
Sibling: 2  Func: main returns type void [line: 8]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 8]
.   Child: 1  Compound [line: 8]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 8]
												   >	Offset for end of global space: -2
============================================================================================================
data/minus.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   Child: 0  Var: x of type int [line: 3]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   .   Child: 0  Id: x of type int [line: 5]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   .   Child: 0  Id: x of type int [line: 6]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 7]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 7]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 
												   >	Offset for end of global space: 0
============================================================================================================
data/mixed.c-
============================================================================================================
data/mixedControl2.c-
============================================================================================================
data/mixedControl3.c-
============================================================================================================
data/mixedControl.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: z of type int [line: 4]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 2  Id: y of type int [line: 8]						   |	.   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: y of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 1  Id: y of type int [line: 10]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   Child: 1  Id: z of type int [line: 11]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Id: y of type int [line: 13]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   .   Child: 1  Id: z of type int [line: 15]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   .   Child: 2  Id: x of type int [line: 16]						   |	.   .   .   .   Child: 2  Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]
.   .   .   .   Child: 0  Id: x of type int [line: 18]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Id: x of type int [line: 20]					   |	.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]
.   .   .   .   .   Child: 2  Id: y of type int [line: 21]					   |	.   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 21]
.   .   .   Child: 2  Id: z of type int [line: 22]						   |	.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   Child: 0  Id: x of type int [line: 24]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 24]
.   .   .   Child: 1  Id: z of type int [line: 24]						   |	.   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 24]
.   .   .   .   .   .   Child: 1  Id: x of type int [line: 28]					   |	.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 28]
.   .   .   .   .   .   Child: 2  Id: y of type int [line: 29]					   |	.   .   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 29]
.   .   .   .   Child: 2  Id: z of type int [line: 30]						   |	.   .   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 30]
												   >	Offset for end of global space: 0
============================================================================================================
data/nano.c-
============================================================================================================
data/nest.c-
Var: x of type int [line: 3]									   |	Var: x of type int [mem: Global loc: 0 size: 1] [line: 3]
Sibling: 1  Var: y of type int [line: 4]							   |	Sibling: 1  Var: y of type int [mem: Global loc: -1 size: 1] [line: 4]
Sibling: 2  Var: z of type int [line: 5]							   |	Sibling: 2  Var: z of type int [mem: Global loc: -2 size: 1] [line: 5]
Sibling: 3  Func: agamemnon returns type void [line: 7]						   |	Sibling: 3  Func: agamemnon returns type void [mem: Global loc: 0 size: -2] [line: 7]
.   Child: 1  Compound [line: 8]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   Child: 0  Var: a of type int [line: 9]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   Sibling: 1  Var: b of type int [line: 10]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   Sibling: 2  Var: x of type int [line: 11]						   |	.   .   Sibling: 2  Var: x of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   Child: 0  Id: a of type int [line: 13]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 0  Id: b of type int [line: 14]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   Child: 0  Id: x of type int [line: 15]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   Child: 0  Id: z of type int [line: 16]						   |	.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 16]
.   .   .   Child: 0  Id: a of type int [line: 18]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: b of type int [line: 19]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   Child: 0  Id: x of type int [line: 20]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   Child: 0  Id: y of type int [line: 21]						   |	.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 21]
.   .   .   Child: 0  Id: z of type int [line: 22]						   |	.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 22]
.   .   .   Child: 0  Id: a of type int [line: 24]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 24]
.   .   .   Child: 0  Id: b of type int [line: 25]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 25]
.   .   .   Child: 0  Id: x of type int [line: 26]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 26]
.   .   .   Child: 0  Id: y of type int [line: 27]						   |	.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 27]
.   .   .   Child: 0  Id: z of type int [line: 28]						   |	.   .   .   Child: 0  Id: z of type int [mem: Global loc: -2 size: 1] [line: 28]
Sibling: 4  Func: main returns type void [line: 31]						   |	Sibling: 4  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 31]
.   Child: 1  Compound [line: 32]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 32]
.   .   Child: 0  Var: a of type int [line: 33]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 33]
.   .   Sibling: 1  Var: b of type int [line: 34]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 34]
.   .   Sibling: 2  Var: z of type int [line: 35]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 35]
.   .   .   Child: 0  Id: a of type int [line: 37]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 37]
.   .   .   Child: 0  Id: b of type int [line: 38]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 38]
.   .   .   Child: 0  Id: x of type int [line: 39]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 39]
.   .   .   Child: 0  Id: y of type int [line: 40]						   |	.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 40]
.   .   .   Child: 0  Id: z of type int [line: 41]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 41]
.   .   .   Child: 0  Id: a of type int [line: 43]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 43]
.   .   .   Child: 0  Id: b of type int [line: 44]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 44]
.   .   .   Child: 0  Id: x of type int [line: 45]						   |	.   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 45]
.   .   .   Child: 0  Id: y of type int [line: 46]						   |	.   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 46]
.   .   .   Child: 0  Id: z of type int [line: 47]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 47]
.   .   Sibling: 11  Compound [line: 49]							   |	.   .   Sibling: 11  Compound [mem: None loc: 0 size: -8] [line: 49]
.   .   .   Child: 0  Var: a of type int [line: 50]						   |	.   .   .   Child: 0  Var: a of type int [mem: Local loc: -5 size: 1] [line: 50]
.   .   .   Sibling: 1  Var: b of type int [line: 51]						   |	.   .   .   Sibling: 1  Var: b of type int [mem: Local loc: -6 size: 1] [line: 51]
.   .   .   Sibling: 2  Var: z of type int [line: 52]						   |	.   .   .   Sibling: 2  Var: z of type int [mem: Local loc: -7 size: 1] [line: 52]
.   .   .   .   Child: 0  Id: a of type int [line: 54]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 54]
.   .   .   .   Child: 0  Id: b of type int [line: 55]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 55]
.   .   .   .   Child: 0  Id: z of type int [line: 56]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 56]
.   .   .   .   Child: 0  Id: a of type int [line: 58]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 58]
.   .   .   .   Child: 0  Id: b of type int [line: 59]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 59]
.   .   .   .   Child: 0  Id: x of type int [line: 60]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 60]
.   .   .   .   Child: 0  Id: y of type int [line: 61]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 61]
.   .   .   .   Child: 0  Id: z of type int [line: 62]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 62]
.   .   .   .   Child: 0  Id: a of type int [line: 65]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 65]
.   .   .   .   Child: 0  Id: b of type int [line: 66]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 66]
.   .   .   .   Child: 0  Id: x of type int [line: 67]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 67]
.   .   .   .   Child: 0  Id: y of type int [line: 68]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 68]
.   .   .   .   Child: 0  Id: z of type int [line: 69]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 69]
.   .   .   .   Child: 0  Id: a of type int [line: 70]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 70]
.   .   .   .   Child: 0  Id: b of type int [line: 71]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 71]
.   .   .   .   Child: 0  Id: x of type int [line: 72]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 72]
.   .   .   .   Child: 0  Id: y of type int [line: 73]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 73]
.   .   .   .   Child: 0  Id: z of type int [line: 74]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 74]
.   .   .   Sibling: 20  Compound [line: 76]							   |	.   .   .   Sibling: 20  Compound [mem: None loc: 0 size: -8] [line: 76]
.   .   .   .   .   Child: 0  Id: a of type int [line: 77]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 77]
.   .   .   .   .   Child: 0  Id: b of type int [line: 78]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 78]
.   .   .   .   .   Child: 0  Id: x of type int [line: 79]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 79]
.   .   .   .   .   Child: 0  Id: y of type int [line: 80]					   |	.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 80]
.   .   .   .   .   Child: 0  Id: z of type int [line: 81]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 81]
.   .   .   .   .   Child: 0  Id: a of type int [line: 84]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 84]
.   .   .   .   .   Child: 0  Id: b of type int [line: 85]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 85]
.   .   .   .   .   Child: 0  Id: x of type int [line: 86]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 86]
.   .   .   .   .   Child: 0  Id: y of type int [line: 87]					   |	.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 87]
.   .   .   .   .   Child: 0  Id: z of type int [line: 88]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 88]
.   .   .   .   .   Child: 0  Id: a of type int [line: 89]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 89]
.   .   .   .   .   Child: 0  Id: b of type int [line: 90]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 90]
.   .   .   .   .   Child: 0  Id: x of type int [line: 91]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 91]
.   .   .   .   .   Child: 0  Id: y of type int [line: 92]					   |	.   .   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 92]
.   .   .   .   .   Child: 0  Id: z of type int [line: 93]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 93]
.   .   .   .   Child: 0  Id: a of type int [line: 97]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 97]
.   .   .   .   Child: 0  Id: b of type int [line: 98]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 98]
.   .   .   .   Child: 0  Id: x of type int [line: 99]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 99]
.   .   .   .   Child: 0  Id: y of type int [line: 100]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 100]
.   .   .   .   Child: 0  Id: z of type int [line: 101]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 101]
.   .   .   .   Child: 0  Id: a of type int [line: 106]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 106]
.   .   .   .   Child: 0  Id: b of type int [line: 107]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 107]
.   .   .   .   Child: 0  Id: x of type int [line: 108]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Global loc: 0 size: 1] [line: 108]
.   .   .   .   Child: 0  Id: y of type int [line: 109]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Global loc: -1 size: 1] [line: 109]
.   .   .   .   Child: 0  Id: z of type int [line: 110]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -7 size: 1] [line: 110]
												   >	Offset for end of global space: -3
============================================================================================================
data/nested.c-
============================================================================================================
data/nestedfors.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   Child: 0  Var: n of type int [line: 3]							   |	.   .   Child: 0  Var: n of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   .   Child: 0  Id: n of type int [line: 5]						   |	.   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Sibling: 1  For [line: 6]								   |	.   .   Sibling: 1  For [mem: None loc: 0 size: -4] [line: 6]
.   .   .   Child: 0  Var: i of type int [line: 6]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   Child: 2  Compound [line: 6]							   |	.   .   .   Child: 2  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   .   .   Child: 1  For [line: 7]								   |	.   .   .   .   Child: 1  For [mem: None loc: 0 size: -5] [line: 7]
.   .   .   .   .   Child: 0  Var: j of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Var: j of type int [mem: Local loc: -4 size: 1] [line: 7]
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 7]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   .   .   Child: 0  Id: n of type int [line: 7]					   |	.   .   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   .   Child: 0  Id: i of type int [line: 8]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   .   Child: 0  Id: n of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: n of type int [mem: Local loc: -2 size: 1] [line: 9]
												   >	Offset for end of global space: 0
============================================================================================================
data/nestedmem.c-
Func: fred returns type void [line: 3]								   |	Func: fred returns type void [mem: Global loc: 0 size: -2] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 4]
.   .   Child: 1  For [line: 5]									   |	.   .   Child: 1  For [mem: None loc: 0 size: -3] [line: 5]
.   .   .   Child: 0  Var: i of type int [line: 5]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   Child: 2  For [line: 6]								   |	.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 6]
.   .   .   .   Child: 0  Var: i of type int [line: 6]						   |	.   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   .   Child: 0  Id: i of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   Sibling: 1  For [line: 8]								   |	.   .   Sibling: 1  For [mem: None loc: 0 size: -3] [line: 8]
.   .   .   Child: 0  Var: i of type int [line: 8]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   .   Child: 1  Compound [line: 9]							   |	.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 9]
.   .   .   .   .   Child: 0  Var: i of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 11]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   Sibling: 2  For [line: 13]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 13]
.   .   .   Child: 0  Var: i of type int [line: 13]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 1  Compound [line: 14]							   |	.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 14]
.   .   .   .   .   Child: 0  Var: i of type int [line: 15]					   |	.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 15]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 16]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   Sibling: 3  For [line: 18]								   |	.   .   Sibling: 3  For [mem: None loc: 0 size: -3] [line: 18]
.   .   .   Child: 0  Var: i of type int [line: 18]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 2  For [line: 19]								   |	.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 19]
.   .   .   .   Child: 0  Var: z of type int [line: 19]						   |	.   .   .   .   Child: 0  Var: z of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 2  Compound [line: 19]							   |	.   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -5] [line: 19]
.   .   .   .   .   Child: 0  Var: i of type int [line: 20]					   |	.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 21]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   Sibling: 4  For [line: 23]								   |	.   .   Sibling: 4  For [mem: None loc: 0 size: -3] [line: 23]
.   .   .   Child: 0  Var: i of type int [line: 23]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   Child: 2  For [line: 24]								   |	.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 24]
.   .   .   .   Child: 0  Var: z of type int [line: 24]						   |	.   .   .   .   Child: 0  Var: z of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   .   Child: 2  Compound [line: 24]							   |	.   .   .   .   Child: 2  Compound [mem: None loc: 0 size: -4] [line: 24]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 25]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 25]
Sibling: 1  Func: cat returns type void [line: 29]						   |	Sibling: 1  Func: cat returns type void [mem: Global loc: 0 size: -3] [line: 29]
.   Child: 0  Parm: i of type int [line: 29]							   |	.   Child: 0  Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 29]
.   Child: 1  Compound [line: 29]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 29]
.   .   .   Child: 1  Compound [line: 30]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 30]
.   .   .   .   Child: 0  Var: i of type int [line: 31]						   |	.   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   .   Child: 0  Id: i of type int [line: 32]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -3 size: 1] [line: 32]
Sibling: 2  Func: errorZ returns type void [line: 36]						   |	Sibling: 2  Func: errorZ returns type void [mem: Global loc: 0 size: -3] [line: 36]
.   Child: 0  Parm: i of type int [line: 36]							   |	.   Child: 0  Parm: i of type int [mem: Parameter loc: -2 size: 1] [line: 36]
.   Child: 1  Compound [line: 36]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 36]
.   .   Child: 0  Var: ii of type int [line: 37]						   |	.   .   Child: 0  Var: ii of type int [mem: Local loc: -3 size: 1] [line: 37]
.   .   Child: 1  Compound [line: 38]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 38]
.   .   .   Child: 0  Var: i of type int [line: 39]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 39]
.   .   .   .   Child: 1  Compound [line: 41]							   |	.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 41]
.   .   .   .   .   Child: 0  Var: i of type int [line: 42]					   |	.   .   .   .   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 42]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 43]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -5 size: 1] [line: 43]
.   .   .   .   Child: 0  Id: i of type int [line: 45]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 45]
.   .   Sibling: 1  For [line: 48]								   |	.   .   Sibling: 1  For [mem: None loc: 0 size: -5] [line: 48]
.   .   .   Child: 0  Var: i of type int [line: 48]						   |	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 48]
.   .   .   Child: 2  Compound [line: 49]							   |	.   .   .   Child: 2  Compound [mem: None loc: 0 size: -6] [line: 49]
.   .   .   .   Child: 0  Var: ii of type int [line: 50]					   |	.   .   .   .   Child: 0  Var: ii of type int [mem: Local loc: -5 size: 1] [line: 50]
.   .   .   .   .   Child: 0  Id: ii of type int [line: 51]					   |	.   .   .   .   .   Child: 0  Id: ii of type int [mem: Local loc: -5 size: 1] [line: 51]
.   .   .   .   .   Child: 0  Id: ii of type int [line: 52]					   |	.   .   .   .   .   Child: 0  Id: ii of type int [mem: Local loc: -5 size: 1] [line: 52]
.   .   .   Child: 0  Id: i of type int [line: 54]						   |	.   .   .   Child: 0  Id: i of type int [mem: Parameter loc: -2 size: 1] [line: 54]
Sibling: 3  Func: main returns type void [line: 57]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 57]
.   Child: 1  Compound [line: 57]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 57]
												   >	Offset for end of global space: 0
============================================================================================================
data/notused.c-
============================================================================================================
data/oparray.c-
============================================================================================================
data/op.c-
============================================================================================================
data/ops.c-
Var: y is array of type int [line: 4]								   |	Var: y of array of type int [mem: Global loc: -1 size: 11] [line: 4]
Sibling: 1  Var: x of type bool [line: 5]							   |	Sibling: 1  Var: x of type bool [mem: Global loc: -11 size: 1] [line: 5]
Sibling: 2  Func: main returns type void [line: 7]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 7]
.   Child: 1  Compound [line: 8]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 8]
.   .   Child: 0  Var: a of type int [line: 9]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   Sibling: 1  Var: b of type int [line: 10]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   Sibling: 2  Var: c of type int [line: 11]						   |	.   .   Sibling: 2  Var: c of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   Sibling: 3  Var: z of type bool [line: 12]						   |	.   .   Sibling: 3  Var: z of type bool [mem: Local loc: -5 size: 1] [line: 12]
.   .   .   .   Child: 0  Id: y of type int [line: 14]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 14]
.   .   .   .   Child: 0  Id: y of type int [line: 15]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 15]
.   .   .   .   Child: 0  Id: y of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 16]
.   .   .   Child: 0  Id: a of type int [line: 18]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   Child: 0  Id: b of type int [line: 19]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   Child: 0  Id: c of type int [line: 20]						   |	.   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   Child: 0  Id: x of type bool [line: 22]						   |	.   .   .   Child: 0  Id: x of type bool [mem: Global loc: -11 size: 1] [line: 22]
.   .   .   Child: 0  Id: z of type bool [line: 23]						   |	.   .   .   Child: 0  Id: z of type bool [mem: Local loc: -5 size: 1] [line: 23]
.   .   .   .   Child: 0  Id: a of type int [line: 25]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 25]
.   .   .   .   Child: 0  Id: b of type int [line: 26]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   .   Child: 0  Id: b of type int [line: 31]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 31]
.   .   .   .   Child: 1  Id: a of type int [line: 31]						   |	.   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 31]
.   .   .   .   Child: 0  Id: a of type int [line: 32]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   .   .   Child: 1  Id: a of type int [line: 32]						   |	.   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 32]
.   .   .   .   .   Child: 0  Id: y of type int [line: 45]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 4
.   .   .   .   Child: 1  Id: b of type int [line: 45]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 45]
.   .   .   .   Child: 0  Id: a of type int [line: 46]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 46]
.   .   .   .   Child: 1  Id: b of type int [line: 46]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 46]
.   .   .   .   Child: 0  Id: b of type int [line: 47]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 47]
.   .   .   .   Child: 1  Id: b of type int [line: 47]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 47]
.   .   .   .   .   Child: 0  Id: y of type int [line: 50]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 5
.   .   .   .   Child: 1  Id: a of type int [line: 50]						   |	.   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 50]
.   .   .   .   .   Child: 0  Id: y of type int [line: 51]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 5
.   .   .   .   Child: 1  Id: b of type int [line: 51]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 51]
.   .   .   .   Child: 0  Id: a of type int [line: 52]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 52]
.   .   .   .   Child: 1  Id: b of type int [line: 52]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 52]
.   .   .   .   Child: 0  Id: b of type int [line: 53]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 53]
.   .   .   .   Child: 1  Id: b of type int [line: 53]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 53]
.   .   .   .   Child: 0  Id: z of type bool [line: 63]						   |	.   .   .   .   Child: 0  Id: z of type bool [mem: Local loc: -5 size: 1] [line: 63]
.   .   .   .   Child: 0  Id: x of type bool [line: 70]						   |	.   .   .   .   Child: 0  Id: x of type bool [mem: Global loc: -11 size: 1] [line: 70]
.   .   .   .   .   .   Child: 0  Id: x of type bool [line: 71]					   |	.   .   .   .   .   .   Child: 0  Id: x of type bool [mem: Global loc: -11 size: 1] [line: 71]
.   .   .   .   .   Child: 0  Id: y of type int [line: 75]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 7
.   .   .   .   .   Child: 1  Id: c of type int [line: 75]					   |	.   .   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 75]
.   .   .   Child: 0  Id: a of type int [line: 82]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 82]
.   .   .   .   Child: 0  Id: a of type int [line: 83]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 83]
.   .   .   .   .   Child: 0  Id: a of type int [line: 84]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 84]
.   .   .   .   Child: 0  Id: a of type int [line: 85]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 85]
.   .   .   .   .   Child: 0  Id: y of type int [line: 91]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 9
.   .   .   .   .   Child: 0  Id: y of type int [line: 92]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 9
.   .   .   .   .   Child: 0  Id: y of type int [line: 95]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 9
.   .   .   .   .   Child: 0  Id: y of type int [line: 96]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 9
.   .   .   .   .   Child: 0  Id: y of type int [line: 97]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Global loc: -1 size: 11] [line: 9
.   .   .   .   Child: 1  Id: b of type int [line: 97]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 97]
.   .   .   .   Child: 0  Id: a of type int [line: 110]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 110]
.   .   .   .   .   Child: 0  Id: b of type int [line: 110]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 110]
.   .   .   .   .   .   Child: 0  Id: c of type int [line: 110]					   |	.   .   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 110]
.   .   .   Child: 0  Id: a of type int [line: 111]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 111]
.   .   .   Child: 0  Id: a of type int [line: 112]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 112]
.   .   .   .   .   Child: 0  Id: b of type int [line: 112]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 112]
.   .   .   .   .   Child: 0  Id: c of type int [line: 112]					   |	.   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 112]
.   .   .   Child: 0  Id: a of type int [line: 113]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 113]
.   .   .   Child: 0  Id: a of type int [line: 116]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 116]
.   .   .   Child: 0  Id: b of type int [line: 117]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 117]
.   .   .   .   Child: 0  Id: a of type int [line: 118]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 118]
.   .   .   .   Child: 1  Id: b of type int [line: 118]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 118]
.   .   .   .   Child: 0  Id: a of type int [line: 119]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 119]
.   .   .   .   Child: 1  Id: b of type int [line: 119]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 119]
.   .   .   .   Child: 0  Id: a of type int [line: 120]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 120]
.   .   .   .   Child: 1  Id: a of type int [line: 120]						   |	.   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 120]
.   .   .   .   Child: 0  Id: a of type int [line: 121]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 121]
.   .   .   .   .   Child: 0  Id: b of type int [line: 121]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 121]
.   .   .   Child: 0  Id: a of type int [line: 124]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 124]
.   .   .   Child: 0  Id: b of type int [line: 125]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 125]
.   .   .   .   Child: 0  Id: a of type int [line: 126]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 126]
.   .   .   .   Child: 1  Id: b of type int [line: 126]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 126]
.   .   .   .   Child: 0  Id: a of type int [line: 127]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 127]
.   .   .   .   Child: 1  Id: b of type int [line: 127]						   |	.   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 127]
.   .   .   .   Child: 0  Id: a of type int [line: 128]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 128]
.   .   .   .   .   Child: 0  Id: a of type int [line: 128]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 128]
.   .   .   .   Child: 0  Id: a of type int [line: 129]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 129]
.   .   .   .   .   Child: 0  Id: b of type int [line: 129]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 129]
.   .   .   Child: 0  Id: a of type int [line: 132]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 132]
.   .   .   Child: 0  Id: b of type int [line: 133]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 133]
.   .   .   .   Child: 0  Id: a of type int [line: 134]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 134]
.   .   .   .   Child: 0  Id: b of type int [line: 135]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -3 size: 1] [line: 135]
												   >	Offset for end of global space: -12
============================================================================================================
data/optype.c-
============================================================================================================
data/overkill.c-
												   >	ERROR(40): The operation '*' does not work with arrays.
												   >	ERROR(76): The operation '*' does not work with arrays.
												   >	ERROR(112): The operation '*' does not work with arrays.
												   >	ERROR(148): The operation '*' does not work with arrays.
												   >	ERROR(166): The operation '*' does not work with arrays.
												   >	ERROR(184): The operation '*' does not work with arrays.
												   >	ERROR(202): The operation '*' does not work with arrays.
												   >	ERROR(220): The operation '*' does not work with arrays.
												   >	ERROR(238): The operation '*' does not work with arrays.
												   >	ERROR(256): The operation '*' does not work with arrays.
												   >	ERROR(292): The operation '*' does not work with arrays.
												   >	ERROR(328): The operation '*' does not work with arrays.
												   >	ERROR(364): The operation '*' does not work with arrays.
												   >	ERROR(400): The operation '*' does not work with arrays.
												   >	ERROR(418): The operation '*' does not work with arrays.
												   >	ERROR(436): The operation '*' does not work with arrays.
												   >	ERROR(454): The operation '*' does not work with arrays.
												   >	ERROR(472): The operation '*' does not work with arrays.
												   >	ERROR(490): The operation '*' does not work with arrays.
												   >	ERROR(508): The operation '*' does not work with arrays.
												   >	ERROR(544): The operation '*' does not work with arrays.
												   >	ERROR(580): The operation '*' does not work with arrays.
												   >	ERROR(616): The operation '*' does not work with arrays.
												   >	ERROR(652): The operation '*' does not work with arrays.
												   >	ERROR(670): The operation '*' does not work with arrays.
												   >	ERROR(688): The operation '*' does not work with arrays.
												   >	ERROR(706): The operation '*' does not work with arrays.
												   >	ERROR(724): The operation '*' does not work with arrays.
												   >	ERROR(742): The operation '*' does not work with arrays.
												   >	ERROR(760): The operation '*' does not work with arrays.
												   >	ERROR(779): The operation '*' does not work with arrays.
												   >	ERROR(797): The operation '*' does not work with arrays.
												   >	ERROR(815): The operation '*' does not work with arrays.
Number of errors: 1449										   |	Number of errors: 1482
============================================================================================================
data/overlapArray.c-
============================================================================================================
data/overlap.c-
============================================================================================================
data/overlapStatic.c-
============================================================================================================
data/overlayArray.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
.   .   Child: 1  Compound [line: 4]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 4]
.   .   .   Child: 0  Var: x is array of type int [line: 5]					   |	.   .   .   Child: 0  Var: x of array of type int [mem: Local loc: -3 size: 12] [line: 5]
.   .   Sibling: 1  Compound [line: 7]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -25] [line: 7]
.   .   .   Child: 0  Var: y is array of type int [line: 8]					   |	.   .   .   Child: 0  Var: y of array of type int [mem: Local loc: -3 size: 23] [line: 8]
.   .   .   .   .   Child: 0  Id: y of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -3 size: 23] [line: 10
												   >	Offset for end of global space: 0
============================================================================================================
data/overlay.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: z of type int [line: 4]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: z of type int [line: 5]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   Sibling: 1  Compound [line: 6]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -104] [line: 6]
.   .   .   Child: 0  Var: x is array of type int [line: 7]					   |	.   .   .   Child: 0  Var: x of array of type int [mem: Local loc: -4 size: 101] [line: 7]
.   .   .   .   Child: 0  Id: z of type int [line: 9]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   .   Child: 0  Id: z of type int [line: 10]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 1  Compound [line: 10]							   |	.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -104] [line: 10]
.   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 11]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of array of type int [mem: Local loc: -4 size: 101] 
.   .   .   .   .   .   .   Child: 1  Id: z of type int [line: 11]				   |	.   .   .   .   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   .   .   .   Child: 0  Id: z of type int [line: 12]					   |	.   .   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 12]
.   .   Sibling: 2  Compound [line: 16]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -104] [line: 16]
.   .   .   Child: 0  Var: y is array of type int [line: 17]					   |	.   .   .   Child: 0  Var: y of array of type int [mem: Local loc: -4 size: 101] [line: 17]
.   .   .   .   Child: 0  Id: z of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 19]
.   .   .   .   .   Child: 0  Id: z of type int [line: 20]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 20]
.   .   .   .   Child: 1  Compound [line: 20]							   |	.   .   .   .   Child: 1  Compound [mem: None loc: 0 size: -104] [line: 20]
.   .   .   .   .   .   .   Child: 0  Id: y of type int [line: 21]				   |	.   .   .   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 101] 
.   .   .   .   .   .   .   Child: 1  Id: z of type int [line: 21]				   |	.   .   .   .   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -2 size: 1] [line: 21]
.   .   .   .   .   .   Child: 0  Id: z of type int [line: 22]					   |	.   .   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 22]
.   .   .   .   .   Child: 0  Id: y of type int [line: 25]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 101] [line: 2
.   .   .   .   .   Child: 0  Id: y of type int [line: 26]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 101] [line: 2
.   .   .   .   .   Child: 0  Id: y of type int [line: 27]					   |	.   .   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -4 size: 101] [line: 2
.   .   .   Child: 0  Id: z of type int [line: 29]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 29]
												   >	Offset for end of global space: 0
============================================================================================================
data/overlayCall.c-
Func: dog returns type void [line: 2]								   |	Func: dog returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 5]
.   .   Child: 1  Compound [line: 6]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -13] [line: 6]
.   .   .   Child: 0  Var: x is array of type int [line: 7]					   |	.   .   .   Child: 0  Var: x of array of type int [mem: Local loc: -3 size: 11] [line: 7]
												   >	Offset for end of global space: 0
============================================================================================================
data/overlayTmp2.c-
Func: dog returns type int [line: 2]								   |	Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: pig of type int [line: 2]							   |	.   Child: 0  Parm: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   Child: 0  Id: pig of type int [line: 2]						   |	.   .   .   Child: 0  Id: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   Child: 0  Var: z of type int [line: 6]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 0  Id: z of type int [line: 7]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   Sibling: 1  Compound [line: 8]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -4] [line: 8]
.   .   .   Child: 0  Var: x of type int [line: 9]						   |	.   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: x of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: x of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 12]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   Child: 0  Id: x of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   Sibling: 2  Compound [line: 15]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -4] [line: 15]
.   .   .   Child: 0  Var: y of type int [line: 16]						   |	.   .   .   Child: 0  Var: y of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   Child: 0  Id: y of type int [line: 18]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: y of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 19]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: y of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   .   Child: 0  Id: z of type int [line: 23]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: z of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   Child: 0  Id: z of type int [line: 24]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 24]
												   >	Offset for end of global space: 0
============================================================================================================
data/overlayTmp3.c-
Func: dog returns type int [line: 2]								   |	Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: pig of type int [line: 2]							   |	.   Child: 0  Parm: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   Child: 0  Id: pig of type int [line: 2]						   |	.   .   .   Child: 0  Id: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
Sibling: 1  Func: thor returns type void [line: 4]						   |	Sibling: 1  Func: thor returns type void [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0  Parm: a of type int [line: 4]							   |	.   Child: 0  Parm: a of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   .   Child: 1  Compound [line: 5]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   .   .   Child: 0  Var: z of type int [line: 6]						   |	.   .   .   .   Child: 0  Var: z of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   .   Child: 0  Id: z of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   Sibling: 1  Compound [line: 8]							   |	.   .   .   .   Sibling: 1  Compound [mem: None loc: 0 size: -5] [line: 8]
.   .   .   .   .   Child: 0  Var: x of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 11]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 12]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 12]
.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [line: 12]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 13]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 13]
.   .   .   .   Sibling: 2  Compound [line: 15]							   |	.   .   .   .   Sibling: 2  Compound [mem: None loc: 0 size: -5] [line: 15]
.   .   .   .   .   Child: 0  Var: y of type int [line: 16]					   |	.   .   .   .   .   Child: 0  Var: y of type int [mem: Local loc: -4 size: 1] [line: 16]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 18]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 19]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -4 size: 1] [line: 19]
.   .   .   .   .   .   .   .   Child: 0  Id: y of type int [line: 19]				   |	.   .   .   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -4 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 20]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -4 size: 1] [line: 20]
.   .   .   .   .   Child: 0  Id: z of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   .   .   Child: 0  Id: z of type int [line: 23]				   |	.   .   .   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -3 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: z of type int [line: 24]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -3 size: 1] [line: 24]
Sibling: 2  Var: g of type int [line: 27]							   |	Sibling: 2  Var: g of type int [mem: Global loc: 0 size: 1] [line: 27]
Sibling: 3  Func: main returns type void [line: 28]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 28]
.   Child: 1  Compound [line: 28]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 28]
.   .   Child: 0  Var: z of type int [line: 29]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 29]
.   .   .   Child: 0  Id: z of type int [line: 31]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 31]
.   .   .   Child: 0  Id: g of type int [line: 32]						   |	.   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 32]
												   >	Offset for end of global space: -1
============================================================================================================
data/overlayTmp.c-
Func: dog returns type int [line: 2]								   |	Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: pig of type int [line: 2]							   |	.   Child: 0  Parm: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
.   .   .   Child: 0  Id: pig of type int [line: 2]						   |	.   .   .   Child: 0  Id: pig of type int [mem: Parameter loc: -2 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 5]
.   .   Child: 0  Var: z of type int [line: 6]							   |	.   .   Child: 0  Var: z of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 0  Id: z of type int [line: 7]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   Sibling: 1  Compound [line: 8]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -4] [line: 8]
.   .   .   Child: 0  Var: x of type int [line: 9]						   |	.   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: x of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: x of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 12]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 12]
.   .   .   .   Child: 0  Id: x of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   Sibling: 2  Compound [line: 15]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -4] [line: 15]
.   .   .   Child: 0  Var: y of type int [line: 16]						   |	.   .   .   Child: 0  Var: y of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   .   Child: 0  Id: y of type int [line: 18]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: y of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 19]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: y of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   .   Child: 0  Id: z of type int [line: 23]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   .   .   Child: 0  Id: z of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 23]
.   .   .   Child: 0  Id: z of type int [line: 24]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -2 size: 1] [line: 24]
												   >	Offset for end of global space: 0
============================================================================================================
data/param.c-
												   >	ERROR(12): Too many parameters passed for function 'Athos' declared on line 3.
ERROR(12): Too many parameters passed for function 'Athos' declared on line 3.			   <
ERROR(25): Symbol 'thx1138' is not declared.							   <
												   >	ERROR(25): Symbol 'thx1138' is not declared.
============================================================================================================
data/paramerr2.c-
ERROR(13): '-' requires operands of type int but rhs is of type bool.				   <
												   >	ERROR(13): '-' requires operands of type int but rhs is of type bool.
============================================================================================================
data/paramerr3.c-
												   >	ERROR(13): Too many parameters passed for function 'Athos' declared on line 4.
ERROR(13): Too many parameters passed for function 'Athos' declared on line 4.			   <
ERROR(26): Symbol 'thx1138' is not declared.							   <
												   >	ERROR(26): Symbol 'thx1138' is not declared.
============================================================================================================
data/paramerr.c-
WARNING(34): Variable 'bb' may be uninitialized when used here.					   <
WARNING(34): Variable 'cc' may be uninitialized when used here.					   <
												   >	WARNING(34): Variable 'bb' may be uninitialized when used here.
												   >	WARNING(34): Variable 'cc' may be uninitialized when used here.
ERROR(43): '*' requires operands of type int but rhs is of type char.				   <
												   >	ERROR(43): '*' requires operands of type int but rhs is of type char.
												   >	ERROR(44): Expecting array in parameter 1 of call to 'elk' declared on line 22.
ERROR(44): '*' requires operands of type int but rhs is of type char.				   <
ERROR(44): Expecting array in parameter 1 of call to 'elk' declared on line 22.			   <
												   >	ERROR(44): '*' requires operands of type int but rhs is of type char.
============================================================================================================
data/parmtiny.c-
WARNING(10): Variable 'b' may be uninitialized when used here.					   <
												   >	WARNING(10): Variable 'b' may be uninitialized when used here.
												   >	ERROR(11): Expecting type char in parameter 1 of call to 'emu' declared on line 2 but got type i
ERROR(11): Expecting type char in parameter 1 of call to 'emu' declared on line 2 but got type i   <
												   >	ERROR(12): Expecting type char in parameter 1 of call to 'emu' declared on line 2 but got type i
ERROR(12): Expecting type char in parameter 1 of call to 'emu' declared on line 2 but got type i   <
ERROR(16): '+' requires operands of type int but lhs is of type char.				   <
												   >	ERROR(16): '+' requires operands of type int but lhs is of type char.
============================================================================================================
data/part2.c-
ERROR(47): '+' requires operands of type int but lhs is of type char.				   <
ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.		   <
												   >	ERROR(47): '+' requires operands of type int but lhs is of type char.
												   >	ERROR(47): Unary 'chsign' requires an operand of type int but was given type bool.
============================================================================================================
data/peek.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
.   .   Child: 1  Compound [line: 3]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   .   Child: 0  Var: x of type int [line: 3]						   |	.   .   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   .   .   Child: 0  Id: x of type int [line: 3]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Compound [line: 4]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -3] [line: 4]
.   .   .   Child: 0  Var: y of type int [line: 4]						   |	.   .   .   Child: 0  Var: y of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   .   Child: 0  Id: y of type int [line: 4]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -2 size: 1] [line: 4]
												   >	Offset for end of global space: 0
============================================================================================================
data/precassoc.c-
Var: w of type int [line: 2]									   |	Var: w of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Func: dog returns type int [line: 4]						   |	Sibling: 1  Func: dog returns type int [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0  Parm: x of type int [line: 4]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
.   .   Child: 0  Var: y of type int [line: 5]							   |	.   .   Child: 0  Var: y of type int [mem: Local loc: -3 size: 1] [line: 5]
.   .   Sibling: 1  Var: z of type int [line: 5]						   |	.   .   Sibling: 1  Var: z of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   .   Child: 0  Id: y of type int [line: 7]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   .   Child: 0  Id: x of type int [line: 7]					   |	.   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   Child: 0  Id: z of type int [line: 9]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: y of type int [line: 9]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   .   Child: 0  Id: w of type int [line: 11]						   |	.   .   .   Child: 0  Id: w of type int [mem: Global loc: 0 size: 1] [line: 11]
.   .   .   Child: 0  Id: w of type int [line: 13]						   |	.   .   .   Child: 0  Id: w of type int [mem: Global loc: 0 size: 1] [line: 13]
.   .   .   Child: 0  Id: z of type int [line: 15]						   |	.   .   .   Child: 0  Id: z of type int [mem: Local loc: -4 size: 1] [line: 15]
Sibling: 2  Func: main returns type void [line: 18]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 18]
.   Child: 1  Compound [line: 18]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 18]
												   >	Offset for end of global space: -1
============================================================================================================
data/randomRoll.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 3]
.   .   Child: 0  Var: i of type int [line: 4]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: sum of type int [line: 4]						   |	.   .   Sibling: 1  Var: sum of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   .   Child: 0  Id: i of type int [line: 6]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: sum of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: i of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 1  Compound [line: 7]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 7]
.   .   .   .   .   Child: 0  Id: sum of type int [line: 8]					   |	.   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   .   Child: 0  Id: i of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   .   Child: 1  Id: sum of type int [line: 13]					   |	.   .   .   .   .   Child: 1  Id: sum of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   .   .   Child: 0  Id: sum of type int [line: 13]					   |	.   .   .   .   .   Child: 0  Id: sum of type int [mem: Local loc: -3 size: 1] [line: 13]
												   >	Offset for end of global space: 0
============================================================================================================
data/rangeifwhile.c-
ERROR(13): Cannot use function 'main' as a variable.						   <
												   >	ERROR(13): Cannot use function 'main' as a variable.
============================================================================================================
data/redefined.c-
============================================================================================================
data/returnbad.c-
============================================================================================================
data/return.c-
Binary files myout and data/return.out differ
============================================================================================================
data/scope35.c-
Var: a of type int [line: 2]									   |	Var: a of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: aa is array of type int [line: 3]						   |	Sibling: 1  Var: aa of array of type int [mem: Global loc: -2 size: 12] [line: 3]
Sibling: 2  Func: fox returns type void [line: 5]						   |	Sibling: 2  Func: fox returns type void [mem: Global loc: 0 size: -4] [line: 5]
.   Child: 0  Parm: fpa of type int [line: 5]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 5]
.   Sibling: 1  Parm: fpaa is array of type int [line: 5]					   |	.   Sibling: 1  Parm: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 5]
.   Child: 1  Compound [line: 6]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   .   Child: 0  Id: fpa of type int [line: 7]						   |	.   .   .   Child: 0  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: fpaa of type int [line: 8]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   Child: 0  Id: fpaa of type int [line: 9]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   Child: 0  Id: fpaa of type int [line: 10]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
Sibling: 3  Func: bat returns type void [line: 15]						   |	Sibling: 3  Func: bat returns type void [mem: Global loc: 0 size: -4] [line: 15]
.   Child: 0  Parm: fpa of type int [line: 15]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 15]
.   Sibling: 1  Parm: fpaa is array of type int [line: 15]					   |	.   Sibling: 1  Parm: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 15]
.   Child: 1  Compound [line: 16]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 16]
.   .   .   Child: 0  Id: fpa of type int [line: 18]						   |	.   .   .   Child: 0  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   Sibling: 1  Id: fpaa of type int [line: 18]						   |	.   .   .   Sibling: 1  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 18
Sibling: 4  Func: th returns type int [line: 21]						   |	Sibling: 4  Func: th returns type int [mem: Global loc: 0 size: -3] [line: 21]
.   Child: 0  Parm: fpa of type int [line: 21]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 21]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 21]
.   .   .   Child: 0  Id: fpa of type int [line: 21]						   |	.   .   .   Child: 0  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 21]
Sibling: 5  Func: tha returns type int [line: 23]						   |	Sibling: 5  Func: tha returns type int [mem: Global loc: 0 size: -3] [line: 23]
.   Child: 0  Parm: fpaa is array of type int [line: 23]					   |	.   Child: 0  Parm: fpaa of array of type int [mem: Parameter loc: -2 size: 1] [line: 23]
.   Child: 1  Compound [line: 23]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 23]
.   .   .   .   Child: 0  Id: fpaa of type int [line: 23]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -2 size: 1] [line: 
Sibling: 6  Func: dog returns type void [line: 25]						   |	Sibling: 6  Func: dog returns type void [mem: Global loc: 0 size: -4] [line: 25]
.   Child: 0  Parm: pa of type int [line: 25]							   |	.   Child: 0  Parm: pa of type int [mem: Parameter loc: -2 size: 1] [line: 25]
.   Sibling: 1  Parm: paa is array of type int [line: 25]					   |	.   Sibling: 1  Parm: paa of array of type int [mem: Parameter loc: -3 size: 1] [line: 25]
.   Child: 1  Compound [line: 26]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -17] [line: 26]
.   .   Child: 0  Var: b of type int [line: 27]							   |	.   .   Child: 0  Var: b of type int [mem: Local loc: -4 size: 1] [line: 27]
.   .   Sibling: 1  Var: bb is array of type int [line: 28]					   |	.   .   Sibling: 1  Var: bb of array of type int [mem: Local loc: -6 size: 12] [line: 28]
.   .   .   Child: 0  Id: a of type int [line: 30]						   |	.   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 30]
.   .   .   .   Child: 0  Id: aa of type int [line: 31]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 31]
.   .   .   .   Child: 0  Id: aa of type int [line: 32]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 32]
.   .   .   Child: 0  Id: b of type int [line: 34]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 34]
.   .   .   .   Child: 0  Id: bb of type int [line: 35]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 35]
.   .   .   .   Child: 0  Id: bb of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 36]
.   .   .   Child: 0  Id: b of type int [line: 37]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 37]
.   .   .   Child: 1  Id: pa of type int [line: 37]						   |	.   .   .   Child: 1  Id: pa of type int [mem: Parameter loc: -2 size: 1] [line: 37]
.   .   .   Child: 0  Id: a of type int [line: 39]						   |	.   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 39]
.   .   .   Sibling: 1  Id: aa of type int [line: 39]						   |	.   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 39]
.   .   .   Child: 0  Id: b of type int [line: 40]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 40]
.   .   .   Sibling: 1  Id: bb of type int [line: 40]						   |	.   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 40]
.   .   Sibling: 9  Assign: = of type int [line: 42]						   |	.   .   Sibling: 9  Assign: = of array of type int [line: 42]
.   .   .   Child: 0  Id: bb of type int [line: 42]						   |	.   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 42]
.   .   .   Child: 1  Id: paa of type int [line: 42]						   |	.   .   .   Child: 1  Id: paa of array of type int [mem: Parameter loc: -3 size: 1] [line: 42]
.   .   Sibling: 10  Compound [line: 43]							   |	.   .   Sibling: 10  Compound [mem: None loc: 0 size: -30] [line: 43]
.   .   .   Child: 0  Var: c of type int [line: 44]						   |	.   .   .   Child: 0  Var: c of type int [mem: Local loc: -17 size: 1] [line: 44]
.   .   .   Sibling: 1  Var: cc is array of type int [line: 45]					   |	.   .   .   Sibling: 1  Var: cc of array of type int [mem: Local loc: -19 size: 12] [line: 45]
.   .   .   .   Child: 0  Id: c of type int [line: 47]						   |	.   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -17 size: 1] [line: 47]
.   .   .   .   .   Child: 0  Id: cc of type int [line: 48]					   |	.   .   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -19 size: 12] [line: 
.   .   .   .   .   Child: 0  Id: cc of type int [line: 49]					   |	.   .   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -19 size: 12] [line: 
.   .   .   .   Child: 0  Id: a of type int [line: 52]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 52]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 52]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 52
.   .   .   .   Child: 0  Id: b of type int [line: 53]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 53]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 53]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 53]
.   .   .   .   Child: 0  Id: c of type int [line: 54]						   |	.   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -17 size: 1] [line: 54]
.   .   .   .   Sibling: 1  Id: cc of type int [line: 54]					   |	.   .   .   .   Sibling: 1  Id: cc of array of type int [mem: Local loc: -19 size: 12] [line: 54
.   .   Sibling: 11  Compound [line: 56]							   |	.   .   Sibling: 11  Compound [mem: None loc: 0 size: -30] [line: 56]
.   .   .   Child: 0  Var: d of type int [line: 57]						   |	.   .   .   Child: 0  Var: d of type int [mem: Local loc: -17 size: 1] [line: 57]
.   .   .   Sibling: 1  Var: dd is array of type int [line: 58]					   |	.   .   .   Sibling: 1  Var: dd of array of type int [mem: Local loc: -19 size: 12] [line: 58]
.   .   .   .   Child: 0  Id: d of type int [line: 60]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -17 size: 1] [line: 60]
.   .   .   .   .   Child: 0  Id: dd of type int [line: 61]					   |	.   .   .   .   .   Child: 0  Id: dd of array of type int [mem: Local loc: -19 size: 12] [line: 
.   .   .   .   .   Child: 0  Id: dd of type int [line: 62]					   |	.   .   .   .   .   Child: 0  Id: dd of array of type int [mem: Local loc: -19 size: 12] [line: 
.   .   .   .   Child: 0  Id: a of type int [line: 65]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 65]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 65]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 65
.   .   .   .   Child: 0  Id: b of type int [line: 66]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 66]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 66]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 66]
.   .   .   .   Child: 0  Id: d of type int [line: 67]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -17 size: 1] [line: 67]
.   .   .   .   Sibling: 1  Id: dd of type int [line: 67]					   |	.   .   .   .   Sibling: 1  Id: dd of array of type int [mem: Local loc: -19 size: 12] [line: 67
.   .   .   .   Child: 0  Id: a of type int [line: 70]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 70]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 70]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 70
.   .   .   .   Child: 0  Id: b of type int [line: 71]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 71]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 71]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 71]
.   .   .   .   Child: 0  Id: d of type int [line: 72]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -17 size: 1] [line: 72]
.   .   .   .   Sibling: 1  Id: dd of type int [line: 72]					   |	.   .   .   .   Sibling: 1  Id: dd of array of type int [mem: Local loc: -19 size: 12] [line: 72
.   .   Sibling: 12  Compound [line: 74]							   |	.   .   Sibling: 12  Compound [mem: None loc: 0 size: -17] [line: 74]
.   .   .   Child: 0  Var: e of type int [line: 75]						   |	.   .   .   Child: 0  Var: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 75]
.   .   .   Sibling: 1  Var: ee is array of type int [line: 76]					   |	.   .   .   Sibling: 1  Var: ee of static array of type int [mem: LocalStatic loc: -15 size: 12]
.   .   .   .   Child: 0  Id: e of type int [line: 78]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 78
.   .   .   .   .   Child: 0  Id: ee of type int [line: 79]					   |	.   .   .   .   .   Child: 0  Id: ee of static array of type int [mem: LocalStatic loc: -15 size
.   .   .   .   .   Child: 0  Id: ee of type int [line: 80]					   |	.   .   .   .   .   Child: 0  Id: ee of static array of type int [mem: LocalStatic loc: -15 size
.   .   .   .   Child: 0  Id: a of type int [line: 83]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 83]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 83]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 83
.   .   .   .   Child: 0  Id: b of type int [line: 84]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 84]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 84]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 84]
.   .   .   .   Child: 0  Id: e of type int [line: 85]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 85
.   .   .   .   Sibling: 1  Id: ee of type int [line: 85]					   |	.   .   .   .   Sibling: 1  Id: ee of static array of type int [mem: LocalStatic loc: -15 size: 
.   .   .   .   Child: 0  Id: a of type int [line: 88]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 88]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 88]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 88
.   .   .   .   Child: 0  Id: b of type int [line: 89]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -4 size: 1] [line: 89]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 89]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -6 size: 12] [line: 89]
.   .   .   .   Child: 0  Id: e of type int [line: 90]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 90
.   .   .   .   Sibling: 1  Id: ee of type int [line: 90]					   |	.   .   .   .   Sibling: 1  Id: ee of static array of type int [mem: LocalStatic loc: -15 size: 
.   .   .   .   Child: 0  Id: a of type int [line: 94]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 94]
.   .   .   .   Child: 0  Id: aa of type int [line: 95]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 95]
.   .   .   .   Child: 0  Id: a of type int [line: 97]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 97]
.   .   .   Sibling: 1  Id: aa of type int [line: 97]						   |	.   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 97]
Sibling: 7  Func: main returns type void [line: 102]						   |	Sibling: 7  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 102]
.   Child: 1  Compound [line: 103]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 103]
.   .   .   Child: 0  Id: a of type int [line: 104]						   |	.   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 104]
.   .   .   Sibling: 1  Id: aa of type int [line: 104]						   |	.   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 104]
												   >	Offset for end of global space: -26
============================================================================================================
data/scope3.c-
Var: a of type int [line: 2]									   |	Var: a of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: b of type bool [line: 3]							   |	Sibling: 1  Var: b of type bool [mem: Global loc: -1 size: 1] [line: 3]
Sibling: 2  Var: c of type char [line: 4]							   |	Sibling: 2  Var: c of type char [mem: Global loc: -2 size: 1] [line: 4]
Sibling: 3  Var: aa is array of type int [line: 5]						   |	Sibling: 3  Var: aa of array of type int [mem: Global loc: -4 size: 12] [line: 5]
Sibling: 4  Var: bb is array of type bool [line: 6]						   |	Sibling: 4  Var: bb of array of type bool [mem: Global loc: -16 size: 23] [line: 6]
Sibling: 5  Var: cc is array of type char [line: 7]						   |	Sibling: 5  Var: cc of array of type char [mem: Global loc: -39 size: 34] [line: 7]
Sibling: 6  Func: ibex returns type void [line: 10]						   |	Sibling: 6  Func: ibex returns type void [mem: Global loc: 0 size: -8] [line: 10]
.   Child: 0  Parm: pa of type int [line: 10]							   |	.   Child: 0  Parm: pa of type int [mem: Parameter loc: -2 size: 1] [line: 10]
.   Sibling: 1  Parm: pb of type bool [line: 11]						   |	.   Sibling: 1  Parm: pb of type bool [mem: Parameter loc: -3 size: 1] [line: 11]
.   Sibling: 2  Parm: pc of type char [line: 12]						   |	.   Sibling: 2  Parm: pc of type char [mem: Parameter loc: -4 size: 1] [line: 12]
.   Sibling: 3  Parm: paa is array of type int [line: 13]					   |	.   Sibling: 3  Parm: paa of array of type int [mem: Parameter loc: -5 size: 1] [line: 13]
.   Sibling: 4  Parm: pbb is array of type bool [line: 14]					   |	.   Sibling: 4  Parm: pbb of array of type bool [mem: Parameter loc: -6 size: 1] [line: 14]
.   Sibling: 5  Parm: pcc is array of type char [line: 15]					   |	.   Sibling: 5  Parm: pcc of array of type char [mem: Parameter loc: -7 size: 1] [line: 15]
.   Child: 1  Compound [line: 17]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -80] [line: 17]
.   .   Child: 0  Var: la of type int [line: 18]						   |	.   .   Child: 0  Var: la of type int [mem: Local loc: -8 size: 1] [line: 18]
.   .   Sibling: 1  Var: lb of type bool [line: 19]						   |	.   .   Sibling: 1  Var: lb of type bool [mem: Local loc: -9 size: 1] [line: 19]
.   .   Sibling: 2  Var: lc of type char [line: 20]						   |	.   .   Sibling: 2  Var: lc of type char [mem: Local loc: -10 size: 1] [line: 20]
.   .   Sibling: 3  Var: laa is array of type int [line: 21]					   |	.   .   Sibling: 3  Var: laa of array of type int [mem: Local loc: -12 size: 12] [line: 21]
.   .   Sibling: 4  Var: lbb is array of type bool [line: 22]					   |	.   .   Sibling: 4  Var: lbb of array of type bool [mem: Local loc: -24 size: 23] [line: 22]
.   .   Sibling: 5  Var: lcc is array of type char [line: 23]					   |	.   .   Sibling: 5  Var: lcc of array of type char [mem: Local loc: -47 size: 34] [line: 23]
.   .   Child: 1  Compound [line: 25]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -152] [line: 25]
.   .   .   Child: 0  Var: sla of type int [line: 26]						   |	.   .   .   Child: 0  Var: sla of type int [mem: Local loc: -80 size: 1] [line: 26]
.   .   .   Sibling: 1  Var: slb of type bool [line: 27]					   |	.   .   .   Sibling: 1  Var: slb of type bool [mem: Local loc: -81 size: 1] [line: 27]
.   .   .   Sibling: 2  Var: slc of type char [line: 28]					   |	.   .   .   Sibling: 2  Var: slc of type char [mem: Local loc: -82 size: 1] [line: 28]
.   .   .   Sibling: 3  Var: slaa is array of type int [line: 29]				   |	.   .   .   Sibling: 3  Var: slaa of array of type int [mem: Local loc: -84 size: 12] [line: 29]
.   .   .   Sibling: 4  Var: slbb is array of type bool [line: 30]				   |	.   .   .   Sibling: 4  Var: slbb of array of type bool [mem: Local loc: -96 size: 23] [line: 30
.   .   .   Sibling: 5  Var: slcc is array of type char [line: 31]				   |	.   .   .   Sibling: 5  Var: slcc of array of type char [mem: Local loc: -119 size: 34] [line: 3
.   .   Sibling: 1  Compound [line: 34]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -152] [line: 34]
.   .   .   Child: 0  Var: tla of type int [line: 35]						   |	.   .   .   Child: 0  Var: tla of type int [mem: Local loc: -80 size: 1] [line: 35]
.   .   .   Sibling: 1  Var: tlb of type bool [line: 36]					   |	.   .   .   Sibling: 1  Var: tlb of type bool [mem: Local loc: -81 size: 1] [line: 36]
.   .   .   Sibling: 2  Var: tlc of type char [line: 37]					   |	.   .   .   Sibling: 2  Var: tlc of type char [mem: Local loc: -82 size: 1] [line: 37]
.   .   .   Sibling: 3  Var: tlaa is array of type int [line: 38]				   |	.   .   .   Sibling: 3  Var: tlaa of array of type int [mem: Local loc: -84 size: 12] [line: 38]
.   .   .   Sibling: 4  Var: tlbb is array of type bool [line: 39]				   |	.   .   .   Sibling: 4  Var: tlbb of array of type bool [mem: Local loc: -96 size: 23] [line: 39
.   .   .   Sibling: 5  Var: tlcc is array of type char [line: 40]				   |	.   .   .   Sibling: 5  Var: tlcc of array of type char [mem: Local loc: -119 size: 34] [line: 4
.   .   Sibling: 2  Compound [line: 43]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -80] [line: 43]
.   .   .   Child: 0  Var: sa of type int [line: 44]						   |	.   .   .   Child: 0  Var: sa of static type int [mem: LocalStatic loc: -72 size: 1] [line: 44]
.   .   .   Sibling: 1  Var: sb of type bool [line: 45]						   |	.   .   .   Sibling: 1  Var: sb of static type bool [mem: LocalStatic loc: -73 size: 1] [line: 4
.   .   .   Sibling: 2  Var: sc of type char [line: 46]						   |	.   .   .   Sibling: 2  Var: sc of static type char [mem: LocalStatic loc: -74 size: 1] [line: 4
.   .   .   Sibling: 3  Var: saa is array of type int [line: 47]				   |	.   .   .   Sibling: 3  Var: saa of static array of type int [mem: LocalStatic loc: -76 size: 12
.   .   .   Sibling: 4  Var: sbb is array of type bool [line: 48]				   |	.   .   .   Sibling: 4  Var: sbb of static array of type bool [mem: LocalStatic loc: -88 size: 2
.   .   .   Sibling: 5  Var: scc is array of type char [line: 49]				   |	.   .   .   Sibling: 5  Var: scc of static array of type char [mem: LocalStatic loc: -111 size: 
Sibling: 7  Var: d of type int [line: 54]							   |	Sibling: 7  Var: d of type int [mem: Global loc: -144 size: 1] [line: 54]
Sibling: 8  Var: ee is array of type int [line: 54]						   |	Sibling: 8  Var: ee of array of type int [mem: Global loc: -146 size: 11] [line: 54]
Sibling: 9  Func: fox returns type void [line: 57]						   |	Sibling: 9  Func: fox returns type void [mem: Global loc: 0 size: -8] [line: 57]
.   Child: 0  Parm: fpa of type int [line: 57]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 57]
.   Sibling: 1  Parm: fpb of type bool [line: 57]						   |	.   Sibling: 1  Parm: fpb of type bool [mem: Parameter loc: -3 size: 1] [line: 57]
.   Sibling: 2  Parm: fpc of type char [line: 57]						   |	.   Sibling: 2  Parm: fpc of type char [mem: Parameter loc: -4 size: 1] [line: 57]
.   Sibling: 3  Parm: fpaa is array of type int [line: 57]					   |	.   Sibling: 3  Parm: fpaa of array of type int [mem: Parameter loc: -5 size: 1] [line: 57]
.   Sibling: 4  Parm: fpbb is array of type bool [line: 57]					   |	.   Sibling: 4  Parm: fpbb of array of type bool [mem: Parameter loc: -6 size: 1] [line: 57]
.   Sibling: 5  Parm: fpcc is array of type char [line: 57]					   |	.   Sibling: 5  Parm: fpcc of array of type char [mem: Parameter loc: -7 size: 1] [line: 57]
.   Child: 1  Compound [line: 58]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -9] [line: 58]
.   .   Child: 0  Var: foxa of type int [line: 59]						   |	.   .   Child: 0  Var: foxa of type int [mem: Local loc: -8 size: 1] [line: 59]
Sibling: 10  Func: main returns type void [line: 62]						   |	Sibling: 10  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 62]
.   Child: 1  Compound [line: 62]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 62]
												   >	Offset for end of global space: -156
============================================================================================================
data/scope4.c-
Var: a of type int [line: 2]									   |	Var: a of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: aa is array of type int [line: 3]						   |	Sibling: 1  Var: aa of array of type int [mem: Global loc: -2 size: 12] [line: 3]
Sibling: 2  Func: fox returns type void [line: 5]						   |	Sibling: 2  Func: fox returns type void [mem: Global loc: 0 size: -4] [line: 5]
.   Child: 0  Parm: fpa of type int [line: 5]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 5]
.   Sibling: 1  Parm: fpaa is array of type int [line: 5]					   |	.   Sibling: 1  Parm: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 5]
.   Child: 1  Compound [line: 6]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 6]
.   .   .   Child: 0  Id: fpa of type int [line: 7]						   |	.   .   .   Child: 0  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: fpaa of type int [line: 8]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   Child: 0  Id: fpaa of type int [line: 9]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   Child: 0  Id: fpaa of type int [line: 10]					   |	.   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: fpaa of type int [line: 10]				   |	.   .   .   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1]
Sibling: 3  Func: bat returns type void [line: 15]						   |	Sibling: 3  Func: bat returns type void [mem: Global loc: 0 size: -4] [line: 15]
.   Child: 0  Parm: fpa of type int [line: 15]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 15]
.   Sibling: 1  Parm: fpaa is array of type int [line: 15]					   |	.   Sibling: 1  Parm: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 15]
.   Child: 1  Compound [line: 16]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 16]
.   .   .   Child: 0  Id: fpa of type int [line: 18]						   |	.   .   .   Child: 0  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   .   .   Sibling: 1  Id: fpaa of type int [line: 18]						   |	.   .   .   Sibling: 1  Id: fpaa of array of type int [mem: Parameter loc: -3 size: 1] [line: 18
Sibling: 4  Func: th returns type int [line: 21]						   |	Sibling: 4  Func: th returns type int [mem: Global loc: 0 size: -3] [line: 21]
.   Child: 0  Parm: fpa of type int [line: 21]							   |	.   Child: 0  Parm: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 21]
.   Child: 1  Compound [line: 21]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 21]
.   .   .   .   Child: 1  Id: fpa of type int [line: 21]					   |	.   .   .   .   Child: 1  Id: fpa of type int [mem: Parameter loc: -2 size: 1] [line: 21]
Sibling: 5  Func: tha returns type int [line: 23]						   |	Sibling: 5  Func: tha returns type int [mem: Global loc: 0 size: -3] [line: 23]
.   Child: 0  Parm: fpaa is array of type int [line: 23]					   |	.   Child: 0  Parm: fpaa of array of type int [mem: Parameter loc: -2 size: 1] [line: 23]
.   Child: 1  Compound [line: 23]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 23]
.   .   .   .   .   Child: 0  Id: fpaa of type int [line: 23]					   |	.   .   .   .   .   Child: 0  Id: fpaa of array of type int [mem: Parameter loc: -2 size: 1] [li
Sibling: 6  Func: main returns type void [line: 25]						   |	Sibling: 6  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 25]
.   Child: 1  Compound [line: 26]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -15] [line: 26]
.   .   Child: 0  Var: b of type int [line: 27]							   |	.   .   Child: 0  Var: b of type int [mem: Local loc: -2 size: 1] [line: 27]
.   .   Sibling: 1  Var: bb is array of type int [line: 28]					   |	.   .   Sibling: 1  Var: bb of array of type int [mem: Local loc: -4 size: 12] [line: 28]
.   .   .   Child: 0  Id: a of type int [line: 30]						   |	.   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 30]
.   .   .   .   Child: 0  Id: aa of type int [line: 31]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 31]
.   .   .   .   Child: 0  Id: aa of type int [line: 32]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 32]
.   .   .   Child: 0  Id: b of type int [line: 34]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 34]
.   .   .   .   Child: 0  Id: bb of type int [line: 35]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 35]
.   .   .   .   Child: 0  Id: bb of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 36]
.   .   .   Child: 0  Id: a of type int [line: 38]						   |	.   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 38]
.   .   .   Sibling: 1  Id: aa of type int [line: 38]						   |	.   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 38]
.   .   .   Child: 0  Id: b of type int [line: 39]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 39]
.   .   .   Sibling: 1  Id: bb of type int [line: 39]						   |	.   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 39]
.   .   Sibling: 8  Compound [line: 41]								   |	.   .   Sibling: 8  Compound [mem: None loc: 0 size: -28] [line: 41]
.   .   .   Child: 0  Var: c of type int [line: 42]						   |	.   .   .   Child: 0  Var: c of type int [mem: Local loc: -15 size: 1] [line: 42]
.   .   .   Sibling: 1  Var: cc is array of type int [line: 43]					   |	.   .   .   Sibling: 1  Var: cc of array of type int [mem: Local loc: -17 size: 12] [line: 43]
.   .   .   .   Child: 0  Id: c of type int [line: 45]						   |	.   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 45]
.   .   .   .   .   Child: 0  Id: cc of type int [line: 46]					   |	.   .   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -17 size: 12] [line: 
.   .   .   .   .   Child: 0  Id: cc of type int [line: 47]					   |	.   .   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -17 size: 12] [line: 
.   .   .   .   Child: 0  Id: a of type int [line: 50]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 50]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 50]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 50
.   .   .   .   Child: 0  Id: b of type int [line: 51]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 51]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 51]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 51]
.   .   .   .   Child: 0  Id: c of type int [line: 52]						   |	.   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -15 size: 1] [line: 52]
.   .   .   .   Sibling: 1  Id: cc of type int [line: 52]					   |	.   .   .   .   Sibling: 1  Id: cc of array of type int [mem: Local loc: -17 size: 12] [line: 52
.   .   Sibling: 9  Compound [line: 54]								   |	.   .   Sibling: 9  Compound [mem: None loc: 0 size: -28] [line: 54]
.   .   .   Child: 0  Var: d of type int [line: 55]						   |	.   .   .   Child: 0  Var: d of type int [mem: Local loc: -15 size: 1] [line: 55]
.   .   .   Sibling: 1  Var: dd is array of type int [line: 56]					   |	.   .   .   Sibling: 1  Var: dd of array of type int [mem: Local loc: -17 size: 12] [line: 56]
.   .   .   .   Child: 0  Id: d of type int [line: 58]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -15 size: 1] [line: 58]
.   .   .   .   .   Child: 0  Id: dd of type int [line: 59]					   |	.   .   .   .   .   Child: 0  Id: dd of array of type int [mem: Local loc: -17 size: 12] [line: 
.   .   .   .   .   Child: 0  Id: dd of type int [line: 60]					   |	.   .   .   .   .   Child: 0  Id: dd of array of type int [mem: Local loc: -17 size: 12] [line: 
.   .   .   .   Child: 0  Id: a of type int [line: 63]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 63]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 63]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 63
.   .   .   .   Child: 0  Id: b of type int [line: 64]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 64]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 64]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 64]
.   .   .   .   Child: 0  Id: d of type int [line: 65]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -15 size: 1] [line: 65]
.   .   .   .   Sibling: 1  Id: dd of type int [line: 65]					   |	.   .   .   .   Sibling: 1  Id: dd of array of type int [mem: Local loc: -17 size: 12] [line: 65
.   .   .   .   Child: 0  Id: a of type int [line: 68]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 68]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 68]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 68
.   .   .   .   Child: 0  Id: b of type int [line: 69]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 69]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 69]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 69]
.   .   .   .   Child: 0  Id: d of type int [line: 70]						   |	.   .   .   .   Child: 0  Id: d of type int [mem: Local loc: -15 size: 1] [line: 70]
.   .   .   .   Sibling: 1  Id: dd of type int [line: 70]					   |	.   .   .   .   Sibling: 1  Id: dd of array of type int [mem: Local loc: -17 size: 12] [line: 70
.   .   Sibling: 10  Compound [line: 72]							   |	.   .   Sibling: 10  Compound [mem: None loc: 0 size: -15] [line: 72]
.   .   .   Child: 0  Var: e of type int [line: 73]						   |	.   .   .   Child: 0  Var: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 73]
.   .   .   Sibling: 1  Var: ee is array of type int [line: 74]					   |	.   .   .   Sibling: 1  Var: ee of static array of type int [mem: LocalStatic loc: -15 size: 12]
.   .   .   .   Child: 0  Id: e of type int [line: 76]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 76
.   .   .   .   .   Child: 0  Id: ee of type int [line: 77]					   |	.   .   .   .   .   Child: 0  Id: ee of static array of type int [mem: LocalStatic loc: -15 size
.   .   .   .   .   Child: 0  Id: ee of type int [line: 78]					   |	.   .   .   .   .   Child: 0  Id: ee of static array of type int [mem: LocalStatic loc: -15 size
.   .   .   .   Child: 0  Id: a of type int [line: 81]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 81]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 81]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 81
.   .   .   .   Child: 0  Id: b of type int [line: 82]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 82]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 82]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 82]
.   .   .   .   Child: 0  Id: e of type int [line: 83]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 83
.   .   .   .   Sibling: 1  Id: ee of type int [line: 83]					   |	.   .   .   .   Sibling: 1  Id: ee of static array of type int [mem: LocalStatic loc: -15 size: 
.   .   .   .   Child: 0  Id: a of type int [line: 86]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 86]
.   .   .   .   Sibling: 1  Id: aa of type int [line: 86]					   |	.   .   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 86
.   .   .   .   Child: 0  Id: b of type int [line: 87]						   |	.   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -2 size: 1] [line: 87]
.   .   .   .   Sibling: 1  Id: bb of type int [line: 87]					   |	.   .   .   .   Sibling: 1  Id: bb of array of type int [mem: Local loc: -4 size: 12] [line: 87]
.   .   .   .   Child: 0  Id: e of type int [line: 88]						   |	.   .   .   .   Child: 0  Id: e of static type int [mem: LocalStatic loc: -13 size: 1] [line: 88
.   .   .   .   Sibling: 1  Id: ee of type int [line: 88]					   |	.   .   .   .   Sibling: 1  Id: ee of static array of type int [mem: LocalStatic loc: -15 size: 
.   .   .   .   Child: 0  Id: a of type int [line: 92]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 92]
.   .   .   .   Child: 0  Id: aa of type int [line: 93]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 93]
.   .   .   .   Child: 0  Id: a of type int [line: 95]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Global loc: 0 size: 1] [line: 95]
.   .   .   Sibling: 1  Id: aa of type int [line: 95]						   |	.   .   .   Sibling: 1  Id: aa of array of type int [mem: Global loc: -2 size: 12] [line: 95]
												   >	Offset for end of global space: -26
============================================================================================================
data/scope5.c-
Var: x of type int [line: 2]									   |	Var: x of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Func: inc returns type int [line: 4]						   |	Sibling: 1  Func: inc returns type int [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]							   |	.   .   Child: 0  Var: x of static type int [mem: LocalStatic loc: -1 size: 1] [line: 6]
.   .   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -1 size: 1] [line: 7]
Sibling: 2  Func: fred returns type int [line: 10]						   |	Sibling: 2  Func: fred returns type int [mem: Global loc: 0 size: -2] [line: 10]
.   Child: 1  Compound [line: 11]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 11]
.   .   Child: 0  Var: x of type int [line: 12]							   |	.   .   Child: 0  Var: x of static type int [mem: LocalStatic loc: -2 size: 1] [line: 12]
.   .   .   Child: 0  Id: x of type int [line: 14]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -2 size: 1] [line: 14]
.   .   .   Child: 0  Id: x of type int [line: 15]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -2 size: 1] [line: 15]
.   .   Sibling: 2  Compound [line: 16]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -2] [line: 16]
.   .   .   Child: 0  Var: x of type int [line: 17]						   |	.   .   .   Child: 0  Var: x of static type int [mem: LocalStatic loc: -3 size: 1] [line: 17]
.   .   .   .   Child: 0  Id: x of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 0  Id: x of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -3 size: 1] [line: 20]
.   .   .   Child: 0  Id: x of type int [line: 22]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -2 size: 1] [line: 22]
.   .   .   Child: 0  Id: x of type int [line: 25]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: -2 size: 1] [line: 25]
Sibling: 3  Func: main returns type void [line: 28]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 28]
.   Child: 1  Compound [line: 29]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 29]
												   >	Offset for end of global space: -4
============================================================================================================
data/scope6.c-
Func: comp returns type int [line: 2]								   |	Func: comp returns type int [mem: Global loc: 0 size: -4] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Sibling: 1  Parm: y of type int [line: 2]							   |	.   Sibling: 1  Parm: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   .   .   .   .   Child: 0  Id: x of type int [line: 2]					   |	.   .   .   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   .   .   Child: 1  Id: x of type int [line: 2]					   |	.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   .   .   Child: 0  Id: y of type int [line: 2]					   |	.   .   .   .   .   .   Child: 0  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   .   .   Child: 1  Id: y of type int [line: 2]					   |	.   .   .   .   .   .   Child: 1  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: x of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   .   .   .   Child: 0  Id: y of type int [line: 2]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Parameter loc: -3 size: 1] [line: 2]
Sibling: 1  Func: main returns type void [line: 4]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 5]
												   >	Offset for end of global space: 0
============================================================================================================
data/scope.c-
ERROR(47): Symbol 't' is not declared.								   <
												   >	ERROR(47): Symbol 't' is not declared.
============================================================================================================
data/scopes.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 2]
.   .   Child: 0  Var: a of type int [line: 3]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: b of type int [line: 3]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Child: 1  Compound [line: 5]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 5]
.   .   .   Child: 0  Var: c of type char [line: 6]						   |	.   .   .   Child: 0  Var: c of type char [mem: Local loc: -4 size: 1] [line: 6]
.   .   .   Sibling: 1  Var: d of type char [line: 6]						   |	.   .   .   Sibling: 1  Var: d of type char [mem: Local loc: -5 size: 1] [line: 6]
.   .   Sibling: 1  Compound [line: 9]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -6] [line: 9]
.   .   .   Child: 0  Var: e of type bool [line: 10]						   |	.   .   .   Child: 0  Var: e of type bool [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Sibling: 1  Var: f of type bool [line: 10]						   |	.   .   .   Sibling: 1  Var: f of type bool [mem: Local loc: -5 size: 1] [line: 10]
												   >	Offset for end of global space: 0
============================================================================================================
data/simple.c-
============================================================================================================
data/simpleDefine.c-
============================================================================================================
data/small.c-
============================================================================================================
data/static.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 6]
.   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 7]
.   .   .   Child: 0  Id: x of type int [line: 8]						   |	.   .   .   Child: 0  Id: x of static type int [mem: LocalStatic loc: 0 size: 1] [line: 8]
												   >	Offset for end of global space: -1
============================================================================================================
data/strange.c-
============================================================================================================
data/stress.c-
============================================================================================================
data/string.c-
Var: g is array of type char [line: 1]								   |	Var: g of array of type char [mem: Global loc: -7 size: 9] [line: 1]
.   Child: 0  Const is array "corgi" of type char [line: 1]					   |	.   Child: 0  Const "corgi" of array of type char [mem: Global loc: -1 size: 6] [line: 1]
Sibling: 1  Func: main returns type void [line: 2]						   |	Sibling: 1  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -13] [line: 2]
.   .   Child: 0  Var: s is array of type char [line: 3]					   |	.   .   Child: 0  Var: s of array of type char [mem: Local loc: -3 size: 11] [line: 3]
.   .   .   Child: 0  Const is array "beach day" of type char [line: 3]				   |	.   .   .   Child: 0  Const "beach day" of array of type char [mem: Global loc: -16 size: 10] [l
												   >	Offset for end of global space: -25
============================================================================================================
data/testExample.c-
============================================================================================================
data/tinybad.c-
============================================================================================================
data/tiny.c-
============================================================================================================
data/tinygood.c-
============================================================================================================
data/tinyMixed2.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
Sibling: 1  Var: g of type int [line: 4]							   |	Sibling: 1  Var: g of type int [mem: Global loc: 0 size: 1] [line: 4]
Sibling: 2  Var: x is array of type int [line: 5]						   |	Sibling: 2  Var: x of array of type int [mem: Global loc: -2 size: 21] [line: 5]
Sibling: 3  Func: dogs returns type void [line: 7]						   |	Sibling: 3  Func: dogs returns type void [mem: Global loc: 0 size: -2] [line: 7]
.   Child: 1  Compound [line: 8]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 8]
.   .   .   Child: 1  Compound [line: 10]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 10]
.   .   .   .   Child: 0  Var: a of type int [line: 10]						   |	.   .   .   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   Child: 2  Compound [line: 11]							   |	.   .   .   Child: 2  Compound [mem: None loc: 0 size: -3] [line: 11]
.   .   .   .   Child: 0  Var: b of type int [line: 11]						   |	.   .   .   .   Child: 0  Var: b of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 1  Compound [line: 12]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 12]
.   .   .   .   Child: 0  Var: c of type int [line: 12]						   |	.   .   .   .   Child: 0  Var: c of type int [mem: Local loc: -2 size: 1] [line: 12]
.   .   Sibling: 2  For [line: 13]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 13]
.   .   .   Child: 0  Var: xx of type int [line: 13]						   |	.   .   .   Child: 0  Var: xx of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: g of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: g of type int [mem: Global loc: 0 size: 1] [line: 13]
.   .   .   Child: 2  Compound [line: 13]							   |	.   .   .   Child: 2  Compound [mem: None loc: 0 size: -4] [line: 13]
.   .   .   .   Child: 0  Var: d of type int [line: 13]						   |	.   .   .   .   Child: 0  Var: d of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   Sibling: 3  Compound [line: 14]								   |	.   .   Sibling: 3  Compound [mem: None loc: 0 size: -3] [line: 14]
.   .   .   Child: 0  Var: e of type int [line: 14]						   |	.   .   .   Child: 0  Var: e of type int [mem: Local loc: -2 size: 1] [line: 14]
Sibling: 4  Var: h of type int [line: 16]							   |	Sibling: 4  Var: h of type int [mem: Global loc: -22 size: 1] [line: 16]
												   >	Offset for end of global space: -23
============================================================================================================
data/tinyMixed.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 2]
Sibling: 1  Func: dogs returns type void [line: 4]						   |	Sibling: 1  Func: dogs returns type void [mem: Global loc: 0 size: -2] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 5]
.   .   Sibling: 2  For [line: 9]								   |	.   .   Sibling: 2  For [mem: None loc: 0 size: -3] [line: 9]
.   .   .   Child: 0  Var: x of type int [line: 9]						   |	.   .   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   Sibling: 3  Compound [line: 10]								   |	.   .   Sibling: 3  Compound [mem: None loc: 0 size: -2] [line: 10]
												   >	Offset for end of global space: 0
============================================================================================================
data/tinyMixedControl2.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
												   >	Offset for end of global space: 0
============================================================================================================
data/tinyMixedControl3.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 1  For [line: 7]								   |	.   .   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 7]
.   .   .   .   Child: 0  Var: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   .   .   Child: 1  For [line: 9]							   |	.   .   .   .   .   Child: 1  For [mem: None loc: 0 size: -5] [line: 9]
.   .   .   .   .   .   Child: 0  Var: x of type int [line: 9]					   |	.   .   .   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   Child: 1  For [line: 14]								   |	.   .   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 14]
.   .   .   .   Child: 0  Var: x of type int [line: 14]						   |	.   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   Child: 2  For [line: 16]								   |	.   .   .   Child: 2  For [mem: None loc: 0 size: -4] [line: 16]
.   .   .   .   Child: 0  Var: x of type int [line: 16]						   |	.   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   .   Child: 1  For [line: 19]								   |	.   .   .   Child: 1  For [mem: None loc: 0 size: -4] [line: 19]
.   .   .   .   Child: 0  Var: x of type int [line: 19]						   |	.   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -3 size: 1] [line: 19]
.   .   .   .   Child: 2  For [line: 20]							   |	.   .   .   .   Child: 2  For [mem: None loc: 0 size: -5] [line: 20]
.   .   .   .   .   Child: 0  Var: x of type int [line: 20]					   |	.   .   .   .   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 20]
												   >	Offset for end of global space: 0
============================================================================================================
data/tinyMixedControl.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Var: y of type int [line: 4]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 4]
.   .   Sibling: 2  Var: z of type int [line: 4]						   |	.   .   Sibling: 2  Var: z of type int [mem: Local loc: -4 size: 1] [line: 4]
.   .   .   .   Child: 0  Id: x of type int [line: 6]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   .   Child: 1  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 2  Id: y of type int [line: 8]						   |	.   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: y of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   Child: 1  Id: y of type int [line: 10]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 10]
.   .   .   .   Child: 1  Id: z of type int [line: 11]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   Child: 1  Id: y of type int [line: 13]						   |	.   .   .   Child: 1  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   .   Child: 1  Id: z of type int [line: 15]						   |	.   .   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   .   Child: 2  Id: x of type int [line: 16]						   |	.   .   .   .   Child: 2  Id: x of type int [mem: Local loc: -2 size: 1] [line: 16]
.   .   .   .   Child: 0  Id: x of type int [line: 18]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 18]
.   .   .   .   .   Child: 1  Id: x of type int [line: 20]					   |	.   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 20]
.   .   .   .   .   Child: 2  Id: y of type int [line: 21]					   |	.   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 21]
.   .   .   Child: 2  Id: z of type int [line: 22]						   |	.   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 22]
.   .   .   .   Child: 0  Id: x of type int [line: 24]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 24]
.   .   .   Child: 1  Id: z of type int [line: 24]						   |	.   .   .   Child: 1  Id: z of type int [mem: Local loc: -4 size: 1] [line: 24]
.   .   .   .   .   .   Child: 1  Id: x of type int [line: 28]					   |	.   .   .   .   .   .   Child: 1  Id: x of type int [mem: Local loc: -2 size: 1] [line: 28]
.   .   .   .   .   .   Child: 2  Id: y of type int [line: 29]					   |	.   .   .   .   .   .   Child: 2  Id: y of type int [mem: Local loc: -3 size: 1] [line: 29]
.   .   .   .   Child: 2  Id: z of type int [line: 30]						   |	.   .   .   .   Child: 2  Id: z of type int [mem: Local loc: -4 size: 1] [line: 30]
												   >	Offset for end of global space: 0
============================================================================================================
data/tinyOverlap.c-
Var: g of type int [line: 2]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Func: ibex returns type void [line: 4]						   |	Sibling: 1  Func: ibex returns type void [mem: Global loc: 0 size: -3] [line: 4]
.   Child: 0  Parm: p of type int [line: 4]							   |	.   Child: 0  Parm: p of type int [mem: Parameter loc: -2 size: 1] [line: 4]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   Child: 0  Var: a of type int [line: 6]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   Child: 1  Compound [line: 7]								   |	.   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 7]
.   .   .   Child: 0  Var: b of type int [line: 8]						   |	.   .   .   Child: 0  Var: b of type int [mem: Local loc: -4 size: 1] [line: 8]
.   .   Sibling: 1  Compound [line: 10]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -5] [line: 10]
.   .   .   Child: 0  Var: c of type int [line: 11]						   |	.   .   .   Child: 0  Var: c of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   Sibling: 2  Compound [line: 13]								   |	.   .   Sibling: 2  Compound [mem: None loc: 0 size: -4] [line: 13]
.   .   .   Child: 1  Compound [line: 14]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 14]
.   .   .   .   Child: 0  Var: b of type int [line: 15]						   |	.   .   .   .   Child: 0  Var: b of type int [mem: Local loc: -4 size: 1] [line: 15]
.   .   .   Sibling: 1  Compound [line: 17]							   |	.   .   .   Sibling: 1  Compound [mem: None loc: 0 size: -5] [line: 17]
.   .   .   .   Child: 0  Var: c of type int [line: 18]						   |	.   .   .   .   Child: 0  Var: c of type int [mem: Local loc: -4 size: 1] [line: 18]
Sibling: 2  Var: h of type int [line: 23]							   |	Sibling: 2  Var: h of type int [mem: Global loc: -1 size: 1] [line: 23]
Sibling: 3  Func: main returns type void [line: 24]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 24]
.   Child: 1  Compound [line: 24]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 24]
.   .   .   Child: 0  Id: h of type int [line: 24]						   |	.   .   .   Child: 0  Id: h of type int [mem: Global loc: -1 size: 1] [line: 24]
Sibling: 4  Var: i of type int [line: 25]							   |	Sibling: 4  Var: i of type int [mem: Global loc: -2 size: 1] [line: 25]
												   >	Offset for end of global space: -3
============================================================================================================
data/tinyscope.c-
Var: a of type int [line: 1]									   |	Var: a of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Func: dog returns type void [line: 3]						   |	Sibling: 1  Func: dog returns type void [mem: Global loc: 0 size: -3] [line: 3]
.   Child: 0  Parm: a of type char [line: 3]							   |	.   Child: 0  Parm: a of type char [mem: Parameter loc: -2 size: 1] [line: 3]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 1  Id: a of type char [line: 4]							   |	.   .   Child: 1  Id: a of type char [mem: Parameter loc: -2 size: 1] [line: 4]
.   .   Sibling: 1  Compound [line: 5]								   |	.   .   Sibling: 1  Compound [mem: None loc: 0 size: -4] [line: 5]
.   .   .   Child: 0  Var: a of type int [line: 6]						   |	.   .   .   Child: 0  Var: a of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   Child: 1  Id: a of type int [line: 7]						   |	.   .   .   Child: 1  Id: a of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   Sibling: 2  Id: a of type char [line: 9]						   |	.   .   Sibling: 2  Id: a of type char [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   Sibling: 3  Compound [line: 10]								   |	.   .   Sibling: 3  Compound [mem: None loc: 0 size: -3] [line: 10]
.   .   .   Child: 0  Var: a of type char [line: 11]						   |	.   .   .   Child: 0  Var: a of static type char [mem: LocalStatic loc: -1 size: 1] [line: 11]
.   .   .   Child: 1  Id: a of type char [line: 12]						   |	.   .   .   Child: 1  Id: a of static type char [mem: LocalStatic loc: -1 size: 1] [line: 12]
.   .   Sibling: 4  Id: a of type char [line: 14]						   |	.   .   Sibling: 4  Id: a of type char [mem: Parameter loc: -2 size: 1] [line: 14]
Sibling: 2  Func: main returns type void [line: 17]						   |	Sibling: 2  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 17]
.   Child: 1  Compound [line: 17]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 17]
.   .   Child: 1  Id: a of type int [line: 18]							   |	.   .   Child: 1  Id: a of type int [mem: Global loc: 0 size: 1] [line: 18]
												   >	Offset for end of global space: -2
============================================================================================================
data/types3.c-
============================================================================================================
data/types.c-
============================================================================================================
data/unary.c-
Func: main returns type void [line: 6]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]
.   Child: 1  Compound [line: 7]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -18] [line: 7]
.   .   Child: 0  Var: x of type int [line: 8]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   Sibling: 1  Var: y of type int [line: 9]						   |	.   .   Sibling: 1  Var: y of type int [mem: Local loc: -3 size: 1] [line: 9]
.   .   Sibling: 2  Var: a is array of type bool [line: 10]					   |	.   .   Sibling: 2  Var: a of array of type bool [mem: Local loc: -5 size: 8] [line: 10]
.   .   Sibling: 3  Var: b is array of type bool [line: 10]					   |	.   .   Sibling: 3  Var: b of array of type bool [mem: Local loc: -13 size: 6] [line: 10]
.   .   .   Child: 0  Id: x of type int [line: 12]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 12]
.   .   .   Child: 0  Id: y of type int [line: 13]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 13]
.   .   .   .   Child: 0  Id: x of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 13]
.   .   .   Child: 0  Id: y of type int [line: 14]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: x of type int [line: 14]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 14]
.   .   .   .   Child: 0  Id: x of type int [line: 15]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 15]
.   .   .   Child: 0  Id: y of type int [line: 16]						   |	.   .   .   Child: 0  Id: y of type int [mem: Local loc: -3 size: 1] [line: 16]
.   .   Sibling: 9  Compound [line: 23]								   |	.   .   Sibling: 9  Compound [mem: None loc: 0 size: -20] [line: 23]
.   .   .   Child: 0  Var: x of type bool [line: 23]						   |	.   .   .   Child: 0  Var: x of type bool [mem: Local loc: -18 size: 1] [line: 23]
.   .   .   Sibling: 1  Var: y of type bool [line: 24]						   |	.   .   .   Sibling: 1  Var: y of type bool [mem: Local loc: -19 size: 1] [line: 24]
.   .   .   .   Child: 0  Id: x of type bool [line: 26]						   |	.   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 26]
.   .   .   .   Child: 0  Id: y of type bool [line: 27]						   |	.   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -19 size: 1] [line: 27]
.   .   .   .   .   Child: 0  Id: x of type bool [line: 27]					   |	.   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 27]
.   .   .   .   .   Child: 0  Id: x of type bool [line: 28]					   |	.   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 28]
.   .   .   .   Child: 0  Id: y of type bool [line: 29]						   |	.   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -19 size: 1] [line: 29]
.   .   .   .   .   .   .   Child: 0  Id: x of type bool [line: 30]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 30
.   .   .   .   .   .   Child: 0  Id: y of type bool [line: 30]					   |	.   .   .   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -19 size: 1] [line: 30]
.   .   .   .   .   .   .   Child: 0  Id: x of type bool [line: 31]				   |	.   .   .   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 31
.   .   .   .   .   .   Child: 0  Id: y of type bool [line: 31]					   |	.   .   .   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -19 size: 1] [line: 31]
.   .   .   .   .   .   .   Child: 0  Id: y of type bool [line: 32]				   |	.   .   .   .   .   .   .   Child: 0  Id: y of type bool [mem: Local loc: -19 size: 1] [line: 32
.   .   .   .   .   .   Child: 0  Id: x of type bool [line: 32]					   |	.   .   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 32]
.   .   .   .   .   .   Child: 0  Id: x of type bool [line: 33]					   |	.   .   .   .   .   .   Child: 0  Id: x of type bool [mem: Local loc: -18 size: 1] [line: 33]
.   .   .   .   Child: 0  Id: a of type bool [line: 37]						   |	.   .   .   .   Child: 0  Id: a of array of type bool [mem: Local loc: -5 size: 8] [line: 37]
.   .   .   .   Child: 0  Id: b of type bool [line: 38]						   |	.   .   .   .   Child: 0  Id: b of array of type bool [mem: Local loc: -13 size: 6] [line: 38]
												   >	Offset for end of global space: 0
============================================================================================================
data/unarystar.c-
Func: main returns type int [line: 6]								   |	Func: main returns type int [mem: Global loc: 0 size: -2] [line: 6]
.   Child: 1  Compound [line: 7]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -47] [line: 7]
.   .   Child: 0  Var: k of type int [line: 8]							   |	.   .   Child: 0  Var: k of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   Sibling: 1  Var: n is array of type int [line: 8]					   |	.   .   Sibling: 1  Var: n of array of type int [mem: Local loc: -4 size: 8] [line: 8]
.   .   Sibling: 2  Var: b of type bool [line: 9]						   |	.   .   Sibling: 2  Var: b of type bool [mem: Local loc: -11 size: 1] [line: 9]
.   .   Sibling: 3  Var: a is array of type bool [line: 9]					   |	.   .   Sibling: 3  Var: a of array of type bool [mem: Local loc: -13 size: 35] [line: 9]
.   .   .   .   Child: 0  Id: n of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 11]
.   .   .   .   Child: 0  Id: a of type bool [line: 12]						   |	.   .   .   .   Child: 0  Id: a of array of type bool [mem: Local loc: -13 size: 35] [line: 12]
.   .   .   .   .   Child: 0  Id: n of type int [line: 15]					   |	.   .   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 15]
.   .   .   .   .   Child: 0  Id: a of type bool [line: 16]					   |	.   .   .   .   .   Child: 0  Id: a of array of type bool [mem: Local loc: -13 size: 35] [line: 
.   .   .   .   Child: 0  Id: n of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 19]
.   .   .   .   .   Child: 0  Id: n of type int [line: 19]					   |	.   .   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 19]
.   .   .   .   Child: 0  Id: n of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 20]
.   .   .   .   .   Child: 0  Id: a of type bool [line: 21]					   |	.   .   .   .   .   Child: 0  Id: a of array of type bool [mem: Local loc: -13 size: 35] [line: 
.   .   .   .   .   Child: 0  Id: n of type int [line: 21]					   |	.   .   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 21]
.   .   .   .   Child: 0  Id: n of type int [line: 24]						   |	.   .   .   .   Child: 0  Id: n of array of type int [mem: Local loc: -4 size: 8] [line: 24]
												   >	Offset for end of global space: 0
============================================================================================================
data/undeclared.c-
============================================================================================================
data/undefined.c-
============================================================================================================
data/uninit2.c-
Func: main returns type void [line: 1]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 1]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -39] [line: 2]
.   .   Child: 0  Var: a of type int [line: 3]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 3]
.   .   Sibling: 1  Var: b of type int [line: 3]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -3 size: 1] [line: 3]
.   .   Sibling: 2  Var: c of type int [line: 3]						   |	.   .   Sibling: 2  Var: c of type int [mem: Local loc: -4 size: 1] [line: 3]
.   .   Sibling: 3  Var: d of type int [line: 3]						   |	.   .   Sibling: 3  Var: d of type int [mem: Local loc: -5 size: 1] [line: 3]
.   .   Sibling: 4  Var: aa is array of type int [line: 4]					   |	.   .   Sibling: 4  Var: aa of array of type int [mem: Local loc: -7 size: 3] [line: 4]
.   .   Sibling: 5  Var: bb is array of type int [line: 4]					   |	.   .   Sibling: 5  Var: bb of array of type int [mem: Local loc: -10 size: 4] [line: 4]
.   .   Sibling: 6  Var: cc is array of type int [line: 4]					   |	.   .   Sibling: 6  Var: cc of array of type int [mem: Local loc: -14 size: 6] [line: 4]
.   .   Sibling: 7  Var: dd is array of type int [line: 4]					   |	.   .   Sibling: 7  Var: dd of array of type int [mem: Local loc: -20 size: 8] [line: 4]
.   .   Sibling: 8  Var: ee is array of type int [line: 4]					   |	.   .   Sibling: 8  Var: ee of array of type int [mem: Local loc: -28 size: 12] [line: 4]
.   .   .   Child: 0  Id: a of type int [line: 6]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 6]
.   .   .   Child: 1  Id: b of type int [line: 6]						   |	.   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 6]
.   .   .   Child: 0  Id: a of type int [line: 7]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   Child: 1  Id: b of type int [line: 7]						   |	.   .   .   Child: 1  Id: b of type int [mem: Local loc: -3 size: 1] [line: 7]
.   .   .   Child: 0  Id: a of type int [line: 8]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 8]
.   .   .   .   Child: 0  Id: aa of type int [line: 8]						   |	.   .   .   .   Child: 0  Id: aa of array of type int [mem: Local loc: -7 size: 3] [line: 8]
.   .   .   Child: 0  Id: a of type int [line: 9]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -2 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: bb of type int [line: 9]						   |	.   .   .   .   Child: 0  Id: bb of array of type int [mem: Local loc: -10 size: 4] [line: 9]
.   .   .   .   .   Child: 0  Id: cc of type int [line: 9]					   |	.   .   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -14 size: 6] [line: 9
.   .   .   .   Child: 0  Id: cc of type int [line: 10]						   |	.   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -14 size: 6] [line: 10]
.   .   .   .   Child: 1  Id: c of type int [line: 10]						   |	.   .   .   .   Child: 1  Id: c of type int [mem: Local loc: -4 size: 1] [line: 10]
.   .   .   Child: 1  Id: a of type int [line: 10]						   |	.   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: cc of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -14 size: 6] [line: 11]
.   .   .   .   .   Child: 0  Id: c of type int [line: 11]					   |	.   .   .   .   .   Child: 0  Id: c of type int [mem: Local loc: -4 size: 1] [line: 11]
.   .   .   .   .   Child: 1  Id: d of type int [line: 11]					   |	.   .   .   .   .   Child: 1  Id: d of type int [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   Child: 1  Id: a of type int [line: 11]						   |	.   .   .   Child: 1  Id: a of type int [mem: Local loc: -2 size: 1] [line: 11]
.   .   .   Child: 0  Id: cc of type int [line: 12]						   |	.   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -14 size: 6] [line: 12]
.   .   .   .   Child: 0  Id: dd of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: dd of array of type int [mem: Local loc: -20 size: 8] [line: 12]
.   .   .   .   Child: 0  Id: cc of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: cc of array of type int [mem: Local loc: -14 size: 6] [line: 13]
.   .   .   .   .   Child: 0  Id: ee of type int [line: 13]					   |	.   .   .   .   .   Child: 0  Id: ee of array of type int [mem: Local loc: -28 size: 12] [line: 
												   >	Offset for end of global space: 0
============================================================================================================
data/uninit.c-
============================================================================================================
data/uninitialized.c-
============================================================================================================
data/unused.c-
Var: g of type int [line: 1]									   |	Var: g of type int [mem: Global loc: 0 size: 1] [line: 1]
Sibling: 1  Var: ug of type int [line: 1]							   |	Sibling: 1  Var: ug of type int [mem: Global loc: -1 size: 1] [line: 1]
Sibling: 2  Func: dog returns type void [line: 2]						   |	Sibling: 2  Func: dog returns type void [mem: Global loc: 0 size: -3] [line: 2]
.   Child: 0  Parm: x of type int [line: 2]							   |	.   Child: 0  Parm: x of type int [mem: Parameter loc: -2 size: 1] [line: 2]
.   Child: 1  Compound [line: 2]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 2]
Sibling: 3  Func: udog returns type void [line: 3]						   |	Sibling: 3  Func: udog returns type void [mem: Global loc: 0 size: -2] [line: 3]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 3]
Sibling: 4  Func: main returns type void [line: 5]						   |	Sibling: 4  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 5]
.   Child: 1  Compound [line: 5]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -2] [line: 5]
.   .   .   Child: 0  Id: ug of type int [line: 6]						   |	.   .   .   Child: 0  Id: ug of type int [mem: Global loc: -1 size: 1] [line: 6]
												   >	Offset for end of global space: -2
============================================================================================================
data/varAssign.c-
Var: gx of type int [line: 2]									   |	Var: gx of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: gy is array of type int [line: 2]						   |	Sibling: 1  Var: gy of array of type int [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 2  Func: esperanza returns type void [line: 3]						   |	Sibling: 2  Func: esperanza returns type void [mem: Global loc: 0 size: -4] [line: 3]
.   Child: 0  Parm: px of type int [line: 3]							   |	.   Child: 0  Parm: px of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: py is array of type int [line: 3]						   |	.   Sibling: 1  Parm: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 4]
.   .   Child: 0  Var: x of type int [line: 5]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   Sibling: 1  Var: y is array of type int [line: 5]					   |	.   .   Sibling: 1  Var: y of array of type int [mem: Local loc: -6 size: 11] [line: 5]
.   .   Sibling: 2  Var: sx of type int [line: 6]						   |	.   .   Sibling: 2  Var: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 6]
.   .   Sibling: 3  Var: sy is array of type int [line: 6]					   |	.   .   Sibling: 3  Var: sy of static array of type int [mem: LocalStatic loc: -14 size: 11] [li
.   .   .   Child: 0  Id: gx of type int [line: 7]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 7]
.   .   .   Child: 0  Id: x of type int [line: 8]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 8]
.   .   .   Child: 0  Id: sx of type int [line: 9]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 9]
.   .   .   .   Child: 0  Id: gy of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   .   Child: 0  Id: gy of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 13]
.   .   .   Child: 0  Id: gx of type int [line: 14]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 14]
.   .   .   Child: 1  Id: gx of type int [line: 14]						   |	.   .   .   Child: 1  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 14]
.   .   .   Child: 0  Id: gx of type int [line: 15]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 15]
.   .   .   .   Child: 0  Id: gy of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 16]
.   .   .   .   Child: 0  Id: gy of type int [line: 16]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 16]
.   .   .   .   Child: 0  Id: gy of type int [line: 17]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 17]
.   .   .   .   Child: 0  Id: y of type int [line: 21]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 21]
.   .   .   .   Child: 0  Id: y of type int [line: 22]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 22]
.   .   .   Child: 0  Id: x of type int [line: 23]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 23]
.   .   .   Child: 1  Id: x of type int [line: 23]						   |	.   .   .   Child: 1  Id: x of type int [mem: Local loc: -4 size: 1] [line: 23]
.   .   .   Child: 0  Id: x of type int [line: 24]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 24]
.   .   .   .   Child: 0  Id: y of type int [line: 25]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 25]
.   .   .   .   Child: 0  Id: y of type int [line: 25]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 25]
.   .   .   .   Child: 0  Id: y of type int [line: 26]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 26]
.   .   .   Child: 0  Id: px of type int [line: 30]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 30]
.   .   .   Child: 1  Id: px of type int [line: 30]						   |	.   .   .   Child: 1  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 30]
.   .   .   Child: 0  Id: px of type int [line: 31]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 31]
.   .   .   Child: 0  Id: px of type int [line: 32]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 32]
.   .   .   .   Child: 0  Id: py of type int [line: 33]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 33
.   .   .   .   Child: 0  Id: py of type int [line: 33]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 33
.   .   .   .   Child: 0  Id: py of type int [line: 34]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 34
.   .   .   .   Child: 0  Id: py of type int [line: 35]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 35
.   .   .   .   Child: 0  Id: py of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 36
.   .   .   .   Child: 0  Id: py of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 36
.   .   .   .   Child: 0  Id: py of type int [line: 37]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 37
.   .   .   .   Child: 0  Id: sy of type int [line: 41]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 42]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   Child: 0  Id: sx of type int [line: 43]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 43]
.   .   .   Child: 1  Id: sx of type int [line: 43]						   |	.   .   .   Child: 1  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 43]
.   .   .   Child: 0  Id: sx of type int [line: 44]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 44]
.   .   .   .   Child: 0  Id: sy of type int [line: 45]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 45]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 46]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
Sibling: 3  Func: main returns type void [line: 51]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 51]
.   Child: 1  Compound [line: 52]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 52]
.   .   Child: 0  Var: zx of type int [line: 53]						   |	.   .   Child: 0  Var: zx of type int [mem: Local loc: -2 size: 1] [line: 53]
.   .   Sibling: 1  Var: zy is array of type int [line: 53]					   |	.   .   Sibling: 1  Var: zy of array of type int [mem: Local loc: -4 size: 11] [line: 53]
.   .   .   Child: 0  Id: zx of type int [line: 56]						   |	.   .   .   Child: 0  Id: zx of type int [mem: Local loc: -2 size: 1] [line: 56]
.   .   .   .   Child: 0  Id: zy of type int [line: 57]						   |	.   .   .   .   Child: 0  Id: zy of array of type int [mem: Local loc: -4 size: 11] [line: 57]
.   .   .   Child: 0  Id: zx of type int [line: 58]						   |	.   .   .   Child: 0  Id: zx of type int [mem: Local loc: -2 size: 1] [line: 58]
.   .   .   .   Child: 0  Id: zy of type int [line: 59]						   |	.   .   .   .   Child: 0  Id: zy of array of type int [mem: Local loc: -4 size: 11] [line: 59]
.   .   .   Child: 0  Id: zx of type int [line: 62]						   |	.   .   .   Child: 0  Id: zx of type int [mem: Local loc: -2 size: 1] [line: 62]
.   .   .   Sibling: 1  Id: zy of type int [line: 62]						   |	.   .   .   Sibling: 1  Id: zy of array of type int [mem: Local loc: -4 size: 11] [line: 62]
.   .   .   Child: 0  Id: zx of type int [line: 65]						   |	.   .   .   Child: 0  Id: zx of type int [mem: Local loc: -2 size: 1] [line: 65]
.   .   .   .   Child: 0  Id: zy of type int [line: 66]						   |	.   .   .   .   Child: 0  Id: zy of array of type int [mem: Local loc: -4 size: 11] [line: 66]
												   >	Offset for end of global space: -24
============================================================================================================
data/var.c-
============================================================================================================
data/varPair.c-
Var: gx of type int [line: 2]									   |	Var: gx of type int [mem: Global loc: 0 size: 1] [line: 2]
Sibling: 1  Var: gy is array of type int [line: 2]						   |	Sibling: 1  Var: gy of array of type int [mem: Global loc: -2 size: 11] [line: 2]
Sibling: 2  Func: fred returns type void [line: 3]						   |	Sibling: 2  Func: fred returns type void [mem: Global loc: 0 size: -4] [line: 3]
.   Child: 0  Parm: px of type int [line: 3]							   |	.   Child: 0  Parm: px of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: py is array of type int [line: 3]						   |	.   Sibling: 1  Parm: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -16] [line: 4]
.   .   Child: 0  Var: x of type int [line: 5]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   Sibling: 1  Var: y is array of type int [line: 5]					   |	.   .   Sibling: 1  Var: y of array of type int [mem: Local loc: -6 size: 11] [line: 5]
.   .   Sibling: 2  Var: sx of type int [line: 6]						   |	.   .   Sibling: 2  Var: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 6]
.   .   Sibling: 3  Var: sy is array of type int [line: 6]					   |	.   .   Sibling: 3  Var: sy of static array of type int [mem: LocalStatic loc: -14 size: 11] [li
.   .   .   Child: 0  Id: gx of type int [line: 8]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 8]
.   .   .   Child: 0  Id: gx of type int [line: 9]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 9]
.   .   .   Child: 1  Id: gx of type int [line: 9]						   |	.   .   .   Child: 1  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 9]
.   .   .   Child: 0  Id: gx of type int [line: 10]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 10]
.   .   .   .   Child: 0  Id: gy of type int [line: 11]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 11]
.   .   .   .   Child: 0  Id: gy of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   .   Child: 0  Id: gy of type int [line: 12]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 12]
.   .   .   .   Child: 0  Id: gy of type int [line: 13]						   |	.   .   .   .   Child: 0  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 13]
.   .   .   Child: 0  Id: x of type int [line: 16]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 16]
.   .   .   Child: 0  Id: x of type int [line: 17]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 17]
.   .   .   Child: 1  Id: x of type int [line: 17]						   |	.   .   .   Child: 1  Id: x of type int [mem: Local loc: -4 size: 1] [line: 17]
.   .   .   Child: 0  Id: x of type int [line: 18]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -4 size: 1] [line: 18]
.   .   .   .   Child: 0  Id: y of type int [line: 19]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 19]
.   .   .   .   Child: 0  Id: y of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 20]
.   .   .   .   Child: 0  Id: y of type int [line: 20]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 20]
.   .   .   .   Child: 0  Id: y of type int [line: 21]						   |	.   .   .   .   Child: 0  Id: y of array of type int [mem: Local loc: -6 size: 11] [line: 21]
.   .   .   Child: 0  Id: px of type int [line: 24]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 24]
.   .   .   Child: 0  Id: px of type int [line: 25]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 25]
.   .   .   Child: 1  Id: px of type int [line: 25]						   |	.   .   .   Child: 1  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 25]
.   .   .   Child: 0  Id: px of type int [line: 26]						   |	.   .   .   Child: 0  Id: px of type int [mem: Parameter loc: -2 size: 1] [line: 26]
.   .   .   .   Child: 0  Id: py of type int [line: 27]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 27
.   .   .   .   Child: 0  Id: py of type int [line: 28]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 28
.   .   .   .   Child: 0  Id: py of type int [line: 28]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 28
.   .   .   .   Child: 0  Id: py of type int [line: 29]						   |	.   .   .   .   Child: 0  Id: py of array of type int [mem: Parameter loc: -3 size: 1] [line: 29
.   .   .   Child: 0  Id: sx of type int [line: 32]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 32]
.   .   .   Child: 0  Id: sx of type int [line: 33]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 33]
.   .   .   Child: 1  Id: sx of type int [line: 33]						   |	.   .   .   Child: 1  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 33]
.   .   .   Child: 0  Id: sx of type int [line: 34]						   |	.   .   .   Child: 0  Id: sx of static type int [mem: LocalStatic loc: -12 size: 1] [line: 34]
.   .   .   .   Child: 0  Id: sy of type int [line: 35]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 36]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
.   .   .   .   Child: 0  Id: sy of type int [line: 37]						   |	.   .   .   .   Child: 0  Id: sy of static array of type int [mem: LocalStatic loc: -14 size: 11
Sibling: 3  Func: main returns type void [line: 41]						   |	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 41]
.   Child: 1  Compound [line: 41]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 41]
.   .   Child: 0  Var: lx of type int [line: 42]						   |	.   .   Child: 0  Var: lx of type int [mem: Local loc: -2 size: 1] [line: 42]
.   .   Sibling: 1  Var: ly is array of type int [line: 42]					   |	.   .   Sibling: 1  Var: ly of array of type int [mem: Local loc: -4 size: 11] [line: 42]
.   .   .   Child: 0  Id: lx of type int [line: 44]						   |	.   .   .   Child: 0  Id: lx of type int [mem: Local loc: -2 size: 1] [line: 44]
.   .   .   .   .   Child: 0  Id: ly of type int [line: 44]					   |	.   .   .   .   .   Child: 0  Id: ly of array of type int [mem: Local loc: -4 size: 11] [line: 4
.   .   .   Child: 0  Id: gx of type int [line: 45]						   |	.   .   .   Child: 0  Id: gx of type int [mem: Global loc: 0 size: 1] [line: 45]
.   .   .   Sibling: 1  Id: gy of type int [line: 45]						   |	.   .   .   Sibling: 1  Id: gy of array of type int [mem: Global loc: -2 size: 11] [line: 45]
.   .   .   Child: 0  Id: lx of type int [line: 46]						   |	.   .   .   Child: 0  Id: lx of type int [mem: Local loc: -2 size: 1] [line: 46]
.   .   .   Sibling: 1  Id: ly of type int [line: 46]						   |	.   .   .   Sibling: 1  Id: ly of array of type int [mem: Local loc: -4 size: 11] [line: 46]
												   >	Offset for end of global space: -24
============================================================================================================
data/vars.c-
												   >	WARNING(4): The variable 'i' seems not to be used.
												   >	WARNING(4): The parameter 'pb' seems not to be used.
												   >	WARNING(4): The parameter 'pc' seems not to be used.
												   >	WARNING(8): The variable 'a' seems not to be used.
												   >	WARNING(9): The variable 'ca' seems not to be used.
												   >	WARNING(10): The variable 'sa' seems not to be used.
												   >	WARNING(11): The variable 'sca' seems not to be used.
												   >	WARNING(4): The function 'dog' seems not to be used.
												   >	WARNING(1): The variable 'ga' seems not to be used.
												   >	WARNING(2): The variable 'gca' seems not to be used.
												   >	Var: ga of type int [mem: Global loc: 0 size: 1] [line: 1]
												   >	Sibling: 1  Var: gca of array of type char [mem: Global loc: -42 size: 11] [line: 2]
												   >	.   Child: 0  Const "cry havoc and let slip the dogs of war." of array of type char [mem: Global
												   >	Sibling: 2  Func: dog returns type void [mem: Global loc: 0 size: -5] [line: 4]
												   >	.   Child: 0  Parm: pa of type int [mem: Parameter loc: -2 size: 1] [line: 4]
												   >	.   Sibling: 1  Parm: pb of type bool [mem: Parameter loc: -3 size: 1] [line: 4]
												   >	.   Sibling: 2  Parm: pc of array of type char [mem: Parameter loc: -4 size: 1] [line: 4]
												   >	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 4]
												   >	.   .   Child: 1  For [mem: None loc: 0 size: -6] [line: 4]
												   >	.   .   .   Child: 0  Var: i of type int [mem: Local loc: -5 size: 1] [line: 4]
												   >	.   .   .   Child: 1  Range [line: 4]
												   >	.   .   .   .   Child: 0  Const 1 of type int [line: 4]
												   >	.   .   .   .   Child: 1  Id: pa of type int [mem: Parameter loc: -2 size: 1] [line: 4]
												   >	Sibling: 3  Func: main returns type void [mem: Global loc: 0 size: -2] [line: 6]
												   >	.   Child: 1  Compound [mem: None loc: 0 size: -14] [line: 7]
												   >	.   .   Child: 0  Var: a of type int [mem: Local loc: -2 size: 1] [line: 8]
												   >	.   .   Sibling: 1  Var: ca of array of type char [mem: Local loc: -4 size: 11] [line: 9]
												   >	.   .   .   Child: 0  Const "retrogressive" of array of type char [mem: Global loc: -53 size: 14
												   >	.   .   Sibling: 2  Var: sa of static type int [mem: LocalStatic loc: -66 size: 1] [line: 10]
												   >	.   .   Sibling: 3  Var: sca of static array of type char [mem: LocalStatic loc: -81 size: 21] [
												   >	.   .   .   Child: 0  Const "epistolatory" of array of type char [mem: Global loc: -68 size: 13]
												   >	Offset for end of global space: -101
												   >	Number of warnings: 10
												   >	Number of errors: 0
============================================================================================================
data/walsh.c-
Func: pow returns type int [line: 3]								   |	Func: pow returns type int [mem: Global loc: 0 size: -4] [line: 3]
.   Child: 0  Parm: n of type int [line: 3]							   |	.   Child: 0  Parm: n of type int [mem: Parameter loc: -2 size: 1] [line: 3]
.   Sibling: 1  Parm: p of type int [line: 3]							   |	.   Sibling: 1  Parm: p of type int [mem: Parameter loc: -3 size: 1] [line: 3]
.   Child: 1  Compound [line: 4]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 4]
.   .   Child: 0  Var: sqr of type int [line: 5]						   |	.   .   Child: 0  Var: sqr of type int [mem: Local loc: -4 size: 1] [line: 5]
.   .   Sibling: 1  Var: ans of type int [line: 6]						   |	.   .   Sibling: 1  Var: ans of type int [mem: Local loc: -5 size: 1] [line: 6]
.   .   .   Child: 0  Id: ans of type int [line: 8]						   |	.   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 8]
.   .   .   Child: 0  Id: sqr of type int [line: 9]						   |	.   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 9]
.   .   .   Child: 1  Id: n of type int [line: 9]						   |	.   .   .   Child: 1  Id: n of type int [mem: Parameter loc: -2 size: 1] [line: 9]
.   .   .   Child: 1  Compound [line: 10]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 10]
.   .   .   .   .   .   .   Child: 0  Id: p of type int [line: 11]				   |	.   .   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   .   .   Child: 0  Id: ans of type int [line: 11]				   |	.   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 11]
.   .   .   .   .   .   .   Child: 0  Id: ans of type int [line: 11]				   |	.   .   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 11
.   .   .   .   .   .   .   Child: 1  Id: sqr of type int [line: 11]				   |	.   .   .   .   .   .   .   Child: 1  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 11
.   .   .   .   .   Child: 0  Id: p of type int [line: 12]					   |	.   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 0  Id: p of type int [line: 12]					   |	.   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 12]
.   .   .   .   .   .   Child: 0  Id: p of type int [line: 13]					   |	.   .   .   .   .   .   Child: 0  Id: p of type int [mem: Parameter loc: -3 size: 1] [line: 13]
.   .   .   .   .   .   Child: 0  Id: ans of type int [line: 13]				   |	.   .   .   .   .   .   Child: 0  Id: ans of type int [mem: Local loc: -5 size: 1] [line: 13]
.   .   .   .   .   Child: 0  Id: sqr of type int [line: 14]					   |	.   .   .   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   .   Child: 0  Id: sqr of type int [line: 14]				   |	.   .   .   .   .   .   Child: 0  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 14]
.   .   .   .   .   .   Child: 1  Id: sqr of type int [line: 14]				   |	.   .   .   .   .   .   Child: 1  Id: sqr of type int [mem: Local loc: -4 size: 1] [line: 14]
Sibling: 1  Func: getFunc returns type int [line: 18]						   |	Sibling: 1  Func: getFunc returns type int [mem: Global loc: 0 size: -3] [line: 18]
.   Child: 0  Parm: f is array of type int [line: 18]						   |	.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 18]
.   Child: 1  Compound [line: 19]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 19]
.   .   Child: 0  Var: numbits of type int [line: 20]						   |	.   .   Child: 0  Var: numbits of type int [mem: Local loc: -3 size: 1] [line: 20]
.   .   Sibling: 1  Var: i of type int [line: 21]						   |	.   .   Sibling: 1  Var: i of type int [mem: Local loc: -4 size: 1] [line: 21]
.   .   Sibling: 2  Var: size of type int [line: 22]						   |	.   .   Sibling: 2  Var: size of type int [mem: Local loc: -5 size: 1] [line: 22]
.   .   .   Child: 0  Id: numbits of type int [line: 24]					   |	.   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 24]
.   .   .   .   Child: 0  Id: numbits of type int [line: 25]					   |	.   .   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 25]
.   .   .   Child: 0  Id: size of type int [line: 26]						   |	.   .   .   Child: 0  Id: size of type int [mem: Local loc: -5 size: 1] [line: 26]
.   .   .   .   Sibling: 1  Id: numbits of type int [line: 26]					   |	.   .   .   .   Sibling: 1  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 26]
.   .   .   Child: 0  Id: i of type int [line: 27]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 27]
.   .   .   .   Child: 0  Id: i of type int [line: 28]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 28]
.   .   .   .   Child: 1  Id: size of type int [line: 28]					   |	.   .   .   .   Child: 1  Id: size of type int [mem: Local loc: -5 size: 1] [line: 28]
.   .   .   Child: 1  Compound [line: 28]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -6] [line: 28]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 29]					   |	.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 29]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 29]
.   .   .   .   .   Child: 0  Id: i of type int [line: 30]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 30]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 30]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 30]
.   .   .   Child: 0  Id: numbits of type int [line: 33]					   |	.   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -3 size: 1] [line: 33]
Sibling: 2  Func: printFunc returns type void [line: 36]					   |	Sibling: 2  Func: printFunc returns type void [mem: Global loc: 0 size: -4] [line: 36]
.   Child: 0  Parm: f is array of type int [line: 36]						   |	.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 36]
.   Sibling: 1  Parm: size of type int [line: 36]						   |	.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 36]
.   Child: 1  Compound [line: 37]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 37]
.   .   Child: 0  Var: i of type int [line: 38]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 38]
.   .   .   Child: 0  Id: i of type int [line: 40]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 40]
.   .   .   .   Child: 0  Id: i of type int [line: 41]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 41]
.   .   .   .   Child: 1  Id: size of type int [line: 41]					   |	.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 41]
.   .   .   Child: 1  Compound [line: 41]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 41]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 42]					   |	.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 42]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 42]
.   .   .   .   .   Child: 0  Id: i of type int [line: 43]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 43]
.   .   .   .   .   .   Child: 0  Id: i of type int [line: 43]					   |	.   .   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 43]
Sibling: 3  Func: fwt returns type void [line: 49]						   |	Sibling: 3  Func: fwt returns type void [mem: Global loc: 0 size: -5] [line: 49]
.   Child: 0  Parm: w is array of type int [line: 49]						   |	.   Child: 0  Parm: w of array of type int [mem: Parameter loc: -2 size: 1] [line: 49]
.   Sibling: 1  Parm: start of type int [line: 49]						   |	.   Sibling: 1  Parm: start of type int [mem: Parameter loc: -3 size: 1] [line: 49]
.   Sibling: 2  Parm: size of type int [line: 49]						   |	.   Sibling: 2  Parm: size of type int [mem: Parameter loc: -4 size: 1] [line: 49]
.   Child: 1  Compound [line: 50]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 50]
.   .   Child: 0  Var: a of type int [line: 51]							   |	.   .   Child: 0  Var: a of type int [mem: Local loc: -5 size: 1] [line: 51]
.   .   Sibling: 1  Var: b of type int [line: 51]						   |	.   .   Sibling: 1  Var: b of type int [mem: Local loc: -6 size: 1] [line: 51]
.   .   Sibling: 2  Var: tmp of type int [line: 51]						   |	.   .   Sibling: 2  Var: tmp of type int [mem: Local loc: -7 size: 1] [line: 51]
.   .   .   Child: 0  Id: size of type int [line: 53]						   |	.   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 53]
.   .   .   .   Child: 0  Id: size of type int [line: 53]					   |	.   .   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 53]
.   .   .   .   Child: 0  Id: size of type int [line: 54]					   |	.   .   .   .   Child: 0  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 54]
.   .   .   Child: 1  Compound [line: 54]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 54]
.   .   .   .   .   Child: 0  Id: w of type int [line: 55]					   |	.   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line:
.   .   .   .   .   Sibling: 1  Id: start of type int [line: 55]				   |	.   .   .   .   .   Sibling: 1  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 55
.   .   .   .   .   Sibling: 2  Id: size of type int [line: 55]					   |	.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 55]
.   .   .   .   .   Child: 0  Id: w of type int [line: 56]					   |	.   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [line:
.   .   .   .   .   .   Child: 0  Id: start of type int [line: 56]				   |	.   .   .   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 
.   .   .   .   .   .   Child: 1  Id: size of type int [line: 56]				   |	.   .   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 5
.   .   .   .   .   Sibling: 2  Id: size of type int [line: 56]					   |	.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 56]
.   .   .   Child: 0  Id: a of type int [line: 59]						   |	.   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 59]
.   .   .   Child: 1  Id: start of type int [line: 59]						   |	.   .   .   Child: 1  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 59]
.   .   .   Child: 0  Id: b of type int [line: 60]						   |	.   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 60]
.   .   .   .   Child: 0  Id: start of type int [line: 60]					   |	.   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 60]
.   .   .   .   Child: 1  Id: size of type int [line: 60]					   |	.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 60]
.   .   .   .   Child: 0  Id: a of type int [line: 61]						   |	.   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 61]
.   .   .   .   .   Child: 0  Id: start of type int [line: 61]					   |	.   .   .   .   .   Child: 0  Id: start of type int [mem: Parameter loc: -3 size: 1] [line: 61]
.   .   .   .   .   Child: 1  Id: size of type int [line: 61]					   |	.   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -4 size: 1] [line: 61]
.   .   .   Child: 1  Compound [line: 61]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -8] [line: 61]
.   .   .   .   .   Child: 0  Id: tmp of type int [line: 62]					   |	.   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 62]
.   .   .   .   .   .   Child: 0  Id: w of type int [line: 62]					   |	.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: a of type int [line: 62]					   |	.   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 62]
.   .   .   .   .   .   Child: 0  Id: w of type int [line: 63]					   |	.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: a of type int [line: 63]					   |	.   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]
.   .   .   .   .   .   .   Child: 0  Id: w of type int [line: 63]				   |	.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1
.   .   .   .   .   .   .   Child: 1  Id: a of type int [line: 63]				   |	.   .   .   .   .   .   .   Child: 1  Id: a of type int [mem: Local loc: -5 size: 1] [line: 63]
.   .   .   .   .   .   .   Child: 0  Id: w of type int [line: 63]				   |	.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1
.   .   .   .   .   .   .   Child: 1  Id: b of type int [line: 63]				   |	.   .   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 63]
.   .   .   .   .   .   Child: 0  Id: w of type int [line: 64]					   |	.   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: b of type int [line: 64]					   |	.   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]
.   .   .   .   .   .   Child: 0  Id: tmp of type int [line: 64]				   |	.   .   .   .   .   .   Child: 0  Id: tmp of type int [mem: Local loc: -7 size: 1] [line: 64]
.   .   .   .   .   .   .   Child: 0  Id: w of type int [line: 64]				   |	.   .   .   .   .   .   .   Child: 0  Id: w of array of type int [mem: Parameter loc: -2 size: 1
.   .   .   .   .   .   .   Child: 1  Id: b of type int [line: 64]				   |	.   .   .   .   .   .   .   Child: 1  Id: b of type int [mem: Local loc: -6 size: 1] [line: 64]
.   .   .   .   .   Child: 0  Id: a of type int [line: 65]					   |	.   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 65]
.   .   .   .   .   .   Child: 0  Id: a of type int [line: 65]					   |	.   .   .   .   .   .   Child: 0  Id: a of type int [mem: Local loc: -5 size: 1] [line: 65]
.   .   .   .   .   Child: 0  Id: b of type int [line: 66]					   |	.   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 66]
.   .   .   .   .   .   Child: 0  Id: b of type int [line: 66]					   |	.   .   .   .   .   .   Child: 0  Id: b of type int [mem: Local loc: -6 size: 1] [line: 66]
Sibling: 4  Func: div returns type void [line: 70]						   |	Sibling: 4  Func: div returns type void [mem: Global loc: 0 size: -4] [line: 70]
.   Child: 0  Parm: f is array of type int [line: 70]						   |	.   Child: 0  Parm: f of array of type int [mem: Parameter loc: -2 size: 1] [line: 70]
.   Sibling: 1  Parm: size of type int [line: 70]						   |	.   Sibling: 1  Parm: size of type int [mem: Parameter loc: -3 size: 1] [line: 70]
.   Child: 1  Compound [line: 71]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 71]
.   .   Child: 0  Var: i of type int [line: 72]							   |	.   .   Child: 0  Var: i of type int [mem: Local loc: -4 size: 1] [line: 72]
.   .   .   Child: 0  Id: i of type int [line: 74]						   |	.   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 74]
.   .   .   .   Child: 0  Id: i of type int [line: 75]						   |	.   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 75]
.   .   .   .   Child: 1  Id: size of type int [line: 75]					   |	.   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 75]
.   .   .   Child: 1  Compound [line: 75]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -5] [line: 75]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 76]					   |	.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1] [l
.   .   .   .   .   .   Child: 1  Id: i of type int [line: 76]					   |	.   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 76]
.   .   .   .   .   .   .   Child: 0  Id: f of type int [line: 76]				   |	.   .   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Parameter loc: -2 size: 1
.   .   .   .   .   .   .   Child: 1  Id: i of type int [line: 76]				   |	.   .   .   .   .   .   .   Child: 1  Id: i of type int [mem: Local loc: -4 size: 1] [line: 76]
.   .   .   .   .   .   Child: 1  Id: size of type int [line: 76]				   |	.   .   .   .   .   .   Child: 1  Id: size of type int [mem: Parameter loc: -3 size: 1] [line: 7
.   .   .   .   .   Child: 0  Id: i of type int [line: 77]					   |	.   .   .   .   .   Child: 0  Id: i of type int [mem: Local loc: -4 size: 1] [line: 77]
Sibling: 5  Func: main returns type int [line: 81]						   |	Sibling: 5  Func: main returns type int [mem: Global loc: 0 size: -2] [line: 81]
.   Child: 1  Compound [line: 82]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -262] [line: 82]
.   .   Child: 0  Var: f is array of type int [line: 83]					   |	.   .   Child: 0  Var: f of array of type int [mem: Local loc: -3 size: 257] [line: 83]
.   .   Sibling: 1  Var: size of type int [line: 85]						   |	.   .   Sibling: 1  Var: size of type int [mem: Local loc: -259 size: 1] [line: 85]
.   .   Sibling: 2  Var: numbits of type int [line: 86]						   |	.   .   Sibling: 2  Var: numbits of type int [mem: Local loc: -260 size: 1] [line: 86]
.   .   Sibling: 3  Var: half of type int [line: 87]						   |	.   .   Sibling: 3  Var: half of type int [mem: Local loc: -261 size: 1] [line: 87]
.   .   .   Child: 1  Compound [line: 89]							   |	.   .   .   Child: 1  Compound [mem: None loc: 0 size: -262] [line: 89]
.   .   .   .   .   Child: 0  Id: numbits of type int [line: 90]				   |	.   .   .   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -260 size: 1] [line: 90]
.   .   .   .   .   .   Child: 0  Id: f of type int [line: 90]					   |	.   .   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [lin
.   .   .   .   .   .   Child: 0  Id: numbits of type int [line: 91]				   |	.   .   .   .   .   .   Child: 0  Id: numbits of type int [mem: Local loc: -260 size: 1] [line: 
.   .   .   .   .   Child: 0  Id: size of type int [line: 92]					   |	.   .   .   .   .   Child: 0  Id: size of type int [mem: Local loc: -259 size: 1] [line: 92]
.   .   .   .   .   .   Sibling: 1  Id: numbits of type int [line: 92]				   |	.   .   .   .   .   .   Sibling: 1  Id: numbits of type int [mem: Local loc: -260 size: 1] [line
.   .   .   .   .   Child: 0  Id: half of type int [line: 93]					   |	.   .   .   .   .   Child: 0  Id: half of type int [mem: Local loc: -261 size: 1] [line: 93]
.   .   .   .   .   .   Child: 0  Id: size of type int [line: 93]				   |	.   .   .   .   .   .   Child: 0  Id: size of type int [mem: Local loc: -259 size: 1] [line: 93]
.   .   .   .   .   Child: 0  Id: f of type int [line: 95]					   |	.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 9
.   .   .   .   .   Sibling: 2  Id: size of type int [line: 95]					   |	.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Local loc: -259 size: 1] [line: 95]
.   .   .   .   .   Child: 0  Id: f of type int [line: 96]					   |	.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 9
.   .   .   .   .   Sibling: 1  Id: size of type int [line: 96]					   |	.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 96]
.   .   .   .   .   Child: 0  Id: f of type int [line: 98]					   |	.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 9
.   .   .   .   .   Sibling: 2  Id: size of type int [line: 98]					   |	.   .   .   .   .   Sibling: 2  Id: size of type int [mem: Local loc: -259 size: 1] [line: 98]
.   .   .   .   .   Child: 0  Id: f of type int [line: 99]					   |	.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 9
.   .   .   .   .   Sibling: 1  Id: size of type int [line: 99]					   |	.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 99]
.   .   .   .   .   Child: 0  Id: f of type int [line: 100]					   |	.   .   .   .   .   Child: 0  Id: f of array of type int [mem: Local loc: -3 size: 257] [line: 1
.   .   .   .   .   Sibling: 1  Id: size of type int [line: 100]				   |	.   .   .   .   .   Sibling: 1  Id: size of type int [mem: Local loc: -259 size: 1] [line: 100]
												   >	Offset for end of global space: 0
============================================================================================================
data/while.c-
Func: main returns type void [line: 2]								   |	Func: main returns type void [mem: Global loc: 0 size: -2] [line: 2]
.   Child: 1  Compound [line: 3]								   |	.   Child: 1  Compound [mem: None loc: 0 size: -3] [line: 3]
.   .   Child: 0  Var: x of type int [line: 4]							   |	.   .   Child: 0  Var: x of type int [mem: Local loc: -2 size: 1] [line: 4]
.   .   .   Child: 0  Id: x of type int [line: 5]						   |	.   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 5]
.   .   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
.   .   .   .   Child: 0  Id: x of type int [line: 7]						   |	.   .   .   .   Child: 0  Id: x of type int [mem: Local loc: -2 size: 1] [line: 7]
												   >	Offset for end of global space: 0
============================================================================================================
data/whileif.c-
============================================================================================================
2790 / 10113 lines differed in total.
