Func: ant returns type void [line: 5]
.   Child: 0  Parm: x of type int [line: 5]
.   Sibling: 1  Parm: x of type int [line: 5]
.   Child: 1  Compound [line: 5]
.   .   Child: 0  Var: x of type int [line: 6]
.   .   Child: 1  Assign: = [line: 7]
.   .   .   Child: 0  Id: x [line: 7]
.   .   .   Child: 1  Const 1 [line: 7]
Sibling: 1  Func: bat returns type void [line: 10]
.   Child: 0  Parm: x of type int [line: 10]
.   Child: 1  Compound [line: 10]
.   .   Child: 1  Compound [line: 10]
.   .   .   Child: 0  Var: x of type int [line: 11]
.   .   .   Child: 1  Assign: = [line: 12]
.   .   .   .   Child: 0  Id: x [line: 12]
.   .   .   .   Child: 1  Const 2 [line: 12]
Sibling: 2  Func: cat returns type void [line: 15]
.   Child: 0  Parm: x of type int [line: 15]
.   Child: 1  Compound [line: 15]
.   .   Child: 0  Var: x of type int [line: 16]
.   .   Child: 1  Compound [line: 17]
.   .   .   Child: 0  Var: x of type int [line: 18]
.   .   .   Child: 1  Assign: = [line: 19]
.   .   .   .   Child: 0  Id: x [line: 19]
.   .   .   .   Child: 1  Const 3 [line: 19]
Sibling: 3  Func: dog returns type void [line: 22]
.   Child: 0  Parm: x of type int [line: 22]
.   Child: 1  Compound [line: 22]
.   .   Child: 1  If [line: 23]
.   .   .   Child: 0  Op: > [line: 23]
.   .   .   .   Child: 0  Id: x [line: 23]
.   .   .   .   Child: 1  Const 3 [line: 23]
.   .   .   Child: 1  Compound [line: 23]
.   .   .   .   Child: 0  Var: x of type int [line: 24]
.   .   .   .   Child: 1  Assign: = [line: 25]
.   .   .   .   .   Child: 0  Id: x [line: 25]
.   .   .   .   .   Child: 1  Const 4 [line: 25]
Sibling: 4  Func: elk returns type void [line: 28]
.   Child: 0  Parm: x of type int [line: 28]
.   Child: 1  Compound [line: 28]
.   .   Child: 0  Var: x of type int [line: 29]
.   .   Child: 1  If [line: 30]
.   .   .   Child: 0  Op: > [line: 30]
.   .   .   .   Child: 0  Id: x [line: 30]
.   .   .   .   Child: 1  Const 3 [line: 30]
.   .   .   Child: 1  Compound [line: 30]
.   .   .   .   Child: 0  Var: x of type int [line: 31]
.   .   .   .   Child: 1  Assign: = [line: 31]
.   .   .   .   .   Child: 0  Id: x [line: 31]
.   .   .   .   .   Child: 1  Const 5 [line: 31]
Sibling: 5  Func: fox returns type void [line: 35]
.   Child: 0  Parm: x of type int [line: 35]
.   Child: 1  Compound [line: 35]
.   .   Child: 1  While [line: 36]
.   .   .   Child: 0  Const true [line: 36]
.   .   .   Child: 1  If [line: 37]
.   .   .   .   Child: 0  Op: > [line: 37]
.   .   .   .   .   Child: 0  Id: x [line: 37]
.   .   .   .   .   Child: 1  Const 3 [line: 37]
.   .   .   .   Child: 1  Compound [line: 37]
.   .   .   .   .   Child: 0  Var: x of type int [line: 38]
.   .   .   .   .   Child: 1  Assign: = [line: 38]
.   .   .   .   .   .   Child: 0  Id: x [line: 38]
.   .   .   .   .   .   Child: 1  Const 6 [line: 38]
.   .   .   .   Child: 2  Compound [line: 40]
.   .   .   .   .   Child: 0  Var: x of type int [line: 41]
.   .   .   .   .   Child: 1  Assign: = [line: 41]
.   .   .   .   .   .   Child: 0  Id: x [line: 41]
.   .   .   .   .   .   Child: 1  Const 7 [line: 41]
Sibling: 6  Func: gnu returns type void [line: 45]
.   Child: 0  Parm: x of type int [line: 45]
.   Child: 1  Compound [line: 45]
.   .   Child: 1  While [line: 46]
.   .   .   Child: 0  Const true [line: 46]
.   .   .   Child: 1  If [line: 47]
.   .   .   .   Child: 0  Op: > [line: 47]
.   .   .   .   .   Child: 0  Id: x [line: 47]
.   .   .   .   .   Child: 1  Const 3 [line: 47]
.   .   .   .   Child: 1  Const 666 [line: 47]
.   .   .   .   Child: 2  Compound [line: 48]
.   .   .   .   .   Child: 0  Var: x of type int [line: 49]
.   .   .   .   .   Child: 1  Assign: = [line: 49]
.   .   .   .   .   .   Child: 0  Id: x [line: 49]
.   .   .   .   .   .   Child: 1  Const 7 [line: 49]
ERROR(5): Symbol 'x' is already declared at line 5.
ERROR(6): Symbol 'x' is already declared at line 5.
WARNING(10): The variable 'x' seems not to be used.
ERROR(16): Symbol 'x' is already declared at line 15.
WARNING(15): The variable 'x' seems not to be used.
ERROR(29): Symbol 'x' is already declared at line 28.
ERROR(LINKER): A function named 'main()' must be defined.
Number of warnings: 2
Number of errors: 5
