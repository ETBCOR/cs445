Func: main returns type void [line: 2]
.   Child: 1  Compound [line: 3]
.   .   Child: 0  Var: a of type int [line: 4]
.   .   Sibling: 1  Var: aa is array of type int [line: 4]
.   .   Sibling: 2  Var: b of type bool [line: 5]
.   .   Sibling: 3  Var: bb is array of type bool [line: 5]
.   .   Sibling: 4  Var: c of type char [line: 6]
.   .   Sibling: 5  Var: cc is array of type char [line: 6]
.   .   Child: 1  Assign: = [line: 8]
.   .   .   Child: 0  Id: a [line: 8]
.   .   .   Child: 1  Const 42 [line: 8]
.   .   Sibling: 1  Assign: = [line: 9]
.   .   .   Child: 0  Id: b [line: 9]
.   .   .   Child: 1  Assign: = [line: 9]
.   .   .   .   Child: 0  Op: [ [line: 9]
.   .   .   .   .   Child: 0  Id: bb [line: 9]
.   .   .   .   .   Child: 1  Const 2 [line: 9]
.   .   .   .   Child: 1  Const true [line: 9]
.   .   Sibling: 2  Assign: = [line: 10]
.   .   .   Child: 0  Op: [ [line: 10]
.   .   .   .   Child: 0  Id: aa [line: 10]
.   .   .   .   Child: 1  Const 1 [line: 10]
.   .   .   Child: 1  Const 666 [line: 10]
.   .   Sibling: 3  Assign: = [line: 12]
.   .   .   Child: 0  Id: a [line: 12]
.   .   .   Child: 1  Id: a [line: 12]
.   .   Sibling: 4  Assign: = [line: 13]
.   .   .   Child: 0  Id: a [line: 13]
.   .   .   Child: 1  Id: aa [line: 13]
.   .   Sibling: 5  Assign: = [line: 14]
.   .   .   Child: 0  Id: aa [line: 14]
.   .   .   Child: 1  Id: a [line: 14]
.   .   Sibling: 6  Assign: = [line: 15]
.   .   .   Child: 0  Id: aa [line: 15]
.   .   .   Child: 1  Id: aa [line: 15]
.   .   Sibling: 7  Op: chsign [line: 17]
.   .   .   Child: 0  Id: a [line: 17]
.   .   Sibling: 8  Op: chsign [line: 18]
.   .   .   Child: 0  Id: aa [line: 18]
.   .   Sibling: 9  Op: chsign [line: 19]
.   .   .   Child: 0  Op: chsign [line: 19]
.   .   .   .   Child: 0  Id: aa [line: 19]
.   .   Sibling: 10  Op: [ [line: 21]
.   .   .   Child: 0  Id: a [line: 21]
.   .   .   Child: 1  Id: a [line: 21]
.   .   Sibling: 11  Op: [ [line: 22]
.   .   .   Child: 0  Id: a [line: 22]
.   .   .   Child: 1  Id: aa [line: 22]
.   .   Sibling: 12  Op: [ [line: 23]
.   .   .   Child: 0  Id: aa [line: 23]
.   .   .   Child: 1  Id: a [line: 23]
.   .   Sibling: 13  Op: [ [line: 24]
.   .   .   Child: 0  Id: aa [line: 24]
.   .   .   Child: 1  Id: aa [line: 24]
.   .   Sibling: 14  Op: sizeof [line: 26]
.   .   .   Child: 0  Id: a [line: 26]
.   .   Sibling: 15  Op: sizeof [line: 27]
.   .   .   Child: 0  Id: aa [line: 27]
.   .   Sibling: 16  Op: ? [line: 28]
.   .   .   Child: 0  Id: a [line: 28]
.   .   Sibling: 17  Op: ? [line: 29]
.   .   .   Child: 0  Id: aa [line: 29]
.   .   Sibling: 18  Op: not [line: 30]
.   .   .   Child: 0  Id: b [line: 30]
.   .   Sibling: 19  Op: not [line: 31]
.   .   .   Child: 0  Id: bb [line: 31]
.   .   Sibling: 20  Assign: ++ [line: 32]
.   .   .   Child: 0  Id: a [line: 32]
.   .   Sibling: 21  Assign: ++ [line: 33]
.   .   .   Child: 0  Id: aa [line: 33]
.   .   Sibling: 22  Op: + [line: 35]
.   .   .   Child: 0  Id: a [line: 35]
.   .   .   Child: 1  Id: a [line: 35]
.   .   Sibling: 23  Op: + [line: 36]
.   .   .   Child: 0  Id: a [line: 36]
.   .   .   Child: 1  Id: aa [line: 36]
.   .   Sibling: 24  Op: + [line: 37]
.   .   .   Child: 0  Id: aa [line: 37]
.   .   .   Child: 1  Id: a [line: 37]
.   .   Sibling: 25  Op: + [line: 38]
.   .   .   Child: 0  Id: aa [line: 38]
.   .   .   Child: 1  Id: aa [line: 38]
.   .   Sibling: 26  Op: and [line: 40]
.   .   .   Child: 0  Id: b [line: 40]
.   .   .   Child: 1  Id: b [line: 40]
.   .   Sibling: 27  Op: and [line: 41]
.   .   .   Child: 0  Id: b [line: 41]
.   .   .   Child: 1  Id: bb [line: 41]
.   .   Sibling: 28  Op: and [line: 42]
.   .   .   Child: 0  Id: bb [line: 42]
.   .   .   Child: 1  Id: b [line: 42]
.   .   Sibling: 29  Op: and [line: 43]
.   .   .   Child: 0  Id: bb [line: 43]
.   .   .   Child: 1  Id: bb [line: 43]
.   .   Sibling: 30  Assign: = [line: 45]
.   .   .   Child: 0  Id: c [line: 45]
.   .   .   Child: 1  Op: [ [line: 45]
.   .   .   .   Child: 0  Id: c [line: 45]
.   .   .   .   Child: 1  Const 3 [line: 45]
.   .   Sibling: 31  Assign: = [line: 46]
.   .   .   Child: 0  Id: c [line: 46]
.   .   .   Child: 1  Op: [ [line: 46]
.   .   .   .   Child: 0  Id: cc [line: 46]
.   .   .   .   Child: 1  Const 3 [line: 46]
.   .   Sibling: 32  Assign: = [line: 47]
.   .   .   Child: 0  Id: cc [line: 47]
.   .   .   Child: 1  Op: [ [line: 47]
.   .   .   .   Child: 0  Id: c [line: 47]
.   .   .   .   Child: 1  Const 3 [line: 47]
.   .   Sibling: 33  Assign: = [line: 48]
.   .   .   Child: 0  Id: cc [line: 48]
.   .   .   Child: 1  Op: [ [line: 48]
.   .   .   .   Child: 0  Id: cc [line: 48]
.   .   .   .   Child: 1  Const 3 [line: 48]
.   .   Sibling: 34  Assign: = [line: 50]
.   .   .   Child: 0  Id: c [line: 50]
.   .   .   Child: 1  Const 'a' [line: 50]
.   .   Sibling: 35  Assign: = [line: 51]
.   .   .   Child: 0  Id: cc [line: 51]
.   .   .   Child: 1  Const 'b' [line: 51]
.   .   Sibling: 36  Assign: = [line: 52]
.   .   .   Child: 0  Op: [ [line: 52]
.   .   .   .   Child: 0  Id: cc [line: 52]
.   .   .   .   Child: 1  Const 0 [line: 52]
.   .   .   Child: 1  Const 'c' [line: 52]
.   .   Sibling: 37  Op: == [line: 54]
.   .   .   Child: 0  Id: aa [line: 54]
.   .   .   Child: 1  Id: aa [line: 54]
.   .   Sibling: 38  Op: == [line: 55]
.   .   .   Child: 0  Id: cc [line: 55]
.   .   .   Child: 1  Id: cc [line: 55]
.   .   Sibling: 39  Op: == [line: 56]
.   .   .   Child: 0  Id: aa [line: 56]
.   .   .   Child: 1  Id: cc [line: 56]
.   .   Sibling: 40  Op: == [line: 57]
.   .   .   Child: 0  Id: a [line: 57]
.   .   .   Child: 1  Id: aa [line: 57]
.   .   Sibling: 41  Op: == [line: 58]
.   .   .   Child: 0  Id: aa [line: 58]
.   .   .   Child: 1  Id: a [line: 58]
.   .   Sibling: 42  Op: == [line: 59]
.   .   .   Child: 0  Id: a [line: 59]
.   .   .   Child: 1  Id: a [line: 59]
.   .   Sibling: 43  Op: >= [line: 61]
.   .   .   Child: 0  Id: aa [line: 61]
.   .   .   Child: 1  Id: aa [line: 61]
.   .   Sibling: 44  Op: >= [line: 62]
.   .   .   Child: 0  Id: cc [line: 62]
.   .   .   Child: 1  Id: cc [line: 62]
.   .   Sibling: 45  Op: >= [line: 63]
.   .   .   Child: 0  Id: aa [line: 63]
.   .   .   Child: 1  Id: cc [line: 63]
.   .   Sibling: 46  Op: >= [line: 64]
.   .   .   Child: 0  Id: a [line: 64]
.   .   .   Child: 1  Id: aa [line: 64]
.   .   Sibling: 47  Op: >= [line: 65]
.   .   .   Child: 0  Id: aa [line: 65]
.   .   .   Child: 1  Id: a [line: 65]
.   .   Sibling: 48  Op: >= [line: 66]
.   .   .   Child: 0  Id: a [line: 66]
.   .   .   Child: 1  Id: a [line: 66]
.   .   Sibling: 49  Op: < [line: 68]
.   .   .   Child: 0  Id: aa [line: 68]
.   .   .   Child: 1  Id: aa [line: 68]
.   .   Sibling: 50  Op: < [line: 69]
.   .   .   Child: 0  Id: cc [line: 69]
.   .   .   Child: 1  Id: cc [line: 69]
.   .   Sibling: 51  Op: < [line: 70]
.   .   .   Child: 0  Id: aa [line: 70]
.   .   .   Child: 1  Id: cc [line: 70]
.   .   Sibling: 52  Op: < [line: 71]
.   .   .   Child: 0  Id: a [line: 71]
.   .   .   Child: 1  Id: aa [line: 71]
.   .   Sibling: 53  Op: < [line: 72]
.   .   .   Child: 0  Id: aa [line: 72]
.   .   .   Child: 1  Id: a [line: 72]
.   .   Sibling: 54  Op: < [line: 73]
.   .   .   Child: 0  Id: a [line: 73]
.   .   .   Child: 1  Id: a [line: 73]
.   .   Sibling: 55  Op: < [line: 75]
.   .   .   Child: 0  Id: c [line: 75]
.   .   .   Child: 1  Id: aa [line: 75]
ERROR(13): '=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(14): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(18): The operation 'chsign' does not work with arrays.
ERROR(19): The operation 'chsign' does not work with arrays.
ERROR(21): Cannot index nonarray 'a'.
ERROR(22): Cannot index nonarray 'a'.
ERROR(22): Array index is the unindexed array 'aa'.
ERROR(24): Array index is the unindexed array 'aa'.
ERROR(26): The operation 'sizeof' only works with arrays.
ERROR(29): The operation '?' does not work with arrays.
ERROR(31): The operation 'not' does not work with arrays.
ERROR(33): The operation '++' does not work with arrays.
ERROR(36): The operation '+' does not work with arrays.
ERROR(37): The operation '+' does not work with arrays.
ERROR(38): The operation '+' does not work with arrays.
ERROR(41): The operation 'and' does not work with arrays.
ERROR(42): The operation 'and' does not work with arrays.
ERROR(43): The operation 'and' does not work with arrays.
WARNING(45): Variable 'c' may be uninitialized when used here.
ERROR(45): Cannot index nonarray 'c'.
WARNING(46): Variable 'cc' may be uninitialized when used here.
ERROR(47): Cannot index nonarray 'c'.
ERROR(47): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(48): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(51): '=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(56): '==' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(57): '==' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(58): '==' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(63): '>=' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(64): '>=' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(65): '>=' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(70): '<' requires operands of the same type but lhs is type int and rhs is type char.
ERROR(71): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
ERROR(72): '<' requires both operands be arrays or not but lhs is an array and rhs is not an array.
ERROR(75): '<' requires operands of the same type but lhs is type char and rhs is type int.
ERROR(75): '<' requires both operands be arrays or not but lhs is not an array and rhs is an array.
Number of warnings: 2
Number of errors: 34
