Func: three returns type int [line: 2]
.   Child: 0  Parm: z is array of type int [line: 2]
.   Child: 1  Compound [line: 2]
.   .   Child: 1  Call: output [line: 3]
.   .   .   Child: 0  Op: [ [line: 3]
.   .   .   .   Child: 0  Id: z [line: 3]
.   .   .   .   Child: 1  Const 7 [line: 3]
.   .   Sibling: 1  Assign: = [line: 4]
.   .   .   Child: 0  Op: [ [line: 4]
.   .   .   .   Child: 0  Id: z [line: 4]
.   .   .   .   Child: 1  Const 7 [line: 4]
.   .   .   Child: 1  Const 666 [line: 4]
.   .   Sibling: 2  Call: outnl [line: 5]
.   .   Sibling: 3  Return [line: 7]
.   .   .   Child: 0  Op: [ [line: 7]
.   .   .   .   Child: 0  Id: z [line: 7]
.   .   .   .   Child: 1  Const 7 [line: 7]
Sibling: 1  Func: two returns type int [line: 11]
.   Child: 0  Parm: y is array of type int [line: 11]
.   Child: 1  Compound [line: 11]
.   .   Child: 1  Call: output [line: 12]
.   .   .   Child: 0  Op: [ [line: 12]
.   .   .   .   Child: 0  Id: y [line: 12]
.   .   .   .   Child: 1  Const 7 [line: 12]
.   .   Sibling: 1  Call: three [line: 13]
.   .   .   Child: 0  Id: y [line: 13]
.   .   Sibling: 2  Call: output [line: 14]
.   .   .   Child: 0  Op: [ [line: 14]
.   .   .   .   Child: 0  Id: y [line: 14]
.   .   .   .   Child: 1  Const 7 [line: 14]
.   .   Sibling: 3  Return [line: 16]
.   .   .   Child: 0  Op: [ [line: 16]
.   .   .   .   Child: 0  Id: y [line: 16]
.   .   .   .   Child: 1  Const 7 [line: 16]
Sibling: 2  Func: one returns type int [line: 20]
.   Child: 0  Parm: x is array of type int [line: 20]
.   Child: 1  Compound [line: 20]
.   .   Child: 1  Call: output [line: 21]
.   .   .   Child: 0  Op: [ [line: 21]
.   .   .   .   Child: 0  Id: x [line: 21]
.   .   .   .   Child: 1  Const 7 [line: 21]
.   .   Sibling: 1  Call: two [line: 22]
.   .   .   Child: 0  Id: x [line: 22]
.   .   Sibling: 2  Call: output [line: 23]
.   .   .   Child: 0  Op: [ [line: 23]
.   .   .   .   Child: 0  Id: x [line: 23]
.   .   .   .   Child: 1  Const 7 [line: 23]
.   .   Sibling: 3  Return [line: 25]
.   .   .   Child: 0  Op: [ [line: 25]
.   .   .   .   Child: 0  Id: x [line: 25]
.   .   .   .   Child: 1  Const 7 [line: 25]
Sibling: 3  Func: main returns type void [line: 29]
.   Child: 1  Compound [line: 30]
.   .   Child: 0  Var: w is array of type int [line: 31]
.   .   Child: 1  Assign: = [line: 33]
.   .   .   Child: 0  Op: [ [line: 33]
.   .   .   .   Child: 0  Id: w [line: 33]
.   .   .   .   Child: 1  Const 7 [line: 33]
.   .   .   Child: 1  Const 42 [line: 33]
.   .   Sibling: 1  Call: output [line: 34]
.   .   .   Child: 0  Call: one [line: 34]
.   .   .   .   Child: 0  Id: w [line: 34]
.   .   Sibling: 2  Call: output [line: 35]
.   .   .   Child: 0  Op: [ [line: 35]
.   .   .   .   Child: 0  Id: w [line: 35]
.   .   .   .   Child: 1  Const 7 [line: 35]
.   .   Sibling: 3  Call: outnl [line: 36]
ERROR(3): Symbol 'output' is not declared.
ERROR(5): Symbol 'outnl' is not declared.
ERROR(12): Symbol 'output' is not declared.
ERROR(14): Symbol 'output' is not declared.
ERROR(21): Symbol 'output' is not declared.
ERROR(23): Symbol 'output' is not declared.
ERROR(34): Symbol 'output' is not declared.
ERROR(35): Symbol 'output' is not declared.
ERROR(36): Symbol 'outnl' is not declared.
Number of warnings: 0
Number of errors: 9
